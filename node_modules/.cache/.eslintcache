[{"/Users/gimhojin/Desktop/soozipweb/kiwi/src/index.js":"1","/Users/gimhojin/Desktop/soozipweb/kiwi/src/reportWebVitals.js":"2","/Users/gimhojin/Desktop/soozipweb/kiwi/src/App.js":"3","/Users/gimhojin/Desktop/soozipweb/kiwi/src/Router.js":"4","/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/fbase.js":"5","/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/LoadingDisplay.js":"6","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/NavAndFooter/NavBarV2.js":"7","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/UserLanding/UserLandingPage.js":"8","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Make/MakePageV2.js":"9","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Landing/MainPageV2.js":"10","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Make/old/MakePage.js":"11","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Response/ResponsePage.js":"12","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Customer/CustomerPage.js":"13","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Landing/old/MainPage.js":"14","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Login/Register/RegisterPage.js":"15","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Login/Login/LoginPage.js":"16","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/unused/SubmitPage.js":"17","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/NewSection.js":"18","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Questions/FirstQuestions.js":"19","/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/ConfirmCustom.js":"20","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/NavAndFooter/Footer.js":"21","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Modal/LoadingModal.js":"22","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/UserContents.js":"23","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/UserSection.js":"24","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/UserNavBar.js":"25","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/UserFoot.js":"26","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Make/NavBarInMakePage/NavBarInMakePage.js":"27","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NavFooterSetting/EditSetting.js":"28","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Footer/MakeFooterV2.js":"29","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NewSectionMake.js":"30","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/NavBar/MakeNavigationV2.js":"31","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/baseTypes.js":"32","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/TextAuto.js":"33","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/tools/Icons.js":"34","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Landing/tools/AskLoginModal.js":"35","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Response/MadeLandingCard.js":"36","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Response/ResponseNavBar.js":"37","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Response/ResultTopTitle.js":"38","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Response/ChromeTapBar.js":"39","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Response/ResultTable.js":"40","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Customer/QnA.js":"41","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Customer/PersonalInformation.js":"42","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Customer/Term.js":"43","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/NavAndFooter/NavBar/NavBar.js":"44","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/FeaturesSection.js":"45","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/DetailSection.js":"46","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/HeroSection.js":"47","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/ReviewSection.js":"48","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/AppDownloadSection.js":"49","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/QnaSection.js":"50","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/CtaSection.js":"51","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/VideoSection.js":"52","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/ApplySection.js":"53","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/GallerySection.js":"54","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/MockupSection.js":"55","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/TextSection.js":"56","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/tools/animations.js":"57","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NavFooterSetting/EditFooterSection.js":"58","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/NavBar/NaviConatainer.js":"59","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NavFooterSetting/EditNaviSection.js":"60","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NavFooterSetting/EditContents.js":"61","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditMockupSection.js":"62","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditVideoSection.js":"63","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditTextSection.js":"64","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditReviewSection.js":"65","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditGallerySection.js":"66","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditAppDownloadSection.js":"67","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditQnaSection.js":"68","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditHeroSection.js":"69","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditDetailSection.js":"70","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditCtaSection.js":"71","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditFeaturesSection.js":"72","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditApplySection.js":"73","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Footer/FTemplate.js":"74","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/func/FuncContentImg.js":"75","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/func/FuncTopBar.js":"76","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Modal/CheckModal.js":"77","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/VideoSection.js":"78","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/SelectCustom.js":"79","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/OpenCloseCustom.js":"80","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/MockupSection.js":"81","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/AnimationCustom.js":"82","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/OnOffCustom.js":"83","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/InputCustom.js":"84","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/SingleColorCustom.js":"85","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/TextSection.js":"86","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/RadioCustom.js":"87","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/ColorCustom.js":"88","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/GallerySection.js":"89","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/QnaSection.js":"90","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/CtaSection.js":"91","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Login/LoginModal.js":"92","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/FeaturesSection.js":"93","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/ReviewSection.js":"94","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/HeroSection.js":"95","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/DetailSection.js":"96","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/AnimationDiv.js":"97","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/Element.js":"98","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/TitleDesc.js":"99","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/BoxCustom.js":"100","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/SliderCustom.js":"101","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/func/FuncContentVideo.js":"102","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/func/FuncYoutubeLink.js":"103","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/func/TextSizeCustom.js":"104","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/AddAppButton.js":"105","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/Contents.js":"106","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/ElementsTable.js":"107","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/EditDesign.js":"108","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/Layout.js":"109","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/Element.js":"110","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/TitleDesc.js":"111","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/AnimationDiv.js":"112","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/TextAuto.js":"113","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/QnaOpenClose.js":"114","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/ReturnButton.js":"115","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/ImageOrSlide.js":"116","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/IconTable.js":"117","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/CheckBoxCustom.js":"118","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/FuncImageCarousel.js":"119","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/func/FuncSlideImg.js":"120","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/EditNotice.js":"121","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/AddGhostButton.js":"122","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/AddCtaButton.js":"123","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/ApplyInputCustom.js":"124","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/InnerTemplates.js":"125","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/AddMockup.js":"126","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Modal/AddingSection.js":"127","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/ResponsiveCustom.js":"128","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/ReturnButton.js":"129","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/ImageOrSlide.js":"130","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/QnaOpenClose.js":"131","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/func/FuncImageCarousel.js":"132","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/LayoutRFG.js":"133"},{"size":586,"mtime":1644564717776,"results":"134","hashOfConfig":"135"},{"size":362,"mtime":1643169385982,"results":"136","hashOfConfig":"135"},{"size":1284,"mtime":1644911312453,"results":"137","hashOfConfig":"135"},{"size":3090,"mtime":1644912845834,"results":"138","hashOfConfig":"135"},{"size":1279,"mtime":1643169385983,"results":"139","hashOfConfig":"135"},{"size":499,"mtime":1644824627917,"results":"140","hashOfConfig":"135"},{"size":2202,"mtime":1644564717780,"results":"141","hashOfConfig":"135"},{"size":4224,"mtime":1644892534567,"results":"142","hashOfConfig":"135"},{"size":16708,"mtime":1644922350397,"results":"143","hashOfConfig":"135"},{"size":12417,"mtime":1644824627911,"results":"144","hashOfConfig":"135"},{"size":52972,"mtime":1643169385981,"results":"145","hashOfConfig":"135"},{"size":7796,"mtime":1644892162422,"results":"146","hashOfConfig":"135"},{"size":3340,"mtime":1644836376393,"results":"147","hashOfConfig":"135"},{"size":7717,"mtime":1644909115971,"results":"148","hashOfConfig":"135"},{"size":6979,"mtime":1644824627913,"results":"149","hashOfConfig":"135"},{"size":5769,"mtime":1644836376393,"results":"150","hashOfConfig":"135"},{"size":1696,"mtime":1644824627901,"results":"151","hashOfConfig":"135"},{"size":7316,"mtime":1644913175934,"results":"152","hashOfConfig":"135"},{"size":21000,"mtime":1644917922777,"results":"153","hashOfConfig":"135"},{"size":2192,"mtime":1644887660118,"results":"154","hashOfConfig":"135"},{"size":1375,"mtime":1644824627915,"results":"155","hashOfConfig":"135"},{"size":1440,"mtime":1644824627897,"results":"156","hashOfConfig":"135"},{"size":869,"mtime":1644824627910,"results":"157","hashOfConfig":"135"},{"size":4302,"mtime":1644892589522,"results":"158","hashOfConfig":"135"},{"size":4698,"mtime":1644824627910,"results":"159","hashOfConfig":"135"},{"size":137,"mtime":1644824627910,"results":"160","hashOfConfig":"135"},{"size":5949,"mtime":1644913857268,"results":"161","hashOfConfig":"135"},{"size":21947,"mtime":1644913036030,"results":"162","hashOfConfig":"135"},{"size":1159,"mtime":1644887362181,"results":"163","hashOfConfig":"135"},{"size":8362,"mtime":1644802533524,"results":"164","hashOfConfig":"135"},{"size":3074,"mtime":1644551433655,"results":"165","hashOfConfig":"135"},{"size":14678,"mtime":1644916643942,"results":"166","hashOfConfig":"135"},{"size":1419,"mtime":1644909114555,"results":"167","hashOfConfig":"135"},{"size":778,"mtime":1643169385977,"results":"168","hashOfConfig":"135"},{"size":2981,"mtime":1644824627912,"results":"169","hashOfConfig":"135"},{"size":5440,"mtime":1644887408056,"results":"170","hashOfConfig":"135"},{"size":449,"mtime":1644824627902,"results":"171","hashOfConfig":"135"},{"size":5074,"mtime":1644887408057,"results":"172","hashOfConfig":"135"},{"size":1207,"mtime":1644824627901,"results":"173","hashOfConfig":"135"},{"size":2834,"mtime":1644887408057,"results":"174","hashOfConfig":"135"},{"size":2448,"mtime":1643169385968,"results":"175","hashOfConfig":"135"},{"size":8149,"mtime":1643169385968,"results":"176","hashOfConfig":"135"},{"size":8636,"mtime":1643169385968,"results":"177","hashOfConfig":"135"},{"size":1256,"mtime":1643169385981,"results":"178","hashOfConfig":"135"},{"size":3144,"mtime":1644907400484,"results":"179","hashOfConfig":"135"},{"size":1516,"mtime":1644894012708,"results":"180","hashOfConfig":"135"},{"size":5699,"mtime":1644895175391,"results":"181","hashOfConfig":"135"},{"size":5979,"mtime":1644907692723,"results":"182","hashOfConfig":"135"},{"size":1887,"mtime":1644823596802,"results":"183","hashOfConfig":"135"},{"size":2101,"mtime":1644903368987,"results":"184","hashOfConfig":"135"},{"size":2065,"mtime":1644909112713,"results":"185","hashOfConfig":"135"},{"size":2014,"mtime":1644823596805,"results":"186","hashOfConfig":"135"},{"size":1846,"mtime":1644802533527,"results":"187","hashOfConfig":"135"},{"size":5337,"mtime":1644915948878,"results":"188","hashOfConfig":"135"},{"size":5876,"mtime":1644836376390,"results":"189","hashOfConfig":"135"},{"size":1791,"mtime":1644836376391,"results":"190","hashOfConfig":"135"},{"size":467,"mtime":1643169385977,"results":"191","hashOfConfig":"135"},{"size":10259,"mtime":1644887362179,"results":"192","hashOfConfig":"135"},{"size":4333,"mtime":1644892841770,"results":"193","hashOfConfig":"135"},{"size":8769,"mtime":1644836376387,"results":"194","hashOfConfig":"135"},{"size":16732,"mtime":1644912976217,"results":"195","hashOfConfig":"135"},{"size":1984,"mtime":1644836376385,"results":"196","hashOfConfig":"135"},{"size":6576,"mtime":1644564804602,"results":"197","hashOfConfig":"135"},{"size":1572,"mtime":1644416187002,"results":"198","hashOfConfig":"135"},{"size":7673,"mtime":1644907471512,"results":"199","hashOfConfig":"135"},{"size":4805,"mtime":1644906908587,"results":"200","hashOfConfig":"135"},{"size":2325,"mtime":1644370674685,"results":"201","hashOfConfig":"135"},{"size":3408,"mtime":1644909107411,"results":"202","hashOfConfig":"135"},{"size":8077,"mtime":1644823596798,"results":"203","hashOfConfig":"135"},{"size":2431,"mtime":1644370674686,"results":"204","hashOfConfig":"135"},{"size":3779,"mtime":1644802533521,"results":"205","hashOfConfig":"135"},{"size":6218,"mtime":1644907485997,"results":"206","hashOfConfig":"135"},{"size":2695,"mtime":1644802533521,"results":"207","hashOfConfig":"135"},{"size":6528,"mtime":1644887362180,"results":"208","hashOfConfig":"135"},{"size":1532,"mtime":1644915982263,"results":"209","hashOfConfig":"135"},{"size":832,"mtime":1644416811921,"results":"210","hashOfConfig":"135"},{"size":4218,"mtime":1643169385974,"results":"211","hashOfConfig":"135"},{"size":1528,"mtime":1644824627907,"results":"212","hashOfConfig":"135"},{"size":2028,"mtime":1644315435233,"results":"213","hashOfConfig":"135"},{"size":3919,"mtime":1644901989665,"results":"214","hashOfConfig":"135"},{"size":458,"mtime":1644824627905,"results":"215","hashOfConfig":"135"},{"size":3127,"mtime":1644416187005,"results":"216","hashOfConfig":"135"},{"size":1258,"mtime":1644416187006,"results":"217","hashOfConfig":"135"},{"size":1653,"mtime":1644564804604,"results":"218","hashOfConfig":"135"},{"size":4552,"mtime":1644564804605,"results":"219","hashOfConfig":"135"},{"size":453,"mtime":1644824627906,"results":"220","hashOfConfig":"135"},{"size":11716,"mtime":1644895687003,"results":"221","hashOfConfig":"135"},{"size":5169,"mtime":1644564717766,"results":"222","hashOfConfig":"135"},{"size":2229,"mtime":1644824627904,"results":"223","hashOfConfig":"135"},{"size":1470,"mtime":1644824627905,"results":"224","hashOfConfig":"135"},{"size":1625,"mtime":1644824627903,"results":"225","hashOfConfig":"135"},{"size":5751,"mtime":1644824627892,"results":"226","hashOfConfig":"135"},{"size":1931,"mtime":1644907501996,"results":"227","hashOfConfig":"135"},{"size":3661,"mtime":1644907474693,"results":"228","hashOfConfig":"135"},{"size":1209,"mtime":1644824627905,"results":"229","hashOfConfig":"135"},{"size":1030,"mtime":1644824627904,"results":"230","hashOfConfig":"135"},{"size":685,"mtime":1644894159644,"results":"231","hashOfConfig":"135"},{"size":4062,"mtime":1644918583437,"results":"232","hashOfConfig":"135"},{"size":2492,"mtime":1644893355698,"results":"233","hashOfConfig":"135"},{"size":255,"mtime":1644315435228,"results":"234","hashOfConfig":"135"},{"size":2304,"mtime":1644416187006,"results":"235","hashOfConfig":"135"},{"size":900,"mtime":1644823596801,"results":"236","hashOfConfig":"135"},{"size":1798,"mtime":1644564735070,"results":"237","hashOfConfig":"135"},{"size":2800,"mtime":1644564804607,"results":"238","hashOfConfig":"135"},{"size":1579,"mtime":1644551433632,"results":"239","hashOfConfig":"135"},{"size":28268,"mtime":1644915891706,"results":"240","hashOfConfig":"135"},{"size":1180,"mtime":1644564804603,"results":"241","hashOfConfig":"135"},{"size":9575,"mtime":1644564804602,"results":"242","hashOfConfig":"135"},{"size":5765,"mtime":1644901807354,"results":"243","hashOfConfig":"135"},{"size":1478,"mtime":1644824627907,"results":"244","hashOfConfig":"135"},{"size":1589,"mtime":1644892573570,"results":"245","hashOfConfig":"135"},{"size":685,"mtime":1644824627907,"results":"246","hashOfConfig":"135"},{"size":1041,"mtime":1644824627909,"results":"247","hashOfConfig":"135"},{"size":3486,"mtime":1644824627908,"results":"248","hashOfConfig":"135"},{"size":7532,"mtime":1644824627909,"results":"249","hashOfConfig":"135"},{"size":2560,"mtime":1644824627908,"results":"250","hashOfConfig":"135"},{"size":4917,"mtime":1644917656972,"results":"251","hashOfConfig":"135"},{"size":1090,"mtime":1644315435229,"results":"252","hashOfConfig":"135"},{"size":2506,"mtime":1644909147763,"results":"253","hashOfConfig":"135"},{"size":1001,"mtime":1644916004057,"results":"254","hashOfConfig":"135"},{"size":1561,"mtime":1644823596799,"results":"255","hashOfConfig":"135"},{"size":3665,"mtime":1644564717764,"results":"256","hashOfConfig":"135"},{"size":3610,"mtime":1644836376386,"results":"257","hashOfConfig":"135"},{"size":1809,"mtime":1644823596800,"results":"258","hashOfConfig":"135"},{"size":1161,"mtime":1643943092536,"results":"259","hashOfConfig":"135"},{"size":9560,"mtime":1644836376386,"results":"260","hashOfConfig":"135"},{"size":3707,"mtime":1644802533527,"results":"261","hashOfConfig":"135"},{"size":559,"mtime":1644315435233,"results":"262","hashOfConfig":"135"},{"size":5588,"mtime":1644908572748,"results":"263","hashOfConfig":"135"},{"size":7335,"mtime":1644908818373,"results":"264","hashOfConfig":"135"},{"size":3999,"mtime":1644909139636,"results":"265","hashOfConfig":"135"},{"size":2502,"mtime":1644909133840,"results":"266","hashOfConfig":"135"},{"size":2164,"mtime":1644907490381,"results":"267","hashOfConfig":"135"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},"8v8zpl",{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"270"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"270"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"270"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"270"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"270"},{"filePath":"290","messages":"291","errorCount":1,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"292","messages":"293","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"270"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"270"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"270"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"270"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"270"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"270"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"270"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"270"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"270"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"270"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"270"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"270"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"270"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"270"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"270"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"270"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"270"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"270"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"270"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"270"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"270"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"270"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"270"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"270"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"270"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"270"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"270"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"270"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"270"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"270"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"270"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"270"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"270"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"270"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"270"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"270"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"270"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"270"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"270"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"270"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"270"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"270"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"270"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"270"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"270"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"270"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"270"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"270"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"270"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"270"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"270"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"270"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"270"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"270"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"270"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"484"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"270"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"270"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493","usedDeprecatedRules":"270"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"270"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"270"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"270"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"270"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"270"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511","usedDeprecatedRules":"270"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514","usedDeprecatedRules":"270"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"517","usedDeprecatedRules":"270"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"520","usedDeprecatedRules":"270"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"270"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"270"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"270"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"270"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"270"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"270"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"270"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"546","usedDeprecatedRules":"270"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"270"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"554","usedDeprecatedRules":"270"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559","usedDeprecatedRules":"270"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"270"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"270"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572","usedDeprecatedRules":"270"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"270"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578","usedDeprecatedRules":"270"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"270"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"586","usedDeprecatedRules":"270"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"270"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"592","usedDeprecatedRules":"270"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"595","usedDeprecatedRules":"270"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"598","usedDeprecatedRules":"270"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"601","usedDeprecatedRules":"270"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604","usedDeprecatedRules":"270"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"270"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612","usedDeprecatedRules":"270"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"615","usedDeprecatedRules":"270"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"622","usedDeprecatedRules":"270"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"270"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"630","usedDeprecatedRules":"270"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"633","usedDeprecatedRules":"270"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"636","usedDeprecatedRules":"270"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639","usedDeprecatedRules":"270"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},"/Users/gimhojin/Desktop/soozipweb/kiwi/src/index.js",[],["642","643"],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/reportWebVitals.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/App.js",["644","645","646"],"import logo from './logo.svg';\nimport React, {useState, useEffect} from 'react';\nimport './App.css';\nimport AppRouter from './Router';\nimport NavBarV2 from './pages/NavAndFooter/NavBarV2';\nimport { authService } from './tools/fbase'\nimport {RecoilRoot} from 'recoil';\nimport LoadingDisplay from './tools/LoadingDisplay'\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    console.log(\"테스트\", window.location.host.split(\".\")[0]);\n    // 유저가 제작한 랜딩페이지에 들어가는 사람들까지 로그인 검사를 하면 속도가 느려지니까\n    if(window.location.host.split(\".\")[0] === \"surfee\" || window.location.host.split(\".\")[0] === \"localhost:3000\"){\n      authService.onAuthStateChanged((user) => {\n        if(user){\n          setIsLoggedIn(true)\n          setUserObj(user.multiFactor.user);\n        }else{\n          setIsLoggedIn(false)\n        }\n        setInit(true)\n      })\n    }else{\n      setInit(true)\n    }\n  })\n\n  return (\n    <>\n    <RecoilRoot className=\"App\">\n      {init ? <AppRouter userObj={userObj} isLoggedIn={isLoggedIn} /> : <LoadingDisplay />}\n    </RecoilRoot>\n    </>\n  );\n}\n\nexport default App;\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/Router.js",["647","648","649","650"],"import React, {useState, useEffect} from 'react';\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport './App.css';\nimport LoginPage from './pages/Login/Login/LoginPage'\nimport MainPage from './pages/Landing/old/MainPage';\nimport UserLandingPage from './pages/UserLanding/UserLandingPage';\nimport MainPageV2 from './pages/Landing/MainPageV2';\nimport MakePage from './pages/Make/old/MakePage';\nimport MakePageV2 from './pages/Make/MakePageV2';\nimport NavBarV2 from './pages/NavAndFooter/NavBarV2';\nimport ResponsePage from './pages/Response/ResponsePage';\nimport RegisterPage from './pages/Login/Register/RegisterPage'\nimport SubmitPage from './components/Make/unused/SubmitPage';\nimport CustomerPage from './pages/Customer/CustomerPage'\nimport { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\n\nconst AppRouter = ({userObj, isLoggedIn}) => {\n\n    if (window.location.host.split(\".\")[0] !== \"surfee\" && window.location.host.split(\".\")[0] !== 'localhost:3000') {\n        return(\n            <Router history={history}>\n                <>\n                <div className=\"Container\" style={{ minHeight: 'calc(100vh - 80px)', zIndex:-1 }}>\n                    <Switch>\n                        <Route path=\"/\" component={UserLandingPage} />\n                    </Switch>\n                </div>\n                </> \n            </Router>\n        )\n    }else{\n        return(\n            <Router history={history}>\n                <>\n                <div className=\"Container\" style={{ minHeight: 'calc(100vh - 80px)', zIndex:-1 }}>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <MainPage history={history}/>\n                    </Route>\n                    <Route exact path=\"/v2\">\n                        <MainPageV2 history={history} isLoggedIn={isLoggedIn} userObj={userObj}/>\n                    </Route>\n                    {/* <Route path=\"/make\">\n                        <MakePage history={history}/>\n                    </Route>             */}\n                    <Route path=\"/response\">\n                        <ResponsePage history={history} userObj={userObj}/> \n                    </Route>\n                    <Route path=\"/submit\">\n                        <SubmitPage history={history}/>\n                    </Route>\n                    <Route path=\"/make\">\n                        <MakePageV2 history={history} isLoggedIn={isLoggedIn} userObj={userObj}/>\n                    </Route>\n                    <Route path=\"/login\">\n                        <LoginPage history={history} isLoggedIn={isLoggedIn}/>\n                    </Route>\n                    <Route path=\"/customer\">\n                        <CustomerPage history={history} isLoggedIn={isLoggedIn}/>\n                    </Route>\n                    <Route path=\"/register\">\n                        <RegisterPage history={history} isLoggedIn={isLoggedIn}/>\n                    </Route>\n                </Switch>\n                </div>\n                </> \n            </Router>\n        )\n    }\n}\nexport default AppRouter;","/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/fbase.js",["651"],"import firebase from \"firebase/compat/app\"\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// import { getAnalytics } from \"firebase/analytics\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/storage\";\nimport \"firebase/compat/auth\"\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDH_xQF-kBsVMEDwLNDJubGrzOp0Qnr_iU\",\n  authDomain: \"kiwi-d5dd3.firebaseapp.com\",\n  projectId: \"kiwi-d5dd3\",\n  storageBucket: \"kiwi-d5dd3.appspot.com\",\n  messagingSenderId: \"335393250887\",\n  appId: \"1:335393250887:web:231c18d1aa6d4356891b62\",\n  measurementId: \"G-7FJX546NWQ\"\n};\n\n// Initialize Firebase\n// export const app = firebase.initializeApp(firebaseConfig);\n// export const firebaseInstance = firebase;\n// const analytics = getAnalytics(app);\n// export const dbService = app.firestore();\n// export const stService = app.storage();\n\nexport const app = firebase.initializeApp(firebaseConfig);\nexport const authService = app.auth();\nexport const firebaseInstance = firebase;\nexport const dbService = firebase.firestore();\nexport const stService = app.storage();","/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/LoadingDisplay.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/NavAndFooter/NavBarV2.js",["652","653"],"import React, {useState, useEffect} from 'react'\nimport './NavBarV2.css'\nimport {Link} from 'react-router-dom';\nimport {authService} from '../../tools/fbase'\n\n\nfunction NavBarV2({history, scrollPosition, isLoggedIn}) {\n\n    const onLogout = () => {\n        localStorage.removeItem('name');\n        localStorage.removeItem('job');\n        authService.signOut();\n        alert(\"로그아웃 되셨습니다.\");\n        history.push('/');\n        history.go();\n    }\n    \n    return (\n        <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center', width:'100%'}}>\n            <div className=\"nav-bar-container-v2\">\n                <div className=\"nav-bar-left-v2\">\n                    <Link to=\"/v2\" className=\"nav-bar-title-v2\" style={{cursor:'pointer', color:'#6a63f7'}}>\n                        Surfee\n                    </Link>\n                    {/* <Link to=\"/info\" className=\"nav-left-text\" style={{marginLeft:'4vw'}}>\n                        제품소개\n                    </Link> */}\n                    <Link to=\"/customer\" className=\"nav-left-text\">\n                        문의하기\n                    </Link>\n                    {isLoggedIn ? \n                    <>\n                    <span className=\"nav-left-text\" onClick={() => onLogout()}>\n                        로그아웃\n                    </span>\n                    </> : \n                    <>\n                        <Link to=\"/login\" className=\"nav-left-text\">\n                            로그인\n                        </Link>\n                        <Link to=\"/register\" className=\"nav-left-text\">\n                            회원가입\n                        </Link>\n                    </>\n                    }\n                </div>\n                <div className=\"nav-on-v2\">\n                    <button className=\"nav-button-square\" onClick={() => window.scrollTo(0,document.body.scrollHeight)}>무료로 체험하기</button>\n                </div>\n            </div>\n            <div style={{borderBottom: '2px solid black', width:`${(scrollPosition/window.innerHeight)*63}%`, position:'fixed', top:'58px', zIndex:'12'}}></div>\n        </div>\n    )\n}\n\nexport default NavBarV2\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/UserLanding/UserLandingPage.js",["654","655"],"import React, { useState, useEffect } from 'react';\nimport { dbService } from '../../tools/fbase';\nimport LoadingDisplay from '../../tools/LoadingDisplay'\nimport ReactGa from 'react-ga'\nimport UserNavBar from '../../components/UserLandingPage/UserNavBar'\nimport UserContents from '../../components/UserLandingPage/UserContents'\nimport UserFoot from '../../components/UserLandingPage/UserFoot'\nimport UserSection from '../../components/UserLandingPage/Sections/UserSection'\n\nexport const UserContext = React.createContext({\n    state : {},\n    action : {}\n});\n\nconst UserLandingPage = (props) => {\n    const [ item, setItem ] = useState();\n    const [ setting, setSetting ] = useState();\n    const [ loading, setLoading ] = useState(false);\n\n    const contextValue = {\n        state: {setting},\n        action : {setSetting},\n    }\n\n    const favicon = document.getElementById(\"favicon\");\n\n    const urltitle = document.getElementById(\"urltitle\");\n\n    useEffect(() => {\n        loadData()\n        ReactGa.initialize('UA-213792742-1');\n        // to report page view\n        ReactGa.pageview(`/${window.location.host.split(\".\")[0]}`);\n    }, [loading])\n\n    const loadData = async () => {\n        const userOrder = await dbService\n            .collection(\"published-page\")\n            .where(\"urlId\", \"==\", window.location.host.split(\".\")[0])\n            .get(); // uid를 creatorId로 줬었으니까.\n\n        let orderData = userOrder.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n\n        console.log(orderData)\n        console.log(window.location.host.split(\".\")[0])\n\n        favicon.href = orderData[0].setting.faviconAttachment;   \n        urltitle.innerText = orderData[0].setting.title;\n        setItem( orderData[0] );\n        setSetting( orderData[0].setting );\n        setLoading(true);\n    }\n\n    const CustomCta = ({value, onClick, style, children}) => {\n        return(\n            <div style={{\n                ...style,\n                display: 'flex', justifyContent:'center', alignItems: 'center',\n                padding:'10px 10.5px',\n                borderRadius:`${item.setting.cta.borderRadius}px`,\n                backgroundColor:`${item.setting.cta.backgroundColor}`,\n                color:`${item.setting.cta.color}`,\n                boxShadow:`${item.setting.cta.shadow ? '1px 2px 4px rgba(0,0,0,0.2)' : 'none'}`,\n                border:`${item.setting.cta.border ? `1px solid ${item.setting.cta.borderColor}` : 'none'}`\n            }} onClick={() => onClick}>\n                <input className=\"text-input-flex ti\" disabled value={ children } style={{fontFamily:`${item.setting.smallFont}`}}/>\n            </div>\n        )\n    }\n\n    const CustomGhost = (props) => {\n        return(\n            <div style={{\n                ...props.style,\n                display: 'flex', justifyContent:'center', alignItems: 'center',\n                padding:'10px 10.5px',\n                borderRadius:`${item.setting.ghost.borderRadius}px`,\n                backgroundColor:`${item.setting.ghost.backgroundColor}`,\n                color:`${item.setting.ghost.color}`,\n                boxShadow:`${item.setting.cta.shadow ? '1px 2px 4px rgba(0,0,0,0.2)' : 'none'}`,\n                border:`${item.setting.ghost.border ? `1px solid ${item.setting.ghost.borderColor}` : 'none'}`\n            }} onClick={() => props.onClick}>\n                <input className=\"text-input-flex ti\" disabled value={ props.children } style={{fontFamily:`${item.setting.smallFont}`}}/>\n            </div>\n        )\n    }\n\n    return (\n        <UserContext.Provider value={contextValue}>\n        {loading ? \n        <div>\n            <UserNavBar navi={item.navi} setting={item.setting} CustomCta={CustomCta} CustomGhost={CustomGhost} />\n            <div style={{paddingTop:`${item.navi.fixed ? `${item.navi.height}px` : '0px'}`}}>\n                <UserContents contents={item.contents} setting={item.setting} CustomCta={CustomCta} CustomGhost={CustomGhost}/>\n            </div>\n            <UserFoot foot={item.foot} setting={item.setting}/>\n        </div> \n            : \n        <>\n            <LoadingDisplay />\n        </>}\n        </UserContext.Provider>\n    )\n    \n}\n\nexport default UserLandingPage\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Make/MakePageV2.js",["656","657","658","659","660","661","662","663","664","665"],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Landing/MainPageV2.js",["666","667","668","669","670","671"],"import React, {useEffect,useRef, useState} from 'react'\nimport './old/MainPage.css'\nimport './MainPageV2.css'\nimport {Link} from 'react-router-dom';\nimport { dbService } from '../../tools/fbase'\nimport Footer from '../NavAndFooter/Footer'\nimport AccessAlarmsIcon from '@mui/icons-material/AccessAlarms';\nimport { ToolOutlined, PieChartOutlined, MobileOutlined, GroupOutlined, FormatPainterOutlined, BranchesOutlined, PicLeftOutlined, AlertOutlined, PictureOutlined, FormOutlined } from '@ant-design/icons';\nimport { motion } from \"framer-motion\"\nimport Icons from '../../components/Make/tools/Icons'\nimport AskLoginModal from './tools/AskLoginModal'\nimport NavBarV2 from '../NavAndFooter/NavBarV2'\n\nimport s1 from '../../tools/img/surfee1.png';\n\nconst ourInfos = [\n    {\n        icon : <ToolOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"노코딩 툴\",\n    },\n    {\n        icon : <PieChartOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"데이터 시각화\",\n    },\n    {\n        icon : <MobileOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"반응형\",\n    },\n    {\n        icon : <BranchesOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"도메인 연결\",\n    },\n    { \n        icon : <AlertOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"CTA 제공\",\n    },\n    {\n        icon : <PictureOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"favicon 커스텀\",\n    },\n    {\n        icon : <FormOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"섹션별 커스텀\",\n    },\n    {\n        icon : <PicLeftOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"템플릿 제공\",\n    },\n    {\n        icon : <GroupOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"네비바 / 푸터바 커스텀\",\n    },\n    {\n        icon : <FormatPainterOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"폰트 크기, 색상 변경\",\n    },\n];\n\nfunction MainPageV2({history, isLoggedIn, userObj}) {\n    const [email,setEmail] = useState(\"\");\n    const [askOpen,setAskOpen] = useState(false);\n    const targets = useRef(null)\n    \n    const scrollDown = () => {\n        targets.current.scrollIntoView({behavior: 'smooth'})\n    }\n\n    const ourInfosTable = ourInfos.map((item, index) => {\n        return(\n            <div className=\"one-desc-func\" key={index}>\n                <div className=\"func-content\">\n                    {item.icon}\n                </div>\n                <div className=\"func-content\">\n                    {item.desc}\n                </div>\n            </div>\n        )\n    })\n\n    const checkLoggedIn = () => {\n        if(isLoggedIn === false){\n            alert(\"로그인하셔야 이용가능한 페이지입니다.\");\n        }else{\n            history.push('/#/response');\n            history.go();\n            return;\n        }\n    }\n\n    const SomeoneClickMoveToMake = async () => {\n        const isNew = localStorage.getItem('isNew');\n        if(isNew === null){\n            localStorage.setItem('isNew', false);\n            if(userObj !== null){\n                dbService.collection('SomeoneClickMoveToMake').add({\n                    name:userObj.displayName,\n                    email:userObj.email,\n                    new:true,\n                    createdAt: new Date(),\n                })\n            }else{\n                dbService.collection('SomeoneClickMoveToMake').add({\n                    new:true,\n                    createdAt: new Date(),\n                })\n            }\n        }else{\n            if(userObj !== null){\n                dbService.collection('SomeoneClickMoveToMake').add({\n                    name:userObj.displayName,\n                    email:userObj.email,\n                    new:false,\n                    createdAt: new Date(),\n                })\n            }else{\n                dbService.collection('SomeoneClickMoveToMake').add({\n                    new:false,\n                    createdAt: new Date(),\n                })\n            }\n        }\n    }\n\n    const variants = {\n        hidden: { opacity: 0 },\n        visible: { opacity: 1 },\n      }\n\n    return (\n        <>\n        <NavBarV2 history={history} isLoggedIn={isLoggedIn} />\n        <div className=\"main-page-container\">\n            <div className=\"main-page-section-topbottom\" style={{backgroundColor:'white'}}>\n                <div className=\"main-section-left-topbottom\" style={{color:'black'}}>\n                    <span className=\"one-section-big-topbottom\">\n                        '타이핑'과 '이미지'로만<br/>\n                        빠르고 간단하게 랜딩페이지를 제작해보세요\n                        {/* <Icons /> */}\n                    </span>\n                    {/* <span className=\"one-section-small\">\n                    신규 서비스와 이벤트부터 스타트업 아이템 검증까지,<br/>\n                    코딩없이 랜딩페이지를 만들고 실시간 데이터 분석을 통해 <br/>\n                    최고의 고객 전환율을 경험해 보세요.\n                    </span> */}\n                    <button className=\"apply-button-v2\" onClick={scrollDown} style={{height:'60px', width:'200px', borderRadius:'30px', marginTop:'20px'}}>\n                        무료로 체험하기\n                    </button>\n                </div>\n                <motion.div className=\"main-section-right-topbottom\" \n                    initial=\"hidden\" \n                    animate=\"visible\" \n                    variants={variants}>\n                    <img src={s1} className=\"section-one-image-main-topbottom\" />\n                </motion.div>\n            </div>\n            \n            <div className=\"main-page-section-topbottom\" style={{backgroundColor:\"white\"}}>\n                <div className=\"main-section-left-topbottom\">\n                    <span className=\"one-section-big-topbottom\">\n                        랜딩페이지 제작을 가장 효율적으로!\n                    </span>\n                    <span className=\"one-section-small-topbottom\">\n                        <span className=\"one-desc-card\">\n                            <div className=\"card-content\">\n                                이미지\n                            </div>\n                            <div className=\"card-content\" style={{fontSize:'2em', fontFamily:'Pretendard-ExtraBold'}}>\n                                코딩도 디자인도 필요없는<br/>One-stop 랜딩페이지 제작툴\n                            </div>\n                            <div className=\"card-content\" style={{color:'rgb(30,30,30)', fontSize:'1.5em'}}>\n                                개발자 없이도, 외주 없이도 직접<br/>\n                                템플릿을 고르고 블로그를 꾸미듯<br/>\n                                쉽고 빠르게 랜딩페이지를 만들어 보세요.\n                            </div>\n                            <div className=\"card-content-link\">\n                                <Link to=\"\" className=\"card-link\">지금 바로 만들기</Link>\n                            </div>\n                        </span>\n                        <span className=\"one-desc-card\">\n                            <div className=\"card-content\">\n                                이미지\n                            </div>\n                            <div className=\"card-content\" style={{fontSize:'2em', fontFamily:'Pretendard-ExtraBold'}}>\n                                잠재 유저 분석을 위한<br/>유저 데이터를 직관적으로!\n                            </div>\n                            <div className=\"card-content\" style={{color:'rgb(30,30,30)', fontSize:'1.5em'}}>\n                                조회수, 사용자 수, 전환율(CVR), 유입 채널 등<br/>\n                                고객의 반응을 확인할 수 있는 유의미한 데이터를<br/>\n                                개발자에게 요청할 필요없이 직접 확인해 보세요.\n                            </div>\n                            <div className=\"card-content-link\">\n                                <Link to=\"\" className=\"card-link\">지금 바로 만들기</Link>\n                            </div>\n                        </span>\n                        <span className=\"one-desc-card\">\n                            <div className=\"card-content\">\n                                이미지\n                            </div>\n                            <div className=\"card-content\" style={{fontSize:'2em', fontFamily:'Pretendard-ExtraBold'}}>\n                                모바일 환경에서도<br/>불편함 없이, 반응형으로!\n                            </div>\n                            <div className=\"card-content\" style={{color:'rgb(30,30,30)', fontSize:'1.5em'}}>\n                                Surfee를 통해 제작한 랜딩페이지는<br/>\n                                모바일 환경에서도 최적화된<br/>\n                                반응형으로 제공됩니다.\n                            </div>\n                            <div className=\"card-content-link\">\n                                <Link to=\"\" className=\"card-link\">지금 바로 만들기</Link>\n                            </div>\n                        </span>\n                    </span>\n                </div>\n                {/* <div className=\"main-section-right-topbottom\">                   \n                    <img src={section1} className=\"section-one-image\"/>\n                </div> */}\n            </div>\n            <div className=\"main-page-section-topbottom\" style={{backgroundColor:\"white\", height:'500px'}}>\n                <div className=\"main-section-left-topbottom\">\n                    <span className=\"one-section-big-topbottom\">\n                        Surfee가 제공하는 기능!\n                    </span>\n                    <span className=\"one-section-small-topbottom\">\n                        <div className=\"info-table\">\n                            {ourInfosTable}\n                        </div>\n                    </span>\n                </div>\n            </div>\n            <div ref={targets} className=\"main-page-section-last-v2\">\n                <span className=\"last-one-component-v2 last-card\">\n                    <div className=\"main-section-last-title-v2\">\n                        <span>\n                        고객 검증을 위한 '랜딩페이지' 제작은<br/>\n                        <span style={{color:'#6a63f7', borderBottom:'3px solid #6a63f7'}}>이제 선택이 아닌 필수</span>입니다.\n                        </span>\n                    </div>\n                    <div style={{flexDirection:'row', display:'flex', justifyContent:'center', width:'100%', marginTop:'5%'}}>\n                        <div style={{width:'30%', display:'flex', justifyContent:'center', alignItems:'center', flexDirection:'column'}}>\n                        <span>Let's Build Your Page!</span>\n                            <div to=\"/make\" className=\"apply-button-v2\" onClick={() => {\n                                if(isLoggedIn){\n                                    history.push('/#/response')\n                                    history.go()\n                                }else{\n                                    setAskOpen(true)\n                                }}}>제작하러가기</div>\n                        </div>\n                        <div style={{width:'30%', display:'flex', justifyContent:'center', alignItems:'center', flexDirection:'column'}}>\n                        <span style={{color:'#6a63f7'}}>이미 제작을 완료하셨다면</span>\n                        <span className=\"apply-button-v2\" onClick={() => checkLoggedIn()} style={{backgroundColor:'#ffffff', color:'#6a63f7'}}>관리하기</span>   \n                        </div>\n                    </div>\n                </span>\n            </div>\n        </div>\n        <Footer />\n        <AskLoginModal open={askOpen} setOpen={setAskOpen} SomeoneClickMoveToMake={SomeoneClickMoveToMake}/>\n        </>\n    )\n}\n\nexport default MainPageV2","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Make/old/MakePage.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Response/ResponsePage.js",["672","673","674","675","676","677","678","679","680"],"import React, {useState, useEffect} from 'react';\nimport './ResponsePage.css';\nimport {dbService} from '../../tools/fbase';\nimport ReactGa from 'react-ga'\nimport Footer from '../NavAndFooter/Footer'\nimport MadeLandingCard from '../../components/Response/MadeLandingCard'\nimport ResponseNavBar from '../../components/Response/ResponseNavBar'\nimport ChromeTapBar from '../../components/Response/ChromeTapBar'\nimport ResultTable from '../../components/Response/ResultTable'\nimport ResultTopTitle from '../../components/Response/ResultTopTitle'\nimport LoadingDisplay from '../../tools/LoadingDisplay'\nimport {Link } from 'react-router-dom'\nimport gadata from '../../tools/datacodes/gadata.json'\nimport { Tooltip, ChakraProvider } from '@chakra-ui/react'\nimport { InformationCircle } from '@styled-icons/ionicons-outline';\n\nconst NOTCLICKED = 10000\n\nfunction ResponsePage({userObj, history}) {\n    const [loading, setLoading] = useState(false);\n    const [update, setUpdate] = useState(false);\n    const [responses, setResponses] = useState([[]]);\n    const [datas, setDatas] = useState();\n    const [mylandings, setMylandings] = useState([]);\n    const [published, setPublished] = useState([]);\n    const [part, setPart] = useState(1);\n    const [nowChecking, setNowChecking] = useState(NOTCLICKED);\n    \n    useEffect(() => {\n        \n        // to report page view\n        // ReactGa.initialize('UA-213792742-1');\n        // ReactGa.pageview(`/response/${userObj.email}`);\n        getThisUserDatas();\n    },[loading, update])\n\n    const getThisUserDatas = async () => {\n        // setLoading(false);\n        const thisuserDatas = await dbService\n            .collection('saved-page')\n            .where(\"makerEmail\", \"==\", userObj.email)\n            .get();\n        \n        let thisuserData = thisuserDatas.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n        setMylandings(thisuserData);\n\n        getThisPublished();\n        let tempApplyDatas = []\n        let tempDatas = []\n        \n        thisuserData.map(item => {\n            let tempd = []\n            getResponses(item.setting.urlId).then(i => {\n                tempd = i;\n                tempApplyDatas.push(tempd);\n            })\n            getDatas(item.setting.urlId).then(i => {\n                tempd = i;\n                tempDatas.push(tempd);\n            })\n        })\n        setResponses(tempApplyDatas);\n        setDatas(tempDatas);\n\n        setLoading(true);\n    }\n\n    const getThisPublished = async () => {\n        const publishedDatas = await dbService\n            .collection('published-page')\n            .where(\"makerEmail\", \"==\", userObj.email)\n            .get();\n        let publishedData = publishedDatas.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n        setPublished(publishedData);\n    }\n\n    const getResponses = async (urlId) => {\n        const reDatas = await dbService\n            .collection(\"datas\") // apply-datas는 유저가 만든 랜딩페이지에 들어와서 목표 액션을 한 데이터.\n            .orderBy(\"created\", \"desc\")\n            .where(\"urlId\", \"==\", urlId)\n            .get();\n\n        let reData = reDatas.docs.map(doc => {\n            let day = new Date(doc.data().created)\n            return({...doc.data(), id:doc.id, date:day})\n        });\n\n        return reData;\n    }\n\n    const getDatas = async (urlId) => {\n        const reDatas = await dbService\n            .collection(\"gadata\") // apply-datas는 유저가 만든 랜딩페이지에 들어와서 목표 액션을 한 데이터.\n            .where(\"path\", \"==\", '/' + urlId)\n            .get();\n\n        let result = reDatas.docs.map(doc => {\n            let day = new Date(doc.data().created)\n            return({...doc.data(), id:doc.id, date:day})\n        });\n\n        return result[0];\n    }\n\n    const checkPublished = (urlId) => {\n        let found = false\n        published.map((item,index) => {\n            if(item.urlId === urlId){\n                found = item\n            }\n        })\n        if(found){\n            return found\n        }else{\n            return false\n        }\n    }\n\n    const returnMylandingsTable = mylandings.map((item, index) => {\n        return(\n            <MadeLandingCard history={history} item={item} key={item.id} index={index} published={checkPublished(item.urlId)} setNowChecking={setNowChecking} num={mylandings.length} setUpdate={setUpdate} update={update}/>\n        )\n    })\n\n        if(loading === true){\n            return (\n                <ChakraProvider>\n                <div className=\"response__container\">\n                <ResponseNavBar />\n                <div className=\"get-all-container\">\n                    <div className=\"get-up-container\">\n                        <div className=\"get-up-title\">\n                            {userObj.displayName} 님의 랜딩페이지를 관리해보세요 :)\n                            {\n                                mylandings.length > 2 &&\n                               <span className=\"response-subtext\">현재 버전에서 랜딩페이지는 최대 3개까지 만들 수 있습니다. 새로운 페이지를 만들고 싶다면 기존의 페이지를 삭제해주세요.</span>\n                        }\n                        </div>\n                        <div className=\"get__mylandings-cantainer\">\n                            {returnMylandingsTable}\n                            {\n                                mylandings.length < 3 &&\n                                <MadeLandingCard addNew />\n                            }\n                        </div>\n                    </div>\n                    {\n                    nowChecking !== NOTCLICKED ? \n                    <div className=\"response-down__container\">\n                        <ChromeTapBar content={mylandings[nowChecking]}/>\n                        { part === 1 ? \n                        <div className=\"response-display__container\">\n                            <ResultTopTitle content={mylandings[nowChecking]} myResponses={responses[nowChecking]} checkPublished={checkPublished} datas={datas[nowChecking]} history={history}/>\n                            <ResultTable responses={responses} nowChecking={nowChecking} />\n                        </div>\n                        :\n                        <>\n                        {/* 데이터 파트 */}\n                        {/* <div style={{height:'100vh'}}>\n                            <div>\n                                <span className=\"data-one-mini-card\">총 페이지 뷰 수 {myDatas.all_pageViews}</span>\n                                <span className=\"data-one-mini-card\">총 세션 수 {myDatas.all_sessions}</span>\n                            </div>\n                        </div> */}\n                        </>\n                        }\n                    </div>\n                    :\n                    <div style={{marginTop:'15px'}}>\n                        {\n                            mylandings.length === 0 ?\n                            <div>\n                                1분만에 새로운 랜딩페이지를 만들고 유저의 반응을 테스트 해보세요!\n                            </div>\n                            :\n                            <div>\n                                확인할 페이지를 클릭하세요\n                            </div>\n                        }\n                    </div>\n                    }\n                </div>\n                <div style={{fontSize:'15px', width:'100%', marginTop:'40vh'}}>\n                    <Footer />\n                </div>\n                </div>\n                </ChakraProvider>\n            )\n        }else{\n            return(\n                <LoadingDisplay />\n            )\n        }\n}\n\nexport default ResponsePage\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Customer/CustomerPage.js",["681","682","683","684","685","686"],"import React, {useState, useEffect} from 'react'\nimport QnA from '../../components/Customer/QnA'\nimport Term from '../../components/Customer/Term'\nimport PersonalInformation from '../../components/Customer/PersonalInformation'\nimport Footer from '../NavAndFooter/Footer'\nimport ReactGa from 'react-ga'\nimport NavBarV2 from '../NavAndFooter/NavBarV2'\n\nimport './CustomerPage.css'\n\nfunction CustomerPage({history, isLoggedIn}) {\n    const [cnum, setCnum] = useState(1);\n    const [cnums, setCnums] = useState([1,2,3]);\n    \n    useEffect(()=>{\n\n        // ReactGa.initialize('UA-213792742-1');\n        // ReactGa.pageview('/customerPage');\n    });\n\n    const tabsTable = cnums.map((item, index) => {\n        let fw = '500';\n        let bb = '0px';\n        let fb = 'gray';\n        if(cnum == item){\n            fw = '700'; \n            bb = '2px solid black';\n            fb = 'black';\n        }\n\n        switch(item){\n            case 1:\n                return(\n                   <span className=\"tab-one\" index={index} style={{color:`${fb}`, fontWeight:`${fw}`, borderBottom:`${bb}`}} onClick={e => setCnum(item)}>자주묻는질문(FAQ)</span>\n                )\n            case 2:\n                return(\n                    <span className=\"tab-one\" index={index} style={{color:`${fb}`, fontWeight:`${fw}`, borderBottom:`${bb}`}} onClick={e => setCnum(item)}>이용약관</span>\n                )\n\n            case 3:\n                return(\n                    <span className=\"tab-one\" index={index} style={{color:`${fb}`, fontWeight:`${fw}`, borderBottom:`${bb}`}} onClick={e => setCnum(item)}>개인정보처리방침</span>\n                )\n\n        }\n    })\n\n    const contentTable = () => {\n        switch(cnum){\n            case 1:\n                return(\n                    <QnA />\n                )\n            case 2:\n                return(\n                    <Term />\n                )\n            case 3:\n                return(\n                    <PersonalInformation />\n                )\n        }\n    }\n\n    return (\n        <>\n        <NavBarV2 history={history} isLoggedIn={isLoggedIn} />\n        <div className=\"questionspage-container\">\n            <div className=\"q-inner\">\n                <div className=\"q-info-top\">\n                    <div className=\"q-title-top\" style={{fontWeight: 'bold'}}>\n                        Surfee에 관심을 가져주셔서 감사합니다.\n                    </div>\n                    <div className=\"q-title-top\" style={{marginTop:'3%'}}>\n                        안녕하세요!<br/>\n                        무엇을 도와드릴까요?\n                    </div>\n                    <div>\n                        <span className=\"q-button\">\n                            직접 문의하기\n                        </span>\n                    </div>\n                </div>\n                <div className=\"quetions-content-bottom\">\n                    <div className=\"q-tabs\">\n                        {tabsTable}\n                    </div>\n                    <div className=\"q-content\">\n                        <div className=\"q-one-content\">\n                            {contentTable()}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <Footer />\n        </>\n    )\n}\n\nexport default CustomerPage\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Landing/old/MainPage.js",["687","688","689","690"],"import React, {useEffect,useRef, useState} from 'react'\nimport './MainPage.css'\nimport {Link} from 'react-router-dom';\nimport { dbService } from '../../../tools/fbase';\nimport NavBar from '../../NavAndFooter/NavBar/NavBar'\nimport Footer from '../../NavAndFooter/Footer'\nimport gadata from '../../../tools/datacodes/gadata.json'\n\nimport section1 from '../../../tools/img/001.png';\nimport section0 from '../../../tools/img/005.png';\nimport section2 from '../../../tools/img/003.png';\n\nimport {Input} from 'antd'\n\nfunction MainPage({history}) {\n    const [email,setEmail] = useState(\"\");\n    const targets = useRef(null)\n\n    useEffect(() => {\n    },[])\n\n    const sendData = async () => {\n        console.log(dbService);\n        if(email.length < 4){\n            alert(\"올바른 이메일 양식을 입력해주세요!\");\n            return;\n        }\n        await dbService.collection(\"apply-datas\").add({\n            email:email,\n            created:Date.now(),\n        });\n\n        alert(\"신청되셨습니다. 감사합니다. 빠른 시일내로 연락드리겠습니다.\");\n        setEmail(\"\");\n    }\n\n    const scrollDown = async () => {\n        console.log(gadata);\n        for (var i = 0; i < gadata.length; i++) {\n            await dbService.collection('gadata').add(gadata[i])\n            //Do something\n        }\n        targets.current.scrollIntoView({behavior: 'smooth'})\n    }\n\n    return (\n        <>\n        <div className=\"main-page-container\">\n            <NavBar history={history}/>\n            <div className=\"main-page-section\" style={{backgroundColor:'#6B63F7'}}>\n                <div className=\"main-section-left\" style={{color:'white'}}>\n                    <span className=\"one-section-big\">\n                        랜딩페이지 제작부터<br/>\n                        데이터 분석까지<br/>\n                        빠르고 간단하게\n                    </span>\n                    <span className=\"one-section-small\">\n                    신규 서비스와 이벤트부터 스타트업 아이템 검증까지,<br/>\n                    코딩없이 랜딩페이지를 만들고 실시간 데이터 분석을 통해 <br/>\n                    최고의 고객 전환율을 경험해 보세요.\n                    </span>\n                    <button className=\"apply-button\" onClick={scrollDown} style={{height:'60px', width:'200px', borderRadius:'10px', marginTop:'20px'}}>\n                        지금 바로 시작하기\n                    </button>\n                </div>\n                <div className=\"main-section-right\">              \n                    <img src={section0} className=\"section-one-image-main\" />\n                </div>\n            </div>\n            \n            <div className=\"main-page-section\" style={{backgroundColor:\"white\"}}>\n                <div className=\"main-section-left\">\n                    <span className=\"one-section-big\">\n                        코딩도 디자인도 필요없이<br/>One-stop으로<br/>랜딩페이지 제작하기\n                    </span>\n                    <span className=\"one-section-small\">\n                        개발자 없이도, 외주 없이도 직접<br/>\n                        템플릿을 고르고 블로그를 꾸미듯<br/>\n                        쉽고 빠르게 랜딩페이지를 만들어 보세요.\n                    </span>\n                </div>\n                <div className=\"main-section-right\">                   \n                    <img src={section1} className=\"section-one-image\"/>\n                </div>\n            </div>\n            <div className=\"main-page-section2\" style={{backgroundColor:\"white\"}}>\n                <div className=\"main-section-right\">\n                    <img src={section2} className=\"section-one-image\"/>\n                </div>\n                <div className=\"main-section-left\">\n                    <div className=\"middle-section\">\n                        <span className=\"one-section-big\">\n                        최적의 전환율을 위한 <br/>\n                        데이터 분석 자료를<br/>\n                        실시간으로 확인하기\n                        </span>\n                        <span className=\"one-section-small\">\n                        조회수, 사용자 수, 전환율(CVR), 유입 채널 등<br/>\n                        고객의 반응을 확인할 수 있는 유의미한 데이터를<br/>\n                        개발자에게 요청할 필요없이 직접 확인해 보세요.\n                        </span>\n                    </div>  \n                </div>\n            </div>\n            {/* <div className=\"main-page-section\" style={{backgroundColor:\"white\"}}>\n                <div className=\"main-section-left\">\n                    <div className=\"middle-section\">\n                        <span className=\"one-section-big\">\n                            제작부터 데이터 분석까지<br/>9,990원의<br/>합리적인 가격으로\n                        </span>\n                        <span className=\"one-section-small\">\n                            9,900원에 일주일 무료<br/>\n                            이후 하루마다 단돈 500원이 추가되는<br/>\n                            합리적인 가격으로 만나 보세요.\n                        </span>\n                    </div>\n                </div>\n                <div className=\"main-section-right\">                   \n                    <img src={section3}  className=\"section-one-image\"/>\n                </div>\n            </div> */}\n            <div ref={targets} className=\"main-page-section-last\" style={{backgroundColor:'#6B63F7'}}>\n                <span className=\"last-one-component\" style={{width:'50%'}}>\n                    <div className=\"main-section-last-title\">\n                        One-stop 랜딩페이지 제작 툴,<br/>\n                        가장 먼저 이용해 보세요\n                    </div>\n                    <Input type=\"text\" value={email} onChange={e => setEmail(e.target.value)} placeholder=\"이메일을 입력하세요.\" className=\"input-text\"/>\n                    <button className=\"apply-button\" onClick={sendData}>사전신청하고 혜택받기</button>\n                    <div className=\"main-section-last-desc\">\n                        사전신청하신 분들에겐 오픈 시 사용 가능한<br/>일주일 무료 이용권이 제공됩니다.\n                        {/* <br/> <p style={{color:'rgb(30,30,30)', fontFamily:'OTWelcomeBA'}}>기간 : 21.11.20 ~ 21.12.20</p> */}\n                    </div>\n                </span>\n                {/* <span className=\"last-one-component\">\n                    <div className=\"main-section-last-title\">\n                        지금 당장 필요하지 않다면<br/>쿠폰 받아가세요!\n                    </div>\n                    <Link to=\"coupon\" onClick={AddLog} className=\"apply-button\" style={{backgroundColor:'rgba(0,0,0,0)', color:'white'}}>\n                        할인쿠폰 받으러 가기</Link>\n                    \n                    <div className=\"main-section-last-desc\">\n                        이벤트 기간 : 2021.00.00 ~ 2021.00.00 <br/>\n                        사용 가능 기간 : ~ 2022.02.28\n                    </div>\n                </span> */}\n            </div>\n            {/* <div className=\"main-page-section-last\" style={{backgroundColor:'white', color:'black'}}>\n                <span className=\"last-one-component\" style={{width:'100%'}}>\n                    <div>\n                        여기에 뭐 설명같은거\n                    </div>\n                </span>\n            </div> */}\n        </div>\n            <Footer />\n           </>\n    )\n}\n\nexport default MainPage","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Login/Register/RegisterPage.js",["691","692","693"],"import React, {useState, useEffect} from 'react'\nimport { authService } from '../../../tools/fbase'\nimport { firebaseInstance } from '../../../tools/fbase'\nimport { dbService } from '../../../tools/fbase'\nimport { Input } from 'antd';\nimport googlelogo from '../../../tools/img/googlelogo.png'\nimport s1 from '../../../tools/img/surfee1.png';\nimport {Link} from 'react-router-dom';\nimport NavBarV2 from '../../NavAndFooter/NavBarV2'\n\nfunction RegisterPage({history, isLoggedIn}) {\n    const [id, setId] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [done, setDone] = useState(false);\n    const [name, setName] = useState(\"\");\n    const [job, setJob] = useState(\"\");\n\n    const socialLogin = async (e) => {\n        const { \n            target : { name }, \n        } = e;\n        let provider;\n        if (name === \"googleLogin\"){\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        }else{\n            console.log(\"이건 뜨면 안되는 메세지.\");\n        }\n\n        const data = await authService.signInWithPopup(provider);\n        await checkRegister(data.user.multiFactor.user.email);\n        setDone(true);\n\n        console.log(data.user.multiFactor.user, \"로그인\");\n    }\n\n    const submit = async (e) => {\n        var data = '';\n        e.preventDefault();\n        try{\n            data = await authService.createUserWithEmailAndPassword(\n                id, password\n            )\n            console.log(data)\n        } catch (err){\n            if(err.code === \"auth/email-already-in-use\"){\n                alert(\"이미 존재하는 아이디입니다. 로그인 해주세요.\");\n                history.push('/#/login');\n                history.go();\n            }else if(err.code === \"auth/invalid-email\"){\n                alert(\"이메일 양식에 맞게 작성해주세요.\");\n            }else{\n                alert(\"옳바르지 않은 회원가입 시도입니다.\");\n            }\n            return;\n        }\n        history.push('/');\n        history.go();\n    }\n\n    const checkRegister = async (email) => {\n        const usersCollections = await dbService\n            .collection(\"users\")\n            .where(\"email\", \"==\", email)\n            .get();\n        \n        const usersExist = usersCollections.docs.map(doc => {\n            return({...doc.data(), id: doc.id})\n        })\n\n        if(usersExist.length === 0){\n            // 구글 아이디로 로그인했는데 회원가입에 정보가 없을 때\n            console.log(\"회원가입 정보를 받습니다.\");\n        }\n    }\n\n    const submitInfo = async () => {\n        await dbService.collection(\"users\").add({\n            name:name,\n            job:job,\n        })\n        alert(\"회원가입이 완료되었습니다.\");\n        history.push('/');\n        history.go();\n    }\n\n    return (\n        <>\n        <NavBarV2 history={history} isLoggedIn={isLoggedIn}/>\n        {done ? \n        <div className=\"login-container\">\n            <div className=\"login__inner\">\n                <div>\n                    회원가입 페이지에 오신 것을 환영합니다.\n                </div>\n                <form className=\"form-container\" onSubmit={e => submitInfo(e)}>\n                    <input \n                        type=\"text\" \n                        placeholder=\"이름을 입력해주세요.\" \n                        required\n                        value={name}   \n                        onChange={e => setName(e.currentTarget.value)}\n                    />\n                    <input  \n                        type=\"text\" \n                        placeholder=\"직업을 입력해주세요.\" \n                        required\n                        value={job} \n                        onChange={e => setJob(e.currentTarget.value)}\n                    />\n                    <input type=\"submit\" value=\"회원가입 완료\" />\n                </form>\n            </div>\n        </div>\n        : \n\n        <div className=\"login-container\">\n            <div className=\"login-container__container\">\n                <div className=\"login__inner\">\n                    <div className=\"login-title\" style={{color:'#6a63f7'}}>\n                        Surfee\n                    </div>\n                    <div className=\"login-title\">\n                        회원가입 페이지에 오신 것을 환영합니다.\n                    </div>\n                    <form onSubmit={e => submit(e)} className=\"center\">\n                        <span className=\"login-label\">\n                            Email\n                        </span>\n                        <Input \n                            type=\"text\" \n                            className=\"login-input\"\n                            placeholder=\"아이디를 입력해주세요.\" \n                            required\n                            value={id}   \n                            onChange={e => setId(e.currentTarget.value)}\n                        />\n                        <span className=\"login-label\">\n                            Password\n                        </span>\n                        <Input  \n                            type=\"password\" \n                            className=\"login-input\"\n                            placeholder=\"비밀번호를 입력해주세요.\" \n                            required\n                            value={password} \n                            onChange={e => setPassword(e.currentTarget.value)}\n                        />\n                        <Input className=\"login-form-button\" type=\"submit\" value=\"회원가입\" />\n                    </form>\n                    <button className=\"google-login-button\" onClick={e => socialLogin(e)} style={{marginTop:'2%'}}>\n                        <img src={googlelogo} width={20}/>\n                        <span style={{marginLeft:'5%'}}>구글 회원가입</span>\n                    </button>\n                    <div style={{padding:'2% 0%', justifyContent:'flex-start', display:'flex', width:'100%'}}>\n                        <Link to=\"/customer\" className=\"footer-text-click\">\n                            개인정보 처리방침\n                        </Link>\n                        <Link to=\"/customer\" className=\"footer-text-click\" style={{marginLeft:'2%'}}>\n                            이용약관\n                        </Link>\n                    </div>\n                </div>\n            </div>\n            <div className=\"login-background\">\n                <img src={s1} width={600} />\n                <div className=\"login-background__desc\" style={{fontFamily:'Pretendard-ExtraBold', marginTop:'2%'}}>\n                    Surfee와 함께 1분만에 완성하는 랜딩페이지\n                </div>\n                <div className=\"login-background__desc\">\n                    Surfee와 함께 1분만에 완성하는 랜딩페이지\n                </div>\n            </div>\n        </div>}\n        </>\n    )\n}\n\nexport default RegisterPage\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Login/Login/LoginPage.js",["694","695","696","697"],"import React, {useState, useEffect} from 'react';\nimport './LoginRegister.css'\nimport { authService } from '../../../tools/fbase'\nimport { firebaseInstance } from '../../../tools/fbase'\nimport { dbService } from '../../../tools/fbase'\nimport { Input } from 'antd';\nimport googlelogo from '../../../tools/img/googlelogo.png'\nimport s1 from '../../../tools/img/surfee1.png';\nimport Footer from '../../NavAndFooter/Footer';\nimport {Link} from 'react-router-dom';\nimport NavBarV2 from '../../NavAndFooter/NavBarV2'\n\nfunction LoginPage({history, isLoggedIn}) {\n    const [id, setId] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [done, setDone] = useState(false);\n\n    const socialLogin = async (e) => {\n        const { \n            target : { name }, \n        } = e;\n        let provider;\n        // if (name === \"googleLogin\"){\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\n        // }else{\n        //     console.log(\"이건 뜨면 안되는 메세지.\");\n        // }\n\n        const data = await authService.signInWithPopup(provider);\n        await checkRegister(data.user.multiFactor.user.email);\n        history.push('/');\n        history.go();\n    }\n\n    const submit = async (e) => {\n        var data = '';\n        e.preventDefault();\n        try{\n            data = await authService.signInWithEmailAndPassword(\n                id, password\n            )\n            checkRegister(data.user.multiFactor.user.email)\n        } catch (err){\n            console.log(err)\n        }\n        console.log(data)\n    }\n\n    const checkRegister = async (email) => {\n        const usersCollections = await dbService\n            .collection(\"users\")\n            .where(\"email\", \"==\", email)\n            .get();\n        \n        const usersExist = usersCollections.docs.map(doc => {\n            return({...doc.data(), id: doc.id})\n        })\n\n        console.log(\"일단 로그인 성공\", email, usersExist)\n\n\n        if(usersExist.length === 0){\n            // 구글 아이디로 로그인했는데 회원가입에 정보가 없을 때\n            console.log(\"회원가입 정보를 받습니다.\");\n            setDone(true);\n        }else{\n            console.log(\"로그인 완료\");\n            localStorage.setItem(\"name\", usersExist[0].name);\n            localStorage.setItem(\"job\", usersExist[0].job);\n\n            history.push('/');\n            history.go();\n        }\n    }\n\n    return (\n        <>\n        {done ? \n        <div>\n            Initializing... \n            {/* 여기에 회원가입 페이지랑 똑같이 입력받는걸 넣어야 하는 건가..? */}\n        </div>\n        :\n        <div>\n        <NavBarV2 history={history} isLoggedIn={isLoggedIn}/>\n        <div className=\"login-container\">\n            <div className=\"login-container__container\">\n                <div className=\"login__inner\">\n                    <div className=\"login-title\" style={{color:'#6a63f7'}}>\n                        Surfee\n                    </div>\n                    <div className=\"login-title\">\n                        로그인 페이지에 오신 것을 환영합니다.\n                    </div>\n                    <form onSubmit={e => submit(e)} className=\"center\">\n                        <span className=\"login-label\">\n                            Email\n                        </span>\n                        <Input \n                            className=\"login-input input-focus\"\n                            placeholder=\"아이디를 입력해주세요.\" \n                            required\n                            value={id}   \n                            onChange={e => setId(e.currentTarget.value)}\n                        />\n                        <span className=\"login-label\">\n                            Password\n                        </span>\n                        <Input  \n                            type=\"password\" \n                            className=\"login-input input-focus\"\n                            placeholder=\"비밀번호를 입력해주세요.\" \n                            required\n                            value={password} \n                            onChange={e => setPassword(e.currentTarget.value)}\n                        />\n                        <Input className=\"login-form-button\" type=\"submit\" value=\"로그인\" />\n                    </form>\n                    <button className=\"google-login-button\" name=\"googleLogin\" onClick={e => socialLogin(e)} style={{marginTop:'2%'}}>\n                        <img src={googlelogo} width={20}/>\n                        <span style={{marginLeft:'5%'}}>구글 로그인</span>\n                    </button>\n                    <div style={{padding:'2% 0%', justifyContent:'flex-start', display:'flex', width:'100%'}}>\n                        <Link to=\"/customer\" className=\"footer-text-click\">\n                            개인정보 처리방침\n                        </Link>\n                        <Link to=\"/customer\" className=\"footer-text-click\" style={{marginLeft:'2%'}}>\n                            이용약관\n                        </Link>\n                    </div>\n                </div>\n            </div>\n            <div className=\"login-background\">\n                <img src={s1} width={600} />\n                <div className=\"login-background__desc\" style={{fontFamily:'Pretendard-ExtraBold', marginTop:'2%'}}>\n                    Surfee와 함께 1분만에 완성하는 랜딩페이지\n                </div>\n                <div className=\"login-background__desc\">\n                    Surfee와 함께 1분만에 완성하는 랜딩페이지\n                </div>\n            </div>\n        </div>\n        <Footer />\n        </div>\n     }</>\n        \n    )\n}\n\nexport default LoginPage\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/unused/SubmitPage.js",["698"],"import React, {useState, useEffect} from 'react'\nimport NavBarV2 from '../../../pages/NavAndFooter/NavBarV2'\nimport Footer from '../../../pages/NavAndFooter/Footer'\n\nimport './SubmitPage.css'\n\nfunction SubmitPage() {\n\n    useEffect(() => {\n    })\n\n    return (\n        <div className=\"after-page-one-container\">\n            <NavBarV2 />\n            <div className=\"after-page\">\n                <div className=\"after-page-title\">\n                축하합니다!\n                랜딩페이지는<br/>\n                https://surfee.co.kr/#/입력하신 urlID<br/>\n                에서 확인하실 수 있습니다.\n                </div>\n                <div className=\"after-page-desc\">\n                데이터를 확인할 수 있는 페이지에 대한 비밀번호는 12시간 내에 이메일로 보내드리겠습니다.<br/>\n                랜딩페이지에 대한 데이터는 매일 자정 경\n                엑셀 파일로 정리하여 보내드릴 예정입니다.<br/><br/>\n                최대한 빠른 시일 내에 자동화할 수 있도록 노력하겠습니다!<br/>\n                저희 Surfee를 이용해주셔서 감사합니다 :)\n                <br/><br/>\n                👉 Surfee가 도움이 되었다면 / 개선을 바라는 점이 있다면<br/>\n                피드백에 참여해주세요!\n                </div>\n                <div className=\"after-page-button-container\">\n                    <a className=\"after-page-button\" href=\"https://6cetqycakbc.typeform.com/to/oRcv6Qdu\">🙋🏻‍♂️ 피드백 하러 가기!</a>\n                </div>\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\nexport default SubmitPage\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/NewSection.js",["699","700","701","702","703","704","705","706"],"import React, {useState,useContext} from 'react'\nimport DetailSection from './SectionTypes/DetailSection'\nimport HeroSection from './SectionTypes/HeroSection'\nimport ReviewSection from './SectionTypes/ReviewSection'\nimport FeaturesSection from './SectionTypes/FeaturesSection'\nimport CtaSection from './SectionTypes/CtaSection'\nimport ApplySection from './SectionTypes/ApplySection'\nimport AppDownloadSection from './SectionTypes/AppDownloadSection'\nimport QnaSection from './SectionTypes/QnaSection'\nimport GallerySection from './SectionTypes/GallerySection'\nimport TextSection from './SectionTypes/TextSection'\nimport MockupSection from './SectionTypes/MockupSection'\nimport VideoSection from './SectionTypes/VideoSection'\n\nimport {animations} from './tools/animations'\nimport './NewSection.css'\nimport { MyContext } from '../../pages/Make/MakePageV2'\nimport { motion } from 'framer-motion'\nimport {Delete, Options} from '@styled-icons/fluentui-system-filled'\nimport produce from 'immer'\n\nimport styled from \"styled-components\";\n\nconst CustomCtaButton = styled.button`\npadding:8px 15px;\n`;\n\nconst CustomGhostButton = styled.button`        \n`;\n\n\n// border-radius:${state.setting.cta.borderRadius}px;\n// background-color:${state.setting.cta.backgroundColor};\n// color:${state.setting.cta.color};\n// box-shadow:${state.setting.cta.shadow ? '2px 2px 5px rgba(0,0,0,0.3)' : 'none'};\n// border:${state.setting.cta.border ? `1px solid ${state.setting.cta.borderColor}` : 'none'};\n\n// border-radius:${state.setting.ghost.borderRadius}px;\n// background-color:${state.setting.ghost.backgroundColor};\n// color:${state.setting.ghost.color};\n// box-shadow:${state.setting.cta.shadow ? '2px 2px 5px rgba(0,0,0,0.3)' : 'none'};\n// border:${state.setting.ghost.border ? `1px solid ${state.setting.ghost.borderColor}` : 'none'};\n\nfunction NewSection({setting, content, index, contents, setContents, full}) {\n    const [isHover, setIsHover] = useState('none');\n    const {state, action} = useContext(MyContext)\n\n    const setThisSection = () => {\n        action.setSecNum(index);\n        if(index !== state.secNum){\n            action.setCategory(0);\n        }\n    }\n\n    const returnType = () => {\n        switch(content.sectionTypeName){\n            case 'DetailSection':\n                return (\n                    <DetailSection content={content} CustomCtaButton={CustomCtaButton} CustomGhostButton={CustomGhostButton} setting={setting}/>\n                )\n\n            case 'HeroSection':\n                return (\n                    <HeroSection content={content} setting={setting}/>\n                )\n\n            case 'ReviewSection':\n                return (\n                    <ReviewSection content={content} setting={setting}/>\n                )\n\n            case 'FeaturesSection':\n                return (\n                    <FeaturesSection content={content}  setting={setting}/>\n                )\n\n            case 'CtaSection':\n                return (\n                    <CtaSection content={content} type=\"cta\" setting={setting}/>\n                )\n\n            case 'ApplySection' :\n                return(\n                    <CtaSection content={content} type=\"apply\" setting={setting}/>\n                )\n\n            case 'AppDownloadSection' :\n                return(\n                    <CtaSection content={content} type=\"appDownload\" setting={setting}/>\n                )\n\n            case 'QnaSection' :\n                return(\n                    <QnaSection content={content} setting={setting}/>\n                )\n\n            case 'GallerySection' :\n                return(\n                    <GallerySection content={content} setting={setting}/>\n                )\n\n            case 'TextSection' :\n                return(\n                    <TextSection content={content} setting={setting}/>\n                )\n\n            case 'MockupSection' :\n                return(\n                    <MockupSection Section content={content} setting={setting}/>\n                )\n\n            case 'VideoSection' :\n                return(\n                    <VideoSection content={content} setting={setting}/>\n                )\n\n            default:\n                return (\n                    <div>\n                        기본\n                    </div>\n                )\n        }\n    }\n\n    return(\n        <div style={{fontSize:`${state.isPhone ? '22px' : '28px'}`}} className=\"new-section\" onMouseEnter={() => setIsHover('flex')} onMouseLeave={() => setIsHover('none')}>\n            {!full && <div className=\"for-section-hover\" style={{backgroundColor: `${isHover === 'flex' ? 'rgba(200,200,200,0.7)' : 'rgba(0,0,0,0)'}`}}>\n\n            </div>}\n            <div className=\"section__container\" \n                style={{backgroundImage:`${ content.backgroundType === 'image' ? `url(${content.backgroundImage.attachment})` : ''}`, backgroundSize:'contain', backgroundRepeat: 'no-repeat', backgroundPosition: 'center center'}} \n                    onClick={() => setThisSection()}>\n                {\n                    content.backgroundType === 'color' ?\n                    <div style={{backgroundColor:`${content.backgroundColor}`, width:'100%', height:'100%', zIndex:2, position:'absolute'}}>\n                    </div>\n                    :\n                    (content.backgroundImage.overlay && content.backgroundType === 'image') &&\n                    <div style={{backgroundColor:`${content.backgroundColor}`, width:'100%', height:'100%', zIndex:2, position:'absolute'}}>\n                    </div>\n                }\n                {\n                    content.box.use && \n                    <div className=\"section__box\" style={{padding:`0px ${full ? 'calc(11vw)' : '0px'}`}}>\n                        <div style={{backgroundColor:`${content.box.backgroundColor}`, borderRadius:`${content.box.borderRadius}px`, width:'100%', height:'100%'}}>\n                        </div>\n                    </div>\n                }\n                <div className=\"section__container-inner\"\n                    style={{padding:`${\n                        state.isPhone ? content.padding.top/2.5 : content.padding.top}vh \n                        ${full ? 'calc(14vw + 30px)' : `${state.isPhone ? '15px' : '30px'}`} \n                        ${state.isPhone ? content.padding.top/2.5 : content.padding.bottom}vh \n                        ${full ? 'calc(14vw + 30px)' : `${state.isPhone ? '15px' : '30px'}`} `}} >\n                    {/* 실제 섹션이 보여지는건 여기밖에 없음,, */}\n                    {returnType()}\n                </div>\n            </div>\n        </div>\n    )\n}\n\n{/* \n    <div className=\"section-selection-container\" style={{display:`${isHover}`}}>\n{ state.contents.length > 0 && \n    <span className=\"section-option\" onClick={() => deleteThisSection()}>\n        <Delete size=\"20\" />\n    </span> }\n<span className=\"section-option\" onClick={() => { action.setSecNum(index); action.setAddingSectionAt(1000); }}>\n    <Options size=\"20\" />\n</span>\n{ index !== 0 && \n    <span className=\"section-option\" onClick={() => moveUp()}>\n        <ArrowUpShort size=\"20\" />\n    </span> }\n{ index !== state.contents.length-1 && \n    <span className=\"section-option\" onClick={() => moveDown()}>\n        <ArrowDownShort size=\"20\" />\n    </span> }\n</div> \n*/}\n\nexport default NewSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Questions/FirstQuestions.js",["707","708","709","710","711","712","713","714","715","716","717","718","719","720"],"import React, {useState, useEffect, useContext} from 'react'\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\nimport '../../components/Make/Modal/Modal.css';\nimport './FirstQuestions.css'\nimport {Link} from 'react-router-dom'\nimport { MyContext } from '../Make/MakePageV2'\nimport {dbService} from '../../tools/fbase';\nimport OverflowScrolling from 'react-overflow-scrolling';\nimport produce from 'immer';\nimport { Input } from 'antd';\n\nimport good from '../../tools/info/good3d.png';\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius:10px;\n`;\n\nconst Backdrop = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.2);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: '100vw',\n  height: '100vh',\n  bgcolor: 'rgba(255,255,255,1)',\n  border: '0px solid #000',\n  flexDirection:'column',\n  p: 2,\n  px: 4,\n  pb: 3,\n  display:'flex',\n  justifyContent: 'start',\n  alignItems: 'center',\n//   borderRadius:'20px',\n  position:'relative',\n}\n\nconst StyledModal2 = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius:10px;\n`;\n\nconst Backdrop2 = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.2);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style2 = {\n  width: '30vw',\n  height: '80vh',\n  bgcolor: 'rgba(255,255,255,1)',\n  border: '0px solid #000',\n  flexDirection:'column',\n  p: 2,\n  px: 4,\n  pb: 3,\n  display:'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n//   borderRadius:'20px',\n};\n\nconst progressList = [\n    {\n        num:1,\n        name:'NAME',\n    },\n    {\n        num:2,\n        name:'GOAL',\n    },\n    {\n        num:3,\n        name:'DEVICE',\n    },\n    {\n        num:4,\n        name:'DESIGN',\n    },\n    {\n        num:5,\n        name:'URL',\n    },\n]\n\nconst secondQuestion = [\n    {\n        typequestion: \"🍎 앱 다운로드\",\n        question : \"많은 사람들이 우리의 앱을 다운로드 하면 좋겠어요\",\n        type:'app',\n    },\n    {\n        typequestion: \"✍️ 사전신청\",\n        question : \"사전신청을 많이 받고 싶어요\",\n        type:'pre',\n    },\n    {\n        typequestion: \"💰 판매\",\n        question : \"서비스/제품을 많이 팔고 싶어요\",\n        type:'sell',\n    },\n    {\n        typequestion: \"📚 개인적인 목적\",\n        question : \"멋진 나를 알리고 싶어요\",\n        type:'portfolio',\n    },\n]\n\nconst fontList = [\n    { label: '노토산스', value: 'Noto Sans KR' },\n    { label: '프리텐다드', value: 'Pretendard-Regular' },\n    { label: '나눔스퀘어 라운드', value: 'NanumSquareRound' },\n    { label: '바른 공군', value: 'ROKAFSansBold' },\n    { label: '지마켓 산스', value: 'GmarketSansMedium' },\n    { label: '고운 돋움', value: 'GowunDodum-Regular' },\n    { label: '에스코어 드림', value: 'S-CoreDream-4Regular' },\n    { label: '함박눈체', value : 'SF_HambakSnow'},\n    { label: '카페24 서라운드', value: 'Cafe24Ssurround'},\n    { label: '레페리포인트-Black', value:'LeferiPoint-BlackA'},\n    { label: '고운바탕', value : 'GowunBatang-Regular'},\n    { label: '여기어때 잘난체', value: 'yg-jalnan'},\n]\nconst colorList = [\n    {\n        name:'검',\n        color:'rgba(0,0,0,1)',\n    },\n    {\n        name:'차분',\n        color:'rgba(255,255,255,1)',\n    },\n    {\n        name:'노',\n        color:'rgba(0,255,255,1)',\n    },\n    {\n        name:'빨',\n        color:'rgba(250,0,0,1)',\n    },,\n    {\n        name:'초',\n        color:'rgba(0,250,0,1)',\n    },,\n    {\n        name:'파',\n        color:'rgba(0,0,250,1)',\n    },\n]\n\nfunction FirstQuestions({type, setType, open, setOpen, navi, setNavi, setting, setSetting}) {\n    // 모달\n    const [cnum, setCnum] = useState(1);\n    const [device, setDevice] = useState(\"\");\n    const [templateNum, setTemplateNum] = useState(0);\n    const [font, setFont] = useState('');\n    const [color, setColor] = useState('');\n    const [tmodalOpen, setTmodalOpen] = useState(false);\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const handleOpen = () => setOpen(true);\n    const handleClose = async () => {\n        // 마지막에는 입력한 정보도 저장한다. 근데 한명껄 여러번 저장해서 헷갈리지 않게..!\n\n        await dbService.collection('question_answers').add({\n            createdAt: new Date(),\n        })\n        setOpen(false)\n    };\n    \n    const onChangeTitle = e => {\n        e.preventDefault();\n        setNavi(produce(navi, draft => {\n            draft.title = e.currentTarget.value\n        }))\n    }\n\n    const onUrlChange = e => {\n        if (isNotNumber(e.nativeEvent.data)){ \n            setSetting(produce(setting, draft => {\n                draft.urlId = e.currentTarget.value\n            }))\n        }else{\n            e.preventDefault(); \n            return null; \n        }\n    }\n\n    const nextAndSetTemplates = async (e) => {\n        if(type === \"\"){\n            alert(\"위의 보기 중 한가지를 선택해주세요.\");\n            return\n        }else{\n            setCnum(cnum + 1);\n        }\n    }\n\n    const nextAndSetTemplate = async (e) => {\n        if(device === \"\"){\n            alert(\"위의 보기 중 한가지를 선택해주세요.\");\n            return\n        }else{\n            setCnum(cnum + 1);\n        }\n    }\n\n    const nextAndSetFont = async e => {\n        if(font === '' || color === ''){\n            alert(\"위의 보기 중 한가지를 선택해주세요.\");\n            return\n        }else{\n            setSetting(produce(setting, draft => {\n                draft.font = font;\n                draft.smallFont = font;\n                draft.color = color;\n            }))\n            setCnum(cnum + 1);\n        }\n    }\n    const nextAndSetDone = async e => {\n\n        const urlDatas = await dbService\n            .collection(\"urlStores\")\n            .where(\"urlId\", \"==\", setting.urlId)\n            .get(); // uid를 creatorId로 줬었으니까.\n        \n        let urlData = urlDatas.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n\n        if(setting.urlId === ''){\n            alert(\"URL을 입력해주세요. 이후 페이지에서 수정가능합니다.\");\n            return\n        }else if(urlData.length > 0){\n            alert(\"이미 존재하는 url입니다. 다른 url을 사용해주세요.\");\n            return;\n        }else{\n\n            localStorage.setItem('editing', true);\n            handleClose();\n        }\n    }\n\n    const ModalBox = (props) => {\n        return(\n            <div className=\"modal-flex-column\">\n                <div className=\"modal-title\">\n                    {props.title}\n                </div>\n                <div className=\"modal-main-card\">\n                    {props.children}\n                </div>\n            </div>\n        )\n    }\n\n    const isNotNumber = (v) => {\n        const regExp = /[a-zA-Z0-9]/g; \n        return regExp.test(v);\n    }\n\n    const content = () => {\n        switch(cnum){\n            case 1:\n                return(\n                    <div className=\"modal-flex-column\">\n                        <div className=\"modal-title\">\n                            안녕하세요, <span style={{color:'#6C63FF'}}>Surfee</span>에 오신 것을 환영합니다!<br/>\n                            당신의 서비스 / 제품 명을 알려주세요.\n                        </div>\n                        <div className=\"modal-main-card\">\n                        {/* <form onSubmit={() => setCnum(cnum + 1)} style={{display:'flex', flexDirection:'column', justifyContent: 'center', alignItems: 'center'}}> */}\n                        <Input \n                            className=\"input-holder input-focus\" \n                            placeholder=\"서비스/제품 명이 로고 자리에 들어갑니다.\" \n                            value={navi.title} \n                            onChange={e => \n                                setNavi(produce(navi, draft => {\n                                    draft.title = e.currentTarget.value\n                                }))} />\n                        {/* </form> */}\n                        <div className=\"modal-mini-text\">\n                            수정 가능하니 편하게 정해주세요 :)\n                        </div>\n                        <div className=\"modal-button-container\">\n                            <div className=\"modal-move-button\" \n                                onSubmit={e => setCnum(cnum + 1)} style={{visibility:`${navi.title.length > 0 ? 'visible' : 'hidden'}`, display:'flex'}} \n                                onClick={e => setCnum(cnum + 1)}>다음</div>  \n                            </div>\n                        </div>\n                    </div>\n                )\n                break;\n\n            case 2:\n                return(\n                    <ModalBox \n                        title={<><span style={{color:'#6C63FF'}}>{navi.title}</span>의 랜딩페이지는 다음 중 어떤 목표를 향하고 있나요? 🚀</>}>\n                        <>\n                            <div className=\"modal-row\">\n                            {\n                                secondQuestion.map((item, index) => {\n                                    let color = 'none';\n                                    if(item.type === type){\n                                        color = '1px solid #6C63FF';\n                                    }\n                                    return(\n                                        <div className=\"template__card\" onClick={() => {setType(item.type);}} key={index} \n                                            style={{border:`${color}`}}>\n                                            <div style={{fontSize:'17px'}}>\n                                                {item.typequestion}\n                                            </div>\n                                            <div style={{marginTop:'4%'}}>\n                                                {item.question}\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                            }\n                            </div>\n                            <div className=\"modal-button-container\">\n                                <div className=\"modal-move-button-back\" onClick={e => setCnum(cnum - 1)}>이전</div>\n                                <div className=\"modal-move-button\" onClick={e => nextAndSetTemplates()}>다음</div>  \n                            </div>\n                        </>\n                    </ModalBox>\n                )\n                break;\n\n            case 3:\n                return(\n                    <ModalBox title={<>\n                        <span style={{color:'#6C63FF'}}>{navi.title}</span>의 랜딩페이지는 주로 어떤 화면으로 보여질까요?\n                    </>}>\n                        <div className=\"modal-row\" style={{flexWrap:'nowrap'}}>\n                            <div className=\"template__card\"\n                                onClick={() => {\n                                    setDevice('pc')\n                                }}\n                                style={{border: `${device === 'pc' ? '1px solid #6C63FF' : 'none'}`, textAlign: 'center', padding:'50px 30px'}} >\n                                <div>\n                                    🖥 PC<br/><br/> PC 화면을 중심으로 편집하고<br/> 모바일 화면은 간단한 수정만 가능해요.\n                                </div>\n                            </div>\n                            <div className=\"template__card\"\n                                onClick={() => {\n                                    setDevice('mobile')\n                                }}\n                                style={{border: `${device === 'mobile' ? '1px solid #6C63FF' : 'none'}`, textAlign: 'center', padding:'50px 30px'}} >\n                                <div>\n                                    📱모바일<br/><br/> 모바일 화면을 중심으로 편집하고<br/> PC 화면은 간단한 수정만 가능해요.\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"modal-button-container\">\n                            <div className=\"modal-move-button-back\" onClick={e => setCnum(cnum - 1)}>이전</div>\n                            <div className=\"modal-move-button\" onClick={e => nextAndSetTemplate()}>다음</div>  \n                        </div>\n                    </ModalBox>\n                )\n\n            case 4:\n                return(\n                    <ModalBox title={<>\n                        좋아요! 디자인은 어떻게 할까요? 🤔</>}>\n                            <div className=\"modal-row\" style={{flexWrap:'nowrap'}}>\n                            <div className=\"modal-column\">\n                                <div>\n                                    폰트를 선택해주세요.\n                                </div>\n                                <OverflowScrolling className=\"font-selections__container\">\n                                    {fontList.map((item, index) => {\n                                        return(\n                                            <div className=\"template__card\" key={index}\n                                                onClick={() => {\n                                                    setFont(item.value);\n                                                }}\n                                                style={{border: `${font === item.value ? '1px solid #6C63FF' : 'none'}`, \n                                                fontFamily:`${item.value}`, \n                                                padding:'5% 3%'}}\n                                            >\n                                                <div>\n                                                    {item.label}\n                                                </div>\n                                                <div style={{marginTop:'2%'}}>\n                                                    노코드 랜딩페이지 제작 툴, Surfee\n                                                </div>\n                                            </div>\n                                        )\n                                    })}\n                                </OverflowScrolling>\n                            </div>\n                            <div className=\"modal-column\">\n                                <div>\n                                    색상을 선택해주세요.\n                                </div>\n                                <OverflowScrolling className=\"font-selections__container\">\n                                    {colorList.map((item, index) => {\n                                        let bor = 'none';\n                                        if(item.color === color){\n                                            bor = '1px solid #6C63FF';\n                                        }\n                                        return(\n                                            <div className=\"template__card\" key={index}\n                                                onClick={() => {\n                                                    setColor(item.color);\n                                                }}\n                                                style={{border: `${bor}`, padding:'5% 3%'}}\n                                            >\n                                                <div style={{backgroundColor:`${item.color}`, width:'50px', height:'50px', borderRadius:'10px'}}>\n                                                    \n                                                </div>\n                                            </div>\n                                        )\n                                    })}\n                                </OverflowScrolling>\n                            </div>\n                            </div>\n                        <div className=\"modal-button-container\">\n                            <div className=\"modal-move-button-back\" onClick={e => setCnum(cnum - 1)}>이전</div>\n                            <div className=\"modal-move-button\" onClick={() => nextAndSetFont()}>다음</div>\n                        </div>\n                    </ModalBox>\n                )\n                break;\n\n            case 5:\n                return(\n                    <div className=\"modal-flex-column\">\n                        <div className=\"modal-title\">\n                            마지막으로, <span style={{color:'#6C63FF'}}>{navi.title}</span> 랜딩페이지의 URL을 설정해 주세요.                            \n                        </div>\n                        <div className=\"modal-main-card\">\n                            <div className=\"modal-title\" style={{fontSize:'25px'}}>\n                                <input className=\"input-holder input-focus\" placeholder=\"영문과 숫자만 사용 가능합니다.\" value={setting.urlId} onChange={e => onUrlChange(e)} />.surfee.co.kr\n                            </div>\n                            <div style={{color:'gray', paddingLeft:'0%',marginTop:'3%', fontSize:'18px', textAlign:'left', fontFamily:'Pretendard-Regular'}}>\n                                <div>\n                                    - 개인 도메인 연결은 다음 버전에 업데이트할 예정입니다.<br/>\n                                    - 수정 가능하니 편하게 설정해 주세요 :)<br/>\n                                </div>\n                            </div>\n                            <div className=\"modal-button-container\">\n                                <div className=\"modal-move-button-back\" onClick={e => setCnum(cnum - 1)}>이전</div>\n                                <div className=\"modal-move-button\" onClick={() => {\n                                    nextAndSetDone();\n                                }}>시작하기</div>\n                            </div>\n                        </div>\n                    </div>\n                )\n                break;\n        }\n    }\n\n    return (\n        <div>\n        <StyledModal\n            aria-labelledby=\"unstyled-modal-title\"\n            aria-describedby=\"unstyled-modal-description\"\n            open={open}\n            BackdropComponent={Backdrop}\n        >\n            <Box sx={style}>\n                <Link to=\"/\" className=\"arrow-back\">\n                    ←\n                </Link> \n                <div className=\"progress-bar__container\">\n                    {progressList.map((item, index) => {\n                        let backColor = 'rgba(100,100,100,0.2)'\n                        let fontColor = '#C4C4C4'\n                        let fontColor2 = 'rgba(0,0,0,0.6)'\n\n                        if(item.num < cnum){\n                            backColor = 'linear-gradient(180deg, #9281FF 0%, #6C63FF 100%)'\n                            fontColor = \"white\"\n                            fontColor2 = 'black'\n                        }else if(item.num === cnum){\n                            backColor = 'white'\n                            fontColor = \"#6C63FF\"\n                            fontColor2 = \"#6C63FF\"\n                        }\n\n                        return(\n                            <span style={{display:'flex', flexDirection:'column', margin:'3%', alignItems: 'center', justifyContent: 'center'}}>\n                                <span className=\"list-component\" style={{background:`${backColor}`, color:`${fontColor}`, border:`1px solid ${fontColor}`}}>{item.num}</span>\n                                <span style={{fontSize:'12px', color:`${fontColor2}`, marginTop:'7px'}}>{item.name}</span>\n                            </span>\n                        )\n                    })}\n                </div>\n                <div className=\"center-column\">\n                    {content()}\n                </div>\n            </Box>\n        </StyledModal>\n\n        <StyledModal2\n            aria-labelledby=\"unstyled-modal-title\"\n            aria-describedby=\"unstyled-modal-description\"\n            open={tmodalOpen}\n            onClose={() => setTmodalOpen(false)}\n            BackdropComponent={Backdrop2}\n        >\n            <Box sx={style2}>\n                <>\n                템플릿\n                </>\n            </Box>\n        </StyledModal2>\n\n        </div>\n    )\n}\n\nexport default FirstQuestions\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/ConfirmCustom.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/NavAndFooter/Footer.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Modal/LoadingModal.js",["721","722"],"import React, {useState} from 'react'\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\nimport \"@lottiefiles/lottie-player\";\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Backdrop = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: 300,\n  width: 300,\n  bgcolor: 'rgba(255,255,255,0)',\n  border: '0px solid #000',\n  p: 2,\n  px: 4,\n  pb: 3,\n};\n\nfunction LoadingModal({loading, setLoading}) {\n\n    return (\n        <div>\n            <StyledModal\n                aria-labelledby=\"unstyled-modal-title\"\n                aria-describedby=\"unstyled-modal-description\"\n                open={loading}\n                BackdropComponent={Backdrop}\n            >\n              <Box sx={style}>\n                <lottie-player\n                    autoplay\n                    loop\n                    mode=\"normal\"\n                    src=\"https://assets7.lottiefiles.com/packages/lf20_8y9IYf.json\"\n                    style={{width:'320px'}}\n                >\n                </lottie-player>\n              </Box>\n            </StyledModal>\n        </div>\n    )\n}\n\nexport default LoadingModal\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/UserContents.js",["723"],"import React, {useState} from 'react'\nimport UserSection from './Sections/UserSection'\nimport { isMobile } from 'react-device-detect'\n\nfunction UserContents({contents, setting}) {\n    const sectionsReturn = contents.map((item, index) => {\n        return(\n            <>\n            {\n                item.responsive.mobile && isMobile && \n                    <div style={{width:'100%'}}>\n                        <UserSection content={item} setting={setting}/>\n                    </div>\n            }\n            {\n                item.responsive.pc && !isMobile && \n                    <div style={{width:'100%'}}>\n                        <UserSection content={item} setting={setting}/>\n                    </div>\n            }\n            </>\n        )\n    })\n    \n    return (\n        <>\n            {sectionsReturn}\n        </>\n    )\n}\n\nexport default UserContents\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/UserSection.js",["724","725"],"import React, {useState,useContext} from 'react'\nimport DetailSection from './DetailSection'\nimport HeroSection from './HeroSection'\nimport ReviewSection from './ReviewSection'\nimport FeaturesSection from './FeaturesSection'\nimport CtaSection from './CtaSection'\nimport QnaSection from './QnaSection'\nimport GallerySection from './GallerySection'\nimport TextSection from './TextSection'\nimport MockupSection from './MockupSection'\nimport VideoSection from './VideoSection'\n\nfunction UserSection({content, setting, CustomCta, CustomGhost}) {\n\n    const returnType = () => {\n        switch(content.sectionTypeName){\n            case 'DetailSection':\n                return (\n                    <DetailSection content={content} setting={setting}/>\n                )\n\n            case 'HeroSection':\n                return (\n                    <HeroSection content={content} setting={setting}/>\n                )\n\n            case 'ReviewSection':\n                return (\n                    <ReviewSection content={content} setting={setting}/>\n                )\n\n            case 'FeaturesSection':\n                return (\n                    <FeaturesSection content={content} setting={setting}/>\n                )\n\n            case 'CtaSection':\n                return (\n                    <CtaSection content={content} type=\"cta\" setting={setting}/>\n                )\n\n            case 'ApplySection' :\n                return(\n                    <CtaSection content={content} type=\"apply\" setting={setting}/>\n                )\n\n            case 'AppDownloadSection' :\n                return(\n                    <CtaSection content={content} type=\"appDownload\" setting={setting}/>\n                )\n\n            case 'QnaSection' :\n                return(\n                    <QnaSection content={content} setting={setting}/>\n                )\n\n            case 'GallerySection' :\n                return(\n                    <GallerySection content={content} setting={setting}/>\n                )\n\n            case 'TextSection' :\n                return(\n                    <TextSection content={content} setting={setting}/>\n                )\n\n            case 'MockupSection' :\n                return(\n                    <MockupSection content={content} setting={setting}/>\n                )\n\n            case 'VideoSection' :\n                return(\n                    <VideoSection content={content} setting={setting}/>\n                )\n\n            default:\n                return (\n                    <div>\n                        기본\n                    </div>\n                )\n        }\n    }\n\n    return(\n        <div className=\"new-section\" style={{fontSize:'28px'}}>\n            <div className=\"section__container\" \n                style={{backgroundImage:`${ content.backgroundType === 'image' ? `url(${content.backgroundImage.attachment})` : ''}`, backgroundSize:'contain', backgroundRepeat: 'no-repeat', backgroundPosition: 'center center'}} >\n                {\n                    content.backgroundType === 'color' ?\n                    <div style={{backgroundColor:`${content.backgroundColor}`, width:'100%', height:'100%', zIndex:2, position:'absolute'}}>\n                    </div>\n                    :\n                    (content.backgroundImage.overlay && content.backgroundType === 'image') &&\n                    <div style={{backgroundColor:`${content.backgroundColor}`, width:'100%', height:'100%', zIndex:2, position:'absolute'}}>\n                    </div>\n                }\n                {\n                    content.box.use && \n                    <div className=\"section__box\" style={{padding:`0px calc(11vw)`}}>\n                        <div style={{backgroundColor:`${content.box.backgroundColor}`, borderRadius:`${content.box.borderRadius}px`, width:'100%', height:'100%'}}>\n                        </div>\n                    </div>\n                }\n                <div className=\"section__container-inner\"\n                    style={{padding:`${content.padding.top}vh calc(14vw + 30px) ${content.padding.bottom}vh calc(14vw + 30px)`}} >\n                    {/* 실제 섹션이 보여지는건 여기밖에 없음,, */}\n                    {returnType()}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UserSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/UserNavBar.js",["726","727"],"import React from 'react'\nimport AutosizeInput from 'react-input-autosize';\nimport {dbService} from '../../tools/fbase'\n\nfunction UserNavBar({setting, navi}) {\n\n    const moveToPage = async () => {\n        // 파이어베이스에 기록\n        await dbService.collection('datas').add({\n            urlId:setting.urlId,\n            type:'click',\n            from:'내비게이션',\n            created:Date.now(),\n        })\n    }\n\n    return (\n        <div className=\"make-nav-container\" \n            style={{\n                borderBottom:`${navi.bottomBorder.use ? `1px solid ${navi.bottomBorder.color}` : ''}`, \n                backgroundColor:`${navi.backgroundColor}`, \n                height:`${navi.height}px`, position:`${navi.fixed ? 'fixed' : 'relative'}`\n            }}\n            >\n                \n            <>\n                <div className=\"make-nav-logoc\" style={{height:`${navi.height}px`, justifyContent:`${navi.logo.align}`}}>\n                    {navi.logo.image.use && \n                        <div className=\"make-nav-logo-image\">\n                            <img src={navi.logo.image.attachment} width={navi.logo.image.width} />\n                        </div>}\n                    {navi.logo.text.use && \n                        <div className=\"make-nav-logo-image\" style={{\n                            paddingLeft:`${navi.logo.image.use ? '1px' : '8px'}`\n                        }}>\n                            <div\n                                className=\"text-input-flex ti\"\n                                style={{fontSize:`${navi.logo.text.fontSize}px`, color:`${navi.logo.text.color}`, fontFamily:`${setting.font}`}}>\n                                {navi.title} \n                            </div>\n                        </div>\n                    }\n                </div>\n                <div className=\"make-nav-buttonc\" style={{justifyContent:`${navi.button.align}`}}>\n                    { navi.button.cta.use && \n                        <button className=\"cta-button-made\" style={{\n                            borderRadius:`${setting.cta.borderRadius}px`,\n                            backgroundColor:`${setting.cta.backgroundColor}`,\n                            color:`${setting.cta.color}`,\n                            boxShadow:`${setting.cta.shadow ? '1px 2px 4px rgba(0,0,0,0.2)' : 'none'}`,\n                            border:`${setting.cta.border ? `1px solid ${setting.cta.borderColor}` : 'none'}`\n                        }} onClick={() => {\n                            moveToPage()\n                            window.open(\n                                navi.button.cta.link,\n                                '_blank' // <- This is what makes it open in a new window.\n                              );\n                            // window.location.href = navi.button.cta.link\n                        }}>\n                            <div className=\"text-input-flex pointer\"\n                                style={{fontFamily:`${setting.smallFont}`, borderRadius:`${setting.cta.borderRadius}px`,  backgroundColor:`${setting.cta.backgroundColor}`}}>\n                                {navi.button.cta.text }\n                            </div>\n                        </button>\n                    }\n                    { navi.button.ghost.use && \n                        <button className=\"cta-button-made\" style={{\n                            marginLeft:`${ navi.button.cta.use ? '5px' : '0px'}`,\n                            borderRadius:`${setting.ghost.borderRadius}px`,\n                            backgroundColor:`${setting.ghost.backgroundColor}`,\n                            color:`${setting.ghost.color}`,\n                            boxShadow:`${setting.ghost.shadow ? '1px 2px 4px rgba(0,0,0,0.2)' : 'none'}`,\n                            border:`${setting.ghost.border ? `1px solid ${setting.ghost.borderColor}` : 'none'}`\n                        }} onClick={() => {\n                            moveToPage()\n                            window.open(\n                                navi.button.ghost.link,\n                                '_blank' // <- This is what makes it open in a new window.\n                              );\n                        }}>\n                            <div className=\"text-input-flex pointer\"\n                                style={{fontFamily:`${setting.smallFont}`, borderRadius:`${setting.ghost.borderRadius}px`,  backgroundColor:`${setting.ghost.backgroundColor}`}}>\n                                { navi.button.ghost.text }\n                            </div>\n                        </button>\n                    }\n                </div>\n            </>\n        </div>\n    )\n}\n\nexport default UserNavBar\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/UserFoot.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Make/NavBarInMakePage/NavBarInMakePage.js",["728","729","730","731","732","733"],"import React, {useContext, useState} from 'react';\nimport { Button } from 'antd';\nimport './MakeNavBar.css';\nimport { MyContext } from '../MakePageV2'\nimport {Monitor} from '@styled-icons/feather'\nimport { Phone } from '@styled-icons/bootstrap'\nimport {Fullscreen} from '@styled-icons/bootstrap'\nimport LoginModal from '../../../components/Login/LoginModal'\nimport {\n    ChakraProvider,\n    Popover,\n    PopoverTrigger,\n    PopoverContent,\n    PopoverHeader,\n    PopoverBody,\n    PopoverFooter,\n    PopoverArrow,\n    PopoverCloseButton,\n    PopoverAnchor,\n    ButtonGroup,\n    Portal,\n  } from '@chakra-ui/react'\n\nconst NavBarInMakePage = (props) => {\n    const [loginModal, setLoginModal] = useState(false)\n    const {state, action} = useContext(MyContext)\n    const [deviceOpen, setDeviceOpen] = useState(false);\n  \n    const handleClick = () => {\n        setDeviceOpen(!deviceOpen);\n    };\n  \n    const handleClose = () => {\n        setDeviceOpen(false);\n    };\n\n    const moveToMain = () => {\n        \n        window.location.replace('/');\n    }\n    \n    const onSubmit = async () => {\n        // 배포하기 클릭\n        // 관리페이지에서 수정하기를 누른 거라면\n        \n        props.saveLocalStorage()\n\n        if(props.userObj === null){\n            alert(\"로그인 하셔야 저장 후 배포하실 수 있습니다.\");\n            setLoginModal(true);\n        }else{\n            // 새로 업로드 해야한다.\n            // 파이어 베이스에 저장한다.\n            props.saveTo();\n            // setCheckModalOpen(true);\n        }\n    }\n\n    const deviceSelect = () => {\n        return(\n            <div style={{width:'15%', paddingRight:'20px'}}>\n                <Popover\n                    placement='bottom'\n                    closeOnBlur={false}\n                    isOpen={deviceOpen}\n                    onClose={handleClose}\n                >\n                <PopoverTrigger>\n                    <div className=\"device-button\" onClick={handleClick} style={{marginRight:'20px'}}>\n                        {\n                            props.isPhone ? <Phone size=\"25\" /> : <Monitor size=\"25\" />\n                        }\n                    </div>\n                </PopoverTrigger>\n                <PopoverContent style={{width:'200px', borderRadius:'20px'}}>\n                    <PopoverArrow />\n                    \n                    <PopoverBody>\n                        <div className=\"device__container\">\n                            <span className={props.isPhone && !props.full ? \"device-button clicked\" : \"device-button\" } onClick={e => {props.setIsPhone(true);props.setFull(false); handleClick()}}>\n                                <div className=\"left\">\n                                    모바일\n                                </div>\n                                <div className=\"right\">\n                                    <Phone size=\"25\" />\n                                </div>\n                            </span>\n                            <span className={props.full ? \"device-button clicked\" : \"device-button\" } onClick={e => {\n                                if(state.isPhone){\n                                    return\n                                }else{\n                                props.setFull(true); \n                                handleClick()\n                                }   \n                            }}>\n                                <div className=\"left\">\n                                    전체화면\n                                </div>\n                                <div className=\"right\">\n                                    <Fullscreen size=\"25\" />\n                                </div>\n                            </span>\n                            <span className={!props.isPhone && !props.full ? \"device-button clicked\" : \"device-button\" } onClick={e => {props.setIsPhone(false);props.setFull(false); handleClick()}}>\n                                <div className=\"left\">\n                                    PC\n                                </div>\n                                <div className=\"right\">\n                                    <Monitor size=\"25\" />\n                                </div>\n                            </span>\n                        </div>\n                    </PopoverBody>\n                </PopoverContent>\n                </Popover>\n            </div>\n            )\n    }\n\n    return (\n        <ChakraProvider>\n            <div className=\"make-page-nav\">\n                <div className=\"make-page-nav-half\" style={{justifyContent: 'start', marginLeft:'1%'}}>\n                    <span className={state.secNum === 52 ? \"make-nav-button nb-clicked\" : \"make-nav-button\"} onClick={e => {\n                        action.setSecNum(52); \n                    }} >\n                        기본설정\n                    </span>\n                    <span className={state.secNum === 53 ? \"make-nav-button nb-clicked\" : \"make-nav-button\"} onClick={e => {\n                        action.setSecNum(53);\n                    }} >\n                        페이지 구성\n                    </span>\n                </div>\n                <div className=\"make-page-nav-half\">\n                    <div className=\"centera\">\n                        <Button onClick={() => moveToMain()} className=\"edit-nav-home-button\">\n                            Surfee\n                        </Button>\n                    </div>\n                </div>\n                <div className=\"make-page-nav-half\" style={{justifyContent: 'end', marginRight:'1%'}}>\n                    {deviceSelect()}\n                    <Button onClick={() => onSubmit()} className=\"default-button-02\">\n                        저장하기\n                    </Button>\n                </div>\n            </div>\n            <LoginModal open={loginModal} setOpen={setLoginModal} />\n        </ChakraProvider>\n    )\n}\n\nexport default NavBarInMakePage\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NavFooterSetting/EditSetting.js",["734","735","736","737","738","739","740"],"import React, {useState, useContext} from 'react'\nimport RadioCustom from '../tools/Custom/RadioCustom'\nimport ColorCustom from '../tools/Custom/ColorCustom'\nimport SingleColorCustom from '../tools/Custom/SingleColorCustom'\nimport InputCustom from '../tools/Custom/InputCustom'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport SelectCustom from '../tools/Custom/SelectCustom'\nimport './EditSetting.css'\nimport '../EditTemplates/Edit.css'\nimport OpenCloseCustom from '../tools/Custom/OpenCloseCustom'\nimport OnOffCustom from '../tools/Custom/OnOffCustom'\nimport produce from 'immer';\nimport AnimationCustom from '../tools/Custom/AnimationCustom'\nimport AddContentImg from '../tools/func/FuncContentImg'\nimport {Check} from '@styled-icons/bootstrap'\nimport {ChevronRight} from '@styled-icons/boxicons-regular'\nimport OverflowScrolling from 'react-overflow-scrolling';\nimport {\n    ChakraProvider,\n    Popover,\n    PopoverTrigger,\n    PopoverContent,\n    PopoverHeader,\n    PopoverBody,\n    PopoverFooter,\n    PopoverArrow,\n    PopoverCloseButton,\n    PopoverAnchor,\n    ButtonGroup,\n    Portal,\n    Button\n  } from '@chakra-ui/react'\n\nconst fontOptions = [\n    { label: '노토산스', value: 'Noto Sans KR' },\n    { label: '프리텐다드', value: 'Pretendard-Regular' },\n    { label: '나눔스퀘어 라운드', value: 'NanumSquareRound' },\n    { label: '바른 공군', value: 'ROKAFSansBold' },\n    { label: '지마켓 산스', value: 'GmarketSansMedium' },\n    { label: '고운 돋움', value: 'GowunDodum-Regular' },\n    { label: '에스코어 드림', value: 'S-CoreDream-4Regular' },\n    { label: '함박눈체', value : 'SF_HambakSnow'},\n    { label: '카페24 서라운드', value: 'Cafe24Ssurround'},\n    { label: '레페리포인트-Black', value:'LeferiPoint-BlackA'},\n    { label: '고운바탕', value : 'GowunBatang-Regular'},\n    { label: '여기어때 잘난체', value: 'yg-jalnan'},\n]\n\nconst shapeOptions = [\n    { label: '사각형', value: 0 },\n    { label: '라운드', value: 5 },\n    { label: '원형', value: 20 },\n]\n\nconst sizeOptions = [\n    { label: 'small', value: 50 },\n    { label: 'medium', value: 75 },\n    { label: 'large', value: 100 },\n]\n\nfunction EdtiSetting({setting, setSetting, category}) {\n    const [isFontOpen, setIsFontOpen] = useState(false)\n    const [isSmallFontOpen, setIsSmallFontOpen] = useState(false)\n    const open = () => setIsFontOpen(!isFontOpen)\n    const close = () => setIsFontOpen(false)\n\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    // 애니메이션 관련 \n    const animationOptions = [\n        {label:'없음', value: 'none'},\n        {label:'떠오르기', value: 'fade-up'},\n        {label:'zoom-in', value: 'zoom-in'}\n    ]\n\n    const changeAnimationOption = e => {\n        // action.setContents(produce(state.contents, draft => {\n        //     draft[state.secNum].animation.type = e;\n        // }))\n        setSetting({...setting, animation : e})\n    }\n\n    // 이미지 업로드\n    const onChangeContentImage= e => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            const {currentTarget:{result}} = finishedEvent;\n            setSetting(produce(setting, draft=>{\n                draft.faviconAttachment = result;             \n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    // 이미지 삭제\n    const RemoveImage = () => {\n        setSetting(produce(setting, draft=>{\n            draft.faviconAttachment = '';\n        }))\n    }\n\n    const FontSelect = () => {\n        return(\n        <div className=\"edit-element\" style={{flexDirection:'row'}}>\n            <div className=\"left\" style={{width:'20%'}}>제목</div>\n            <div className=\"right\" style={{width:'80%'}}>\n                <Popover\n                    placement='right'\n                    closeOnBlur={false}\n                    isOpen={isFontOpen}\n                    onClose={close}\n                >\n                <PopoverTrigger>\n                    <div className=\"font-button\" style={{fontFamily: `${setting.font}`}} onClick={() => {open(); setIsSmallFontOpen(false)}}>노코드 랜딩페이지 제작 툴, Surfee <ChevronRight size=\"20\"/></div>\n                </PopoverTrigger>\n                <PopoverContent>\n                    <PopoverArrow />\n\n                    <PopoverHeader>폰트를 선택하세요.</PopoverHeader>\n                    \n                    <PopoverCloseButton />\n                    \n                    <PopoverBody>\n                        <div style={{height:'250px'}}>\n                        <OverflowScrolling className='overflow-scrolling2'>\n                            <div className=\"font-select__container\">\n                            {fontOptions.map((item, index) => {\n                                return(\n                                    <div className={item.value === setting.font ? 'select-hover clicked' : 'select-hover'} onClick={(e) => {setSetting(produce(setting, draft => {\n                                        draft.font = item.value\n                                    }))}} style={{fontFamily: `${item.value}`}}>\n                                        <div className=\"left\">\n                                            {item.label}\n                                        </div>\n                                        {\n                                            item.value === setting.font && \n                                            <div className=\"right\">\n                                                <Check size=\"20\"/>\n                                            </div>\n                                        }\n                                    </div>\n                                )\n                            })}\n                            </div>\n                        </OverflowScrolling>\n                        </div>\n                    </PopoverBody>\n                    \n                    <PopoverFooter d='flex' justifyContent='flex-end'>\n                        <ButtonGroup size='sm'>\n                            <div className=\"font-done-button\" onClick={() => close()}>Apply</div>\n                        </ButtonGroup>\n                    </PopoverFooter>\n\n                </PopoverContent>\n                </Popover>\n            </div>\n        </div>\n        )\n    }\n\n    const SmallFontSelect = () => {\n        return(\n        <div className=\"edit-element\" style={{flexDirection:'row'}}>\n            <div className=\"left\" style={{width:'20%'}}>본문</div>\n            <div className=\"right\" style={{width:'80%'}}>\n                <Popover\n                    placement='right'\n                    closeOnBlur={false}\n                    isOpen={isSmallFontOpen}\n                    onClose={() => setIsSmallFontOpen(false)}\n                >\n                <PopoverTrigger>\n                    <div className=\"font-button\" style={{fontFamily: `${setting.smallFont}`}} onClick={() => {setIsSmallFontOpen(!isSmallFontOpen); close()}}>노코드 랜딩페이지 제작 툴, Surfee <ChevronRight size=\"20\"/></div>\n                </PopoverTrigger>\n                <PopoverContent>\n                    <PopoverArrow />\n\n                    <PopoverHeader>폰트를 선택하세요.</PopoverHeader>\n                    \n                    <PopoverCloseButton />\n                    \n                    <PopoverBody>\n\n                        <div style={{height:'250px'}}>\n                            <OverflowScrolling className='overflow-scrolling2'>\n                                <div className=\"font-select__container\">\n                                    {fontOptions.map((item, index) => {\n                                        return(\n                                            <div className={item.value === setting.smallFont ? 'select-hover clicked' : 'select-hover'} onClick={(e) => {setSetting(produce(setting, draft => {\n                                                draft.smallFont = item.value\n                                            }))}} style={{fontFamily: `${item.value}`}}>\n                                                <div className=\"left\">\n                                                    {item.label}\n                                                </div>\n                                                {\n                                                    item.value === setting.smallFont && \n                                                    <div className=\"right\">\n                                                        <Check size=\"20\"/>\n                                                    </div>\n                                                }\n                                            </div>\n                                        )\n                                    })}\n                                </div>\n                            </OverflowScrolling>\n                        </div>\n                    </PopoverBody>\n                    \n                    <PopoverFooter d='flex' justifyContent='flex-end'>\n                        <ButtonGroup size='sm'>\n                            <div className=\"font-done-button\" onClick={() => setIsSmallFontOpen(false)}>Apply</div>\n                        </ButtonGroup>\n                    </PopoverFooter>\n\n                </PopoverContent>\n                </Popover>\n            </div>\n        </div>\n        )\n    }\n\n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <>\n                    <div>\n                        <OpenCloseCustom title=\"파비콘\" tooltip=\"웹 브라우저의 주소창에 표시되는 웹 페이지를 대표하는 아이콘입니다.\">\n                            <AddContentImg text=\"파비콘\" subtext=\"최대 1MB 업로드 가능, 64x64px 권장\" value={setting.faviconAttachment} func={e => onChangeContentImage(e)} removeFunc={e => RemoveImage(e)}/>\n                        </OpenCloseCustom>\n                        <OpenCloseCustom title=\"페이지 이름\" tooltip=\"웹 브라우저의 주소창에 표시되는 웹 페이지의 이름입니다.\">\n                            <InputCustom value={setting.title} placeholder=\"웹 브라우저의 주소창에 표시되는 웹 페이지의 이름입니다.\" func={(e) => setSetting(produce(setting, draft => {\n                                draft.title = e\n                            }))} />\n                        </OpenCloseCustom>\n                        <OpenCloseCustom title=\"URL\">\n                            <div style={{flexDirection:'column'}}>\n                                <div style={{display:'flex'}}>\n                                    <div>\n                                        <InputCustom value={setting.urlId} placeholder=\"사용할 url을 입력하세요\" noKorean func={(e) => setSetting(produce(setting, draft => {\n                                            draft.urlId = e;\n                                        }))}/>\n                                    </div>\n                                    <div style={{color:'#202936', marginTop: '30px', marginRight: '30px'}}>\n                                        .surfee.co.kr\n                                    </div>\n                                </div>\n                            </div>\n                                <div style={{width:'90%', justifyContent:'center', fontSize:'12px', marginBottom:'16px'}}>\n                                    * 영문, 숫자만 입력 가능\n                                </div>\n                        </OpenCloseCustom>\n                        <OpenCloseCustom title=\"플로팅 버튼\" tooltip=\"화면 하단에 고정되어 떠다니는 버튼입니다. 내비게이션의 버튼과 플로팅 버튼 중 하나만 사용하시길 바랍니다.\">\n                            <OnOffCustom text=\"플로팅 버튼\" value={setting.fta.use} func={(e) => setSetting(produce(setting, draft => {\n                                draft.fta.use = !setting.fta.use\n                            }))} />\n                            {\n                                setting.fta.use && \n                                <>\n                                    <RadioCustom text=\"사이즈\" options={sizeOptions} value={setting.fta.size} func={(e) => setSetting(produce(setting, draft => {\n                                        draft.fta.size = e\n                                    }))} />\n                                    <RadioCustom text=\"모양\" options={shapeOptions} value={setting.fta.shape} func={(e) => setSetting(produce(setting, draft => {\n                                        draft.fta.shape = e\n                                    }))} />\n                                    <div className=\"edit-element\">\n                                        {/* 폰트 색상 연결 안해놓음 디자인만! */}\n                                        <SingleColorCustom text=\"폰트 색상\" value={setting.fta.backgroundColor} func={(e) => setSetting(produce(setting, draft => {\n                                            draft.fta.backgroundColor = e;\n                                        }))} />\n                                        <div className=\"edit-element-bar\"/>\n                                        <SingleColorCustom text=\"배경 색상\" value={setting.fta.backgroundColor} func={(e) => setSetting(produce(setting, draft => {\n                                            draft.fta.backgroundColor = e;\n                                        }))} />\n                                    </div>\n                                    <OnOffCustom text=\"테두리\" value={setting.ghost.border} func={(e) => setSetting(produce(setting, draft => {\n                                        draft.ghost.border = !setting.ghost.border\n                                    }))} />\n                                    {\n                                        setting.ghost.border && \n                                        <ColorCustom text=\"테두리 색상\" value={setting.ghost.borderColor} func={(e) => setSetting(produce(setting, draft => {\n                                            draft.ghost.borderColor = e;\n                                        }))} />\n                                    }\n                                    <OnOffCustom text=\"그림자\" value={setting.ghost.shadow} func={(e) => setSetting(produce(setting, draft => {\n                                        draft.ghost.shadow = !setting.ghost.shadow\n                                    }))} />\n                                    <InputCustom text=\"링크 연결\" value={setting.fta.link} placeholder=\"링크를 입력하세요\" func={(e) => setSetting(produce(setting, draft => {\n                                        draft.fta.link = e\n                                    }))}/>\n                                </>\n                            }\n                        </OpenCloseCustom>\n                    </div>\n                    </>\n                )\n\n            case 1:\n                // case 1은 템플릿 변경\n                return(\n                    <>\n                    <div>\n                        <OpenCloseCustom title=\"메인 색상\">\n                            <ColorCustom text=\"색상\" value={setting.color} func={(e) => setSetting(produce(setting, draft => {\n                                draft.color = e;\n                            }))} />\n                        </OpenCloseCustom>\n                        <OpenCloseCustom title=\"글씨체\">\n                            <ChakraProvider>\n                                {FontSelect()}\n                                {SmallFontSelect()}\n                            </ChakraProvider>\n                        </OpenCloseCustom>\n                        <OpenCloseCustom title=\"CTA 버튼\" preseen={\n                            <div className=\"edit-element\">\n                                <div className=\"centera\" style={{padding:'5px 10px'}}>\n                                    <div className=\"custom-button\" style={{ color:`${setting.cta.color}`, border:`${setting.cta.border ? `1px solid ${setting.cta.borderColor}` : 'none'}`, boxShadow:`${setting.cta.shadow ? '2px 2px 5px rgba(0,0,0,0.3)' : 'none'}`, borderRadius:`${setting.cta.borderRadius}px`, backgroundColor:`${setting.cta.backgroundColor}`}}>\n                                        디자인 미리보기\n                                    </div>\n                                </div>\n                            </div>\n                        }>\n                            <RadioCustom button text=\"모양\" options={shapeOptions} value={setting.cta.borderRadius} func={(e) => setSetting(produce(setting, draft => {\n                                draft.cta.borderRadius = e\n                            }))} />\n                            <div className=\"edit-element\">\n                            <SingleColorCustom text=\"배경 색상\" value={setting.cta.backgroundColor} func={(e) => setSetting(produce(setting, draft => {\n                                draft.cta.backgroundColor = e;\n                            }))} />\n                            <div>\n                            <div className=\"edit-element-bar\"/>\n                            </div>\n                            <SingleColorCustom text=\"폰트 색상\" value={setting.cta.color} func={(e) => setSetting(produce(setting, draft => {\n                                draft.cta.color = e;\n                            }))} />\n                            </div>\n                            <OnOffCustom text=\"테두리\" value={setting.cta.border} func={(e) => setSetting(produce(setting, draft => {\n                                draft.cta.border = !setting.cta.border\n                            }))} />\n                                {\n                                    setting.cta.border && \n                                        <ColorCustom value={setting.cta.borderColor} func={(e) => setSetting(produce(setting, draft => {\n                                            draft.cta.borderColor = e;\n                                        }))} />\n                                }\n                            <OnOffCustom text=\"그림자\" value={setting.cta.shadow} func={(e) => setSetting(produce(setting, draft => {\n                                draft.cta.shadow = !setting.cta.shadow\n                            }))} />\n                        </OpenCloseCustom>\n                        <OpenCloseCustom title=\"고스트 버튼\" preseen={\n                            <div className=\"edit-element\">\n                                <div className=\"centera\" style={{padding:'5px 10px'}}>\n                                    <div className=\"custom-button\" style={{ color:`${setting.ghost.color}`, border:`${setting.ghost.border ? `1px solid ${setting.borderColor}` : 'none'}`, boxShadow:`${setting.ghost.shadow ? '2px 2px 5px rgba(0,0,0,0.3)' : 'none'}`, borderRadius:`${setting.ghost.borderRadius}px`, backgroundColor:`${setting.ghost.backgroundColor}`}}>\n                                        디자인 미리보기\n                                    </div>\n                                </div>\n                            </div>\n                        }>\n                            <RadioCustom text=\"모양\" options={shapeOptions} value={setting.ghost.borderRadius} func={(e) => setSetting(produce(setting, draft => {\n                                draft.ghost.borderRadius = e\n                            }))} />\n                            <div className=\"edit-element\">\n                            <SingleColorCustom text=\"배경 색상\" value={setting.ghost.backgroundColor} func={(e) => setSetting(produce(setting, draft => {\n                                draft.ghost.backgroundColor = e;\n                            }))} />\n                            <div>\n                            <div className=\"edit-element-bar\"/>\n                            </div>\n                            <SingleColorCustom text=\"폰트 색상\" value={setting.ghost.color} func={(e) => setSetting(produce(setting, draft => {\n                                draft.ghost.color = e;\n                            }))} />\n                            </div>\n                            <OnOffCustom text=\"그림자\" value={setting.ghost.shadow} func={(e) => setSetting(produce(setting, draft => {\n                                draft.ghost.shadow = !setting.ghost.shadow\n                            }))} />\n                            <OnOffCustom text=\"테두리\" value={setting.ghost.border} func={(e) => setSetting(produce(setting, draft => {\n                                draft.ghost.border = !setting.ghost.border\n                            }))} />\n                            {\n                                setting.ghost.border && \n                                <ColorCustom text=\"테두리 색상\" value={setting.ghost.borderColor} func={(e) => setSetting(produce(setting, draft => {\n                                    draft.ghost.borderColor = e;\n                                }))} />\n                            }\n                        </OpenCloseCustom>\n                    </div>\n                    <OpenCloseCustom title=\"애니메이션\">\n                        <AnimationCustom \n                            text=\"애니메이션\" \n                            options={animationOptions} \n                            value={setting.animation} \n                            func={ e => changeAnimationOption(e)} />\n                    </OpenCloseCustom>\n                    </>\n                )\n        }\n    }\n\n    return(\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EdtiSetting\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Footer/MakeFooterV2.js",["741","742","743"],"import React, {useContext, useState} from 'react'\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport FTemplate from './FTemplate'\nimport {Delete, Options} from '@styled-icons/fluentui-system-filled'\nimport './MakeFooter.css'\n\nfunction MakeFooterV2({full, history, foot, setFoot}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const [isHover, setIsHover] = useState('none');\n\n    return (\n        <div className=\"make-footer\" onMouseEnter={() => setIsHover('flex')} onMouseLeave={() => setIsHover('none')} style={{width:`${full ? '100%' : '100%'}`}}>\n            <footer className=\"make-footer__container\" style={{backgroundColor:`${foot.backgroundColor}`, paddingTop: `${foot.padding}px`, paddingBottom: `${foot.padding}px`}} onClick={() => action.setSecNum(51)}>\n                    <FTemplate foot={foot} history={history} setFoot={setFoot} />\n            </footer>\n            <div className=\"for-section-hover\" style={{backgroundColor: `${isHover === 'flex' ? 'rgba(200,200,200,0.7)' : 'rgba(0,0,0,0)'}`}}>\n            </div>\n        </div>\n    )\n}\n\nexport default MakeFooterV2\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NewSectionMake.js",["744","745","746","747","748","749","750"],"import React, {useState, useEffect, useContext} from 'react'\n// import ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport EditDetailSection from './EditTemplates/EditDetailSection'\nimport EditCtaSection from './EditTemplates/EditCtaSection'\nimport EditHeroSection from './EditTemplates/EditHeroSection'\nimport EditReviewSection from './EditTemplates/EditReviewSection'\nimport EditFeaturesSection from './EditTemplates/EditFeaturesSection'\nimport EditAppDownloadSection from './EditTemplates/EditAppDownloadSection'\nimport EditApplySection from './EditTemplates/EditApplySection'\nimport EditQnaSection from './EditTemplates/EditQnaSection'\nimport EditGallerySection from './EditTemplates/EditGallerySection'\nimport EditTextSection from './EditTemplates/EditTextSection'\nimport EditMockupSection from './EditTemplates/EditMockupSection'\nimport EditVideoSection from './EditTemplates/EditVideoSection'\nimport EditTopBar from './tools/func/FuncTopBar'\n\nimport EditSetting from './NavFooterSetting/EditSetting'\nimport EditNaviSection from './NavFooterSetting/EditNaviSection'\nimport EditFooterSection from './NavFooterSetting/EditFooterSection'\nimport EditContents from './NavFooterSetting/EditContents'\nimport BackButton from '../../../tools/img/backButton.png'\nimport './NewSectionMake.css'\n\nconst NAVSECNUM = 50;\nconst FOOTSECNUM = 51;\nconst SETTINGSECNUM = 52;\nconst CONTENTSSECNUM = 53;\n\nexport const MakeContext = React.createContext({\n    stateC : {usedColors : [\n        \"#ffffff\",\n        \"#00ff00\",\n        \"#ff0000\",\n        \"#0000ff\",\n        \"#000000\",\n    ]},\n    actionC : {setUsedColors : () => {}}\n});\n\nfunction NewSectionMake({content, foot, setFoot, navi, setNavi, setting, setSetting}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const [usedColors, setUsedColors] = useState([\n        \"#ffffff\",\n        \"#00ff00\",\n        \"#ff0000\",\n        \"#0000ff\",\n        \"#000000\",\n    ]);\n\n    const contextValue = {\n        stateC: {usedColors},\n        actionC : {setUsedColors},\n    }\n\n    const sectionMakeTable = () => {\n\n        switch(content.sectionTypeName){\n            case 'DetailSection':\n                return (\n                    <EditDetailSection content={content} category={state.category}/>\n                )\n\n            // 이미지인 경우 편집화면\n            case 'HeroSection':\n                return (\n                    <EditHeroSection content={content} category={state.category}/>\n                )\n\n            case 'CtaSection':\n                return (\n                    <EditCtaSection content={content} category={state.category} type=\"cta\"/>\n                )\n\n            // 리뷰들인 경우 편집화면\n            case 'ReviewSection':\n                return(\n                    <EditReviewSection content={content} category={state.category}/>\n                )\n            \n            case 'FeaturesSection':\n                return(\n                    <EditFeaturesSection content={content} category={state.category}/>\n\n                )\n\n            case 'ApplySection':\n                return(\n                    <EditCtaSection content={content} category={state.category} type=\"apply\"/>\n\n                )\n            \n            case 'AppDownloadSection':\n                return(\n                    <EditCtaSection content={content} category={state.category} type=\"appDownload\"/>\n\n                )\n    \n            case 'QnaSection':\n                return(\n                    <EditQnaSection content={content} category={state.category}/>\n                )\n\n            case 'GallerySection':\n                return(\n                    <EditGallerySection content={content} category={state.category}/>\n                )\n\n            case 'TextSection':\n                return(\n                    <EditTextSection content={content} category={state.category}/>\n                )\n\n            case 'MockupSection':\n                return(\n                    <EditMockupSection content={content} category={state.category}/>\n                )\n\n            case 'VideoSection':\n                return(\n                    <EditVideoSection content={content} category={state.category}/>\n                )\n    \n            default:\n                return(\n                    <div>\n                        섹션 {state.secNum}번이고 템플릿은 뭐지? 디폴트 값입니다.\n                        <br/>\n                    </div>\n                )\n\n        }\n    }\n\n    const returnMake = () => {\n        if(state.secNum === NAVSECNUM){\n            return(\n                <>\n                    <div className=\"back__container\">\n                        <div className=\"back__container-button\" onClick={() => action.setSecNum(CONTENTSSECNUM)} style={{cursor:'pointer'}}>\n                            <span className=\"back-button\">\n                                <img src={BackButton} />\n                            </span>\n                            <span className=\"back-text\">\n                                내비게이션 바\n                            </span>\n                        </div>\n                    </div>\n                    <EditTopBar category={state.category} setCategory={action.setCategory} />\n                    <EditNaviSection navi={navi} setNavi={setNavi} category={state.category}/>\n                </>\n            )\n\n        }else if(state.secNum === FOOTSECNUM ){\n            return(\n                <>\n                    <div className=\"back__container\">\n                        <div className=\"back__container-button\" onClick={() => action.setSecNum(CONTENTSSECNUM)} style={{cursor:'pointer'}}>\n                            <span className=\"back-button\">\n                            <img src={BackButton} />\n                            </span>\n                            <span className=\"back-text\">\n                                푸터 바\n                            </span>\n                        </div>\n                    </div>\n                    <EditTopBar category={state.category} setCategory={action.setCategory} />\n                    <EditFooterSection foot={foot} setFoot={setFoot} category={state.category}/>\n                </>\n            )\n        }else if(state.secNum === SETTINGSECNUM ){\n            return(\n                <>\n                    <div className=\"back__container\">\n                        <div className=\"back__container-button\" onClick={() => action.setSecNum(CONTENTSSECNUM)} style={{cursor:'pointer'}}>\n                            <span className=\"back-button\">\n                            <img src={BackButton} />\n                            </span>\n                            <span className=\"back-text\">\n                                기본설정\n                            </span>\n                        </div>\n                    </div>\n                    <EditTopBar category={state.category} setCategory={action.setCategory} />\n                    <EditSetting setting={setting} setSetting={setSetting} category={state.category}/>\n                </>\n            )\n        }else if(state.secNum === CONTENTSSECNUM ){\n            return(\n                <EditContents navi={navi} setNavi={setNavi} foot={foot} setFoot={setFoot}/>\n            )\n        }else{\n            return (\n                <>\n                {content && \n                <>\n                    <div className=\"back__container\">\n                        <div className=\"back__container-button\" onClick={() => action.setSecNum(CONTENTSSECNUM)} style={{cursor:'pointer'}}>\n                            <span className=\"back-button\">\n                            <img src={BackButton} />\n                            </span>\n                            <span className=\"back-text\">\n                                {content.name}\n                            </span>\n                        </div>\n                    </div>\n                    <EditTopBar category={state.category} setCategory={action.setCategory} />\n                    {sectionMakeTable()}\n                </> }\n                </>\n            )\n        }\n    }\n\n    return (\n        <MakeContext.Provider value={contextValue}>\n            {returnMake()}\n        </MakeContext.Provider>\n    )\n}\n\nexport default NewSectionMake\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/NavBar/MakeNavigationV2.js",["751","752","753"],"import React, {useContext, useState} from 'react'\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport NaviConatainer from './NaviConatainer'\nimport {Delete, Options} from '@styled-icons/fluentui-system-filled'\nimport { motion } from 'framer-motion'\nimport produce from 'immer'\nimport './MakeNavigation.css'\n\nfunction MakeNavigationV2({full, navi, setNavi, history}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const [isHover, setIsHover] = useState('none');\n\n    const CustomCtaButton = ({value, onClick, style}) => {\n        return(\n            <div style={{\n                ...style,\n                display: 'flex', justifyContent:'center', alignItems: 'center',\n                padding:'10px 10.5px',\n                borderRadius:`${state.setting.cta.borderRadius}px`,\n                backgroundColor:`${state.setting.cta.backgroundColor}`,\n                color:`${state.setting.cta.color}`,\n                boxShadow:`${state.setting.cta.shadow ? '1px 2px 4px rgba(0,0,0,0.2)' : 'none'}`,\n                border:`${state.setting.cta.border ? `1px solid ${state.setting.cta.borderColor}` : 'none'}`\n            }} onClick={() => onClick}>\n                <input className=\"text-input-flex ti\" value={navi.button.cta.text } onChange={(e) => setNavi(produce(navi, draft => {\n                    draft.button.cta.text = e.currentTarget.value;\n                }))} style={{fontFamily:`${state.setting.smallFont}`}}/>\n            </div>\n        )\n    }\n\n    const CustomGhostButton = (props) => {\n        return(\n            <div style={{\n                ...props.style,\n                display: 'flex', justifyContent:'center', alignItems: 'center',\n                padding:'10px 10.5px',\n                borderRadius:`${state.setting.ghost.borderRadius}px`,\n                backgroundColor:`${state.setting.ghost.backgroundColor}`,\n                color:`${state.setting.ghost.color}`,\n                boxShadow:`${state.setting.cta.shadow ? '1px 2px 4px rgba(0,0,0,0.2)' : 'none'}`,\n                border:`${state.setting.ghost.border ? `1px solid ${state.setting.ghost.borderColor}` : 'none'}`\n            }} onClick={() => props.onClick}>\n                {props.child}\n            </div>\n        )\n    }\n\n    return (\n        <>\n        <div className=\"make-navigation\" onMouseEnter={() => setIsHover('flex')} onMouseLeave={() => setIsHover('none')}>\n            <div className=\"make-nav-container\" style={{borderBottom:`${navi.bottomBorder.use ? `1px solid ${navi.bottomBorder.color}` : ''}`, backgroundColor:`${navi.backgroundColor}`, height:`${navi.height}px`}} onClick={() => action.setSecNum(50)}>\n                <NaviConatainer navi={navi} setNavi={setNavi} CustomCtaButton={CustomCtaButton} CustomGhostButton={CustomGhostButton} />\n            </div>\n            <div className=\"for-section-hover\" style={{backgroundColor: `${isHover === 'flex' ? 'rgba(200,200,200,0.7)' : 'rgba(0,0,0,0)'}`}}>\n            </div>\n        </div>\n        </>\n    )\n\n}\n\nexport default MakeNavigationV2\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/baseTypes.js",["754"],"const commons = {\n    layout: 1,\n    backgroundColor:'#ffffff',\n    backgroundType:'color',\n    backgroundImage:{\n        use:false,\n        attachment:'',\n        overlay:false,\n    },\n    title:{\n        use:true,\n        text: '노코드 랜딩페이지 제작 툴',\n        align: 'left',\n        size: 32,\n        color: '#000000'\n    },\n    desc:{\n        use:true,\n        text: 'Surfee에 오신 것을 환영합니다. 자유롭게 사용해보세요!',\n        align: 'left',\n        size: 16,\n        color: '#000000'\n    },\n    contents:{\n        use: true,\n        type: 'image',\n    },\n    padding:{\n        top:15,\n        bottom:15,\n    },\n    animation:{\n        use:true,\n        type:'none',\n    },\n    box:{\n        use:false,\n        backgroundColor:'#6CCAD0',\n        borderRadius:5,\n    },\n    responsive:{\n        mobile:true,\n        pc:true,\n    },\n    mobile:{\n        align:'center',\n        layout:3,\n        contentSize:50,\n    }\n}\n\nconst contents = {\n    image:{\n        oneImg:true,\n        type:'image',\n        attachment:'',\n        width:70,\n        border:0,\n        size:150,\n        slide:false,\n    },\n    slide_img:{\n        slide1: '',\n        slide2: '',\n        slide3: '',\n    },\n    video:{\n        use: false,\n        youtube: false,\n        type: 'base',\n        file: '',\n        link: '',\n        auto: true,\n    },\n    mockup: {\n        use: false,\n        type: 'mobile',\n        // mobile, tablet, desktop, mobile2, desk+mob 있음\n        file: '',\n        file2: '',\n    },\n    mobile: {\n        use: true,\n        file: '',\n        size: 200\n    },\n    tablet: {\n        use: false,\n        file: '',\n        size: 200\n    },\n    desktop: {\n        use: false,\n        file: '',\n        size: 400,\n    },\n    mobile2: {\n        use: false,\n        file1: '',\n        file2: '',\n        size: 200,\n    },\n    deskMobile: {\n        use: false,\n        file1: '',\n        file2: '',\n        size1: 100,\n        size2: 400,\n    },\n}\n\nconst element = {\n    use:true,\n    type:'image',\n    backgroundColor:'#6CCAD0',\n    // borderRaidus:5,\n    iconBorder:5,\n    imageBorder:5,\n    size:50,\n}\n\nconst button = {\n    button:{\n        use : true,\n        ctaText:'CTA 버튼',\n        ghostText:'고스트 버튼',\n        align:'start',\n        ctaUse:true,\n        ctaOption: 'link',\n        ghostOption: 'link',\n        ctaLink:'',\n        ctaApply: '',\n        ghostUseOrLink: true, \n        ghostUse:true,\n        ghostLink:'',\n        ghostApply: '',\n    },\n    appButton:{\n        use: true,\n        apple: '',\n        google: ''\n    },\n    ctaApplyInputs: [],\n    ghostApplyInputs: [],\n    caution:{\n        use:true,\n        color: '#000000',\n        align: '',\n        size: 10,\n        text:'조심하세요',\n    }\n}\n\nexport const base = [\n    {\n        // 공통적으로 들어갈 확률이 높은 것들\n        ...commons,\n        ...contents,\n        ...button,\n        name:'메인',\n        sectionTypeName:'HeroSection',\n        paddingSize:'',\n        paddingLeft:'',\n        paddingRight:'',\n        paddingCustom: false,\n        layout:1,\n    },\n    {\n        ...commons,\n        ...contents,\n        name:'디테일',\n        sectionTypeName:'DetailSection',\n        paddingSize:'',\n        paddingLeft:'',\n        paddingRight:'',\n        paddingCustom: false,\n        layout:1,\n    },\n    {\n        ...commons,\n        ...contents,\n        ...button,\n        name:'CTA',\n        sectionTypeName:'CtaSection',\n    },\n    {\n        ...commons,\n        ...button,\n        name:'신청',\n        sectionTypeName:'ApplySection',\n    },\n    {\n        ...commons,\n        ...button,\n        button:{\n            ...button.button,\n            ctaUse:false,\n            ghostUse:false,\n        },\n        name:'앱 다운로드',\n        sectionTypeName:'AppDownloadSection', \n    },\n    {\n        ...commons,\n        element:element,\n        name:'특징',\n        sectionTypeName:'FeaturesSection',\n        align:'start',\n        numOfElements:3,\n        elementText:{\n            use:true,\n            titleUse:true,\n            descUse:true,\n            color:'#000000',\n        },\n        elements:[\n            {\n                icon:'',\n                attachment:'',\n                title:'Respect privacy',\n                desc:'Set up cookie banners that help you respect your visitor\\'s privacy. \\n This is especially important for Europe.',\n            },\n            {\n                icon:'',\n                attachment:'',\n                title:'Translate your website',\n                desc:'Easily manage your website in multiple languages. \\n With this feature you can \\n offer your site to everyone.',\n            },\n            {\n                icon:'',\n                attachment:'',\n                title:'Protect your content',\n                desc:'Secure your entire website or \\n single pages with passwords to protect it from unwanted eyes.',\n            },\n            {\n                icon:'',\n                attachment:'',\n                title:'Protect your content',\n                desc:'Secure your entire website or \\n single pages with passwords to protect it from unwanted eyes.',\n            },\n            {\n                icon:'',\n                attachment:'',\n                title:'Protect your content',\n                desc:'Secure your entire website or \\n single pages with passwords to protect it from unwanted eyes.',\n            },\n        ],\n    },\n    {\n        ...commons,\n        element:element,\n        name:'리뷰/추천',\n        sectionTypeName:'ReviewSection',\n        align:'start',\n        numOfElements:3,\n        ratingColor:'red',\n        rating:{\n            use:true,\n            color: '#ffd23a',\n            size: 15,\n        },\n        writer:{\n            use:true,\n            color: '#000000',\n        },\n        elementText:{\n            use:true,\n            color: '#000000',\n        },\n        elements:[\n            {\n                icon:'',\n                attachment:'',\n                title:'1의 타이틀',\n                desc:'전에 어떤 분이 저희 웹사이트 디자이너 고용해서 만들었냐고 물어보시더라구요.(웃음) 우리가 필요한 기능들을 커스터마이징 할 수 있는 아임웹 디자인 모드가 정말 좋았어요. 해외 브랜드 사이트 같은 느낌도 많이 들고요.',\n                rating:4.8,\n                writer:'NOT OURS, 신하나 마케터 인터뷰',\n            },\n            {\n                icon:'',\n                attachment:'',\n                title:'2의 타이틀',\n                desc:'기술과 전자제품을 개발하는 회사답게 신뢰감가고 정돈된 모습을 보여주고자 했어요. 배경과 폰트 등 톤앤매너를 디테일한 부분까지 클릭 한번으로 원하는 디자인을 구현할 수 있어 좋았던 것 같아요.',\n                rating:5,\n                writer:'duit, 아혜진 브랜드 매니저 인터뷰',\n            },\n            {\n                icon:'',\n                attachment:'',\n                title:'3의 타이틀',\n                desc:'실제로 주변에 아임웹을 많이 소개했는데요. 요즘에는 누구나 개인 홈페이지를 만들고 싶어하는 것 같아요. 블로그나 텀블러 등의 소셜 프로그램은 완벽한 웹사이트가 될 순 없고 결국 차별화된 나만의 웹사이트를 원하게 되죠.',\n                rating:4.6,\n                writer:'Achim, 윤진 대표 인터뷰',\n            },\n            {\n                icon:'',\n                attachment:'',\n                title:'4의 타이틀',\n                desc:'실제로 주변에 아임웹을 많이 소개했는데요. 요즘에는 누구나 개인 홈페이지를 만들고 싶어하는 것 같아요. 블로그나 텀블러 등의 소셜 프로그램은 완벽한 웹사이트가 될 순 없고 결국 차별화된 나만의 웹사이트를 원하게 되죠.',\n                rating:4.6,\n                writer:'Achim, 윤진 대표 인터뷰',\n            },\n            {\n                icon:'',\n                attachment:'',\n                title:'5의 타이틀',\n                desc:'실제로 주변에 아임웹을 많이 소개했는데요. 요즘에는 누구나 개인 홈페이지를 만들고 싶어하는 것 같아요. 블로그나 텀블러 등의 소셜 프로그램은 완벽한 웹사이트가 될 순 없고 결국 차별화된 나만의 웹사이트를 원하게 되죠.',\n                rating:4.6,\n                writer:'Achim, 윤진 대표 인터뷰',\n            },\n        ],\n    },\n    {\n        ...commons,\n        name:'자주 묻는 질문',\n        sectionTypeName:'QnaSection',\n        layout: 'card',\n        qna:{\n            use:true,\n            shape: 'close',\n            question: '#000000',\n            answer: '#000000',\n        },\n        qnas:[\n            {\n                question:'1의 타이틀',\n                answer:'리뷰를 쓰는 창입니다.리뷰를 쓰는 창입니다.리뷰를 쓰는 창입니다.리뷰를 쓰는 창입니다.',\n            },\n            {\n                question:'2의 타이틀',\n                answer:'2의 부가설명',\n            },\n            {\n                question:'3의 타이틀',\n                answer:'3의 부가설명',\n            },\n        ],\n    },\n    {\n        ...commons,\n        name:'글',\n        sectionTypeName:'TextSection',\n    },\n    {\n        ...commons,\n        element:element,\n        numOfElements: 3,\n        name:'갤러리',\n        sectionTypeName:'GallerySection',\n        galleryImg:{\n            use:true,\n            border:0,\n            size:30,\n        },\n        card:{\n            use:true,\n            color:'#ffffff',\n            shadow:false,\n            borderRadius:0,\n        },\n        text:{\n            use:true,\n            color: '#000000',\n            align: ''\n        },\n        elementText:{\n            align:'start',\n            color:'#000000'\n        },\n        elements:[\n            {\n                attachment:'',\n                text:'1의 타이틀',\n            },\n            {\n                attachment:'',\n                text:'2의 타이틀',\n            },\n            {\n                attachment:'',\n                text:'3의 타이틀',\n            },\n            {\n                attachment:'',\n                text:'4의 타이틀',\n            },\n        ]\n    },\n    {\n        ...commons,\n        ...contents,\n        contents:{\n            use:true,\n            type:'video',\n        },\n        video:{\n            ...contents.video,\n            type:'base',\n        },\n        name:'동영상',\n        sectionTypeName:'VideoSection',\n        explanation:{\n            use:true,\n            color: '#000000',\n            align: '',\n            text:'비디오에 대한 추가 설명을 작성해보세요.'\n        },\n    },\n    {\n        ...commons,\n        name:'목업',\n        sectionTypeName:'MockupSection',\n        mockup: {\n            use: true,\n            type: 'mobile',\n            // mobile, tablet, desktop, mobile2, desk+mob 있음\n            file: '',\n            file2: '',\n        },\n        mobile: {\n            use: true,\n            file: '',\n            size: 200\n        },\n        tablet: {\n            use: false,\n            file: '',\n            size: 200\n        },\n        desktop: {\n            use: false,\n            file: '',\n            size: 400,\n        },\n        mobile2: {\n            use: false,\n            file1: '',\n            file2: '',\n            size: 200,\n        },\n        deskMobile: {\n            use: false,\n            file1: '',\n            file2: '',\n            size1: 100,\n            size2: 400,\n        },\n    },\n]\n\nexport const defaults = {\n    navi:{\n        sectionTypeName:'상단 바',\n        sectionTemplateNumber:1,\n        height:80,\n        use:true,\n        title:'',\n        logo:{\n            use:true,\n            align:'start',\n            image:{\n                use:false,\n                attachment:'',\n                width:60,\n            },\n            text:{\n                use:false,\n                text:'',\n                fontSize:12,\n                color:'#000000'\n            },\n        },\n        fixed:false,\n        backgroundColor:'#ffffff', \n        bottomBorder:{\n            use:false,\n            color:'#F0F0F0',\n        },\n        button:{\n            use:true,\n            align:'end',\n            cta:{\n                use:true,\n                text:'CTA버튼',\n                link:''\n            },\n            ghost:{\n                use:true,\n                text:'고스트 버튼',\n                link:''\n            },\n        },\n        appButton:{\n            use:true,\n            link:'',\n        }\n    },\n    foot:{\n        sectionTypeName:'푸터 바',\n        sectionTemplateNmber:1,\n        use:true,\n        layout:1,\n        backgroundColor:'#ffffff', \n        text:\"copyright 2022\",\n        padding:10,\n        text:{\n            use:true,\n            text:'',\n            color:'#000000',\n            align: 'left',\n            size: 15,\n        },\n        icon:{\n            use:true,\n            style:'circle',\n            color:'#ffffff',\n            align:'start',\n            facebook: '',\n            naver: '',\n            instagram: '',\n            notion: '',\n            mail: '',\n            kakaotalk: '',\n            twitter: '',\n            youtube: '',\n            \n        },\n        copyright:{\n            use:true,\n            text:'',\n            color:'#ffffff',\n        },\n        second:{\n            text:'<p>두번 째 단입니다.</p>'\n        }\n    },\n    setting:{\n        urlId:'',\n        title:'Surfee : 노코드 랜딩페이지 제작 툴',\n        faviconAttachment:'',\n        font:'Noto Sans KR',\n        smallFont:'Noto Sans KR',\n        color:'#63B3F7',\n        fta:{\n            width:50,\n            borderRadius:0,\n            use:false,\n            backgroundColor:'#6CCAD0',\n            color:'#ffffff',\n            border:false,\n            borderColor:'#000000',\n            text:'fta 버튼',\n            link:'',\n            shadow:false,\n        },\n        cta:{\n            borderRadius:5,\n            backgroundColor:'#ffffff',\n            color:'#000000',\n            shadow:true,\n            borderColor:'#000000',\n            border:false,\n        },\n        ghost:{\n            borderRadius:5,\n            backgroundColor:'#ffffff',\n            color:'#000000',\n            shadow:true,\n            borderColor:'#000000',\n            border:false,\n        },\n        animation:'none'\n    }\n}","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/TextAuto.js",["755","756"],"import React, {useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport produce from 'immer';\n\nfunction TextAuto({small, value, onChange, color, align, size, caution}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    console.log(\"사이즈가 넘어오나요?\", size)\n    \n    return (\n        <>\n        {\n            small ?\n            <TextareaAutosize \n                className=\"text-input feature-desc\" \n                value={value} \n                onChange={e => onChange(e)}\n                style={{\n                    color:`${color}`, \n                    textAlign:`${align}`,\n                    resize:'none',\n                    fontFamily:`${state.setting.smallFont}`\n                }}\n                spellcheck=\"false\"\n            />\n            : \n            <TextareaAutosize \n                className=\"text-input feature-title\" \n                value={value} \n                onChange={e => onChange(e)}\n                style={{\n                    // fontFamily:`${state.setting.font}`,\n                    color:`${color}`, \n                    textAlign:`${align}`,\n                    resize:'none',\n                    fontFamily:`${state.setting.smallFont}`\n                }}\n                spellcheck=\"false\"\n            />\n        }\n        </>\n    )\n}\n\nexport default TextAuto\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/tools/Icons.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Landing/tools/AskLoginModal.js",["757","758"],"import React, {useState, useContext} from 'react'\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\nimport { Close } from '@styled-icons/evaicons-solid';\nimport {Link} from 'react-router-dom'\nimport './AskLoginModal.css'\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Backdrop = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.1);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: 400,\n  height: 300,\n  bgcolor: 'rgba(255,255,255,1)',\n  borderRadius:'20px',\n  p: 2,\n  px: 4,\n  pb: 3,\n};\n\nfunction AskLoginModal({open, setOpen, SomeoneClickMoveToMake}) {\n    return (\n        <div>\n            <StyledModal\n                aria-labelledby=\"unstyled-modal-title\"\n                aria-describedby=\"unstyled-modal-description\"\n                open={open}\n                onClose={() => setOpen(!open)}\n                BackdropComponent={Backdrop}>\n                <Box sx={style}>\n                    <div className=\"modal-top__title\">\n                        <div className=\"centera\" style={{width:\"95%\"}}>\n                            \n                        </div>\n                        <div style={{width:\"5%\", cursor:\"pointer\"}} onClick={() => setOpen(false)}>\n                            <Close size=\"30\" color=\"#C4CACF\"/>\n                        </div>\n                    </div>\n                    <div className=\"centeras\">\n                        <div className=\"section-login-modal__container\">\n                            <div className=\"modal-body\">\n                                로그인 하시면 만들던 페이지를 나중에 <br/>이어서 만들 수 있습니다.<br/><br/>\n                                로그인 하시겠습니까?\n                            </div>\n                            <div className=\"center-column\" style={{height:'30%'}}>\n                                <Link to='/login' className=\"ask-modal-button\">\n                                    네 ( 로그인/회원가입 하러 가기 ) \n                                </Link>\n                                <Link to={{\n                                    pathname:`/make`,\n                                    state:{\n                                        newMake:true,\n                                    }}}  \n                                    className=\"ask-modal-button button-second\" onClick={() => SomeoneClickMoveToMake()}>\n                                    오늘은 구경만 할게요 ( 비회원으로 이용하기 )\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </Box>\n            </StyledModal>\n        </div>\n    )\n}\n\nexport default AskLoginModal\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Response/MadeLandingCard.js",["759","760","761","762","763","764"],"import React, {useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport ConfirmCustom from '../../tools/ConfirmCustom'\nimport {dbService, stService} from '../../tools/fbase'\nimport './MadeLandingCard.css'\nimport {Copy} from '@styled-icons/boxicons-regular'\n\nfunction MadeLandingCard({item,published, index, setNowChecking, history, addNew, num, update, setUpdate}) {\n    const [deleteopen, setDeleteOpen] = useState(false)\n\n    const deletePage = async () => {\n\n        var saved_delete = await dbService.collection('saved-page').where('urlId','==', item.urlId).get().then(function(querySnapshot) {\n            querySnapshot.forEach(function(doc) {\n              doc.ref.delete();\n            });\n          });;\n\n        var published_delete = await dbService.collection('published-page').where('urlId','==', item.urlId).get().then(function(querySnapshot) {\n            querySnapshot.forEach(function(doc) {\n              doc.ref.delete();\n            });\n          });\n        \n          var urlStores = await dbService.collection('urlStores').where('urlId','==', item.urlId).get().then(function(querySnapshot) {\n            querySnapshot.forEach(function(doc) {\n              doc.ref.delete();\n            });\n          });\n\n          var datas = await dbService.collection('datas').where('urlId','==', item.urlId).get().then(function(querySnapshot) {\n            querySnapshot.forEach(function(doc) {\n              doc.ref.delete();\n            });\n          });\n\n        // 새로고침 시키기\n        alert(\"삭제했습니다.\")\n        setUpdate(!update)\n\n        history.go()\n    }\n\n    const duplicate = async () => {\n        if(num > 2){\n            alert(\"최대 3개의 페이지만 만들 수 있습니다.\")\n        }else{\n            await dbService.collection(\"saved-page\").add(item);\n\n            // await dbService.collection(\"urlStores\").add({urlId:item.setting.urlId});\n\n            setUpdate(!update)\n            alert(\"복제되었습니다.\")\n            history.go(-1)\n        }\n    }\n\n    const returnDate = (made) => {\n        let day = new Date(Date.now() - made);\n\n        return(\n            <>\n            {\n            day.getDate()-1 > 0 ? <>\n            {day.getDate()-1} 일전</> :\n            day.getHours()-9 > 0 ? <>\n                {day.getHours()-9} 시간전 </> : \n                <>{day.getMinutes()}분전</>}\n            </>\n        )\n    }\n\n    if(addNew){\n        return(\n            <Link to={{\n                pathname:`/make`,\n                state:{\n                    newMake:true,\n                }}} \n                className=\"response-page-card hover-shadow\">\n                <div className=\"response-card-main-color\">\n                + 새로운 랜딩페이지 만들기\n                </div>\n            </Link>\n        )\n    }\n    return (\n        <div className=\"response-page-card hover-shadow\" onClick={() => setNowChecking(index)}>\n            <div className=\"center-row\" style={{justifyContent: \"start\"}}>\n                <div className=\"card__title\">\n                    {item.setting.title}\n                </div>\n                <div style={{width:`${published ? '40%' : '20%'}`, fontSize:'0.6em', textAlign:'end'}}>\n                    {published ? \n                    <div style={{display: 'flex', justifyContent:'end', alignItems: 'center', flexDirection:'row'}}>\n                    <div style={{\n                        width: '8px',\n                        height: '8px',\n                        borderRadius:'10px',\n                        marginRight:'5px',\n                        background: '#11E533'}}></div>\n                    {returnDate(published.created)} 마지막 배포\n                    </div>\n                    :\n                    <div style={{display: 'flex', justifyContent:'end', alignItems: 'center', flexDirection:'row'}}>\n                    <div style={{\n                        width: '8px',\n                        height: '8px',\n                        borderRadius:'10px',\n                        marginRight:'5px',\n                        background: '#C4C4C4'}}></div>배포 전\n                    </div>\n                    }\n                </div>\n            </div>\n            <div className=\"center-row\">\n                <div className=\"left\" style={{fontSize:'0.7em', width:'70%'}}>\n                    https://{item.setting.urlId}.surfee.co.kr \n                    {/* <Copy size={15} color=\"#6B63F7\" onClick={(e) => {\n                        alert(\"링크가 복사되었습니다\");\n                    }}\n                    style={{marginLeft:'5px'}}\n                    /> */}\n                </div>\n                <div className=\"right\" style={{fontSize:'15px', width:'30%'}}>\n                    <button className=\"content__button cb-delete\" onClick={() => {setDeleteOpen(true)}}>삭제</button>\n                    <button className=\"content__button\" onClick={() => duplicate()}>복제</button>\n                </div>\n            </div>\n            {/* <Link to={{\n                pathname:`/make/edit`,\n                state:{\n                    item:item\n                }\n                }}>\n                편집하기\n            </Link> */}\n            <ConfirmCustom warn open={deleteopen} setOpen={setDeleteOpen} message={\"한번 삭제하면 복구할 수 없습니다. 정말 삭제하시겠습니까?\"} callback={deletePage}/>\n        </div>\n    )\n}\n\nexport default MadeLandingCard\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Response/ResponseNavBar.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Response/ResultTopTitle.js",["765"],"import React from 'react'\nimport {Link } from 'react-router-dom'\nimport gadata from '../../tools/datacodes/gadata.json'\nimport { Tooltip, ChakraProvider } from '@chakra-ui/react'\nimport { InformationCircle } from '@styled-icons/ionicons-outline';\nimport {dbService} from '../../tools/fbase';\nimport './ResultTopTitle.css'\n\nfunction ResultTopTitle({content, myResponses, checkPublished, history, datas}) {\n    console.log(datas)\n\n    const numOfPerson = (type) => {\n        let numClick = 0\n        myResponses.forEach(doc => doc.type === type ? numClick += 1 : numClick)\n        return numClick\n    }\n\n    const doPublish = async () => {\n        await dbService.collection('published-page')\n            .where('urlId', \"==\", content.urlId)\n                .get().then( querySnapshot => \n                { \n                    if(querySnapshot.empty){\n                        console.log(\"새 배포\")\n                        let body = {\n                            ...content,\n                            created:Date.now(),\n                        }\n                        dbService.collection('published-page').add(body)\n                    }else{\n                        console.log(\"배포 수정\")\n                        let body = {\n                            ...content,\n                            created:Date.now(),\n                        }\n                        querySnapshot.forEach(async (doc) => {\n                            await dbService.doc(`published-page/${doc.id}`).update(body).then(() => {\n                                alert(\"배포 완료되었습니다.\")\n                                history.go();\n                            })\n                        });\n                    }\n                }\n            )\n    }\n\n    const ResultData = ({data, name, end, type}) => {\n        return(\n            <div className=\"data-result__card\" style={{borderRight:`${end ? 'none' : '1px solid var(--main-light-gray)'}`}}>\n                <div className=\"data-result__data\">\n                    {data}\n                    { type ? type : null}\n                </div>\n                <div className=\"data-result__name\">\n                    {name}\n                </div>\n            </div>\n        )\n    }\n\n    return (\n    <ChakraProvider>\n    <div className=\"response-table-top\">\n        <span className=\"response-table-title\"> \n            <div className=\"left\" style={{width:'80%'}}>\n                {\n                    checkPublished(content.urlId) ? \n                    <div className=\"center-row\" style={{justifyContent:'start'}}>\n                        <div className=\"ga-data__container\"> \n                            <Tooltip hasArrow arrowSize={10} label={\"데이터는 Google Analytics의 업데이트 주기에 맞춰 \\n 30분마다 업데이트 됩니다.\"} placement='top' fontSize='13'>\n                                <InformationCircle size=\"18\" style={{color:'#C4CACF', zIndex:'20', margin:'0px 6px'}}/>\n                            </Tooltip>\n                            {\n                                // 이 페이지 관련 GA 데이터가 있을 때\n                                datas ? \n                                <div className=\"row\">\n                                    <ResultData data={datas.pageViews + \"개\"} name=\"페이지 뷰\" />\n                                    <ResultData data={datas.users + \"명\"} name=\"유입 수\" />\n                                    <ResultData data={numOfPerson('apply') / parseInt(datas.users)} name=\"신청 전환율\" type=\"%\"/>\n                                    <ResultData data={numOfPerson('click') / parseInt(datas.users)} name=\"클릭 전환율\" type=\"%\"/>\n                                </div>\n                                :\n                                <div className=\"row\">\n                                    아직 기록된 GA 데이터가 없습니다.\n                                </div>\n                            }\n                            <ResultData data={numOfPerson('click')} name=\"버튼 클릭 수\" />\n                            <ResultData data={numOfPerson('apply')} name=\"신청 수\" end/>\n                        </div>\n                    </div>\n                    :\n                    <div>\n                        이 랜딩페이지는 아직 배포되지 않았습니다. 오른쪽의 ‘배포하기' 버튼을 눌러 페이지를 배포하고, 전환율 및 신청을 확인하세요\n                    </div>\n                }\n            </div>\n            <div className=\"right\" style={{flexDirection: 'row', width:'20%'}}>\n                <Link to={{\n                    pathname:`/make`,\n                    state:{\n                        item:content,\n                    }}} \n                    className=\"default-button-01\" style={{marginLeft:'15px'}}>편집하기</Link>\n                <div className=\"default-button-02\" style={{marginLeft:'15px'}} onClick={() => doPublish()}>배포하기</div>\n            </div>\n        </span>\n    </div>\n    </ChakraProvider>\n    )\n}\n\nexport default ResultTopTitle\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Response/ChromeTapBar.js",["766","767"],"import React from 'react'\nimport surfeelogo from '../../tools/img/surfeelogo.png'\n\nfunction ChromeTapBar({content}) {\n    return (\n        <div className=\"make-tab-preseen\" style={{\n                borderRadius: '10px 10px 10px 10px'\n            }}>\n            <div className=\"left\">\n                <div className=\"make-tab-circle\" style={{marginLeft:'15px'}}></div>\n                <div className=\"make-tab-circle\"></div>\n                <div className=\"make-tab-circle\"></div>\n                <div className=\"make-tab-one-tab\">\n                    {\n                        content.setting.faviconAttachment === '' ? \n                        <img src={surfeelogo} className='make-tab-favicon' />\n                        :\n                        <img src={content.setting.faviconAttachment} className='make-tab-favicon' />\n                    }\n                    {content.setting.title}\n                </div>\n            </div>\n            <div className=\"right\" style={{paddingRight:'23px'}}>\n                <div className=\"make-tab-url\">\n                    https://{content.setting.urlId}.surfee.co.kr\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ChromeTapBar\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Response/ResultTable.js",["768"],"import React from 'react'\n\nfunction ResultTable({responses, nowChecking, index}) {\n\n    const userOneLine = (item) => {\n        let day = new Date(item.created)\n        let date = `${day.getMonth() + 1}월 ${day.getDate()}일 ${day.getHours()}시 ${day.getMinutes()}분`\n\n        if(item.type === 'click'){\n            return(\n                <div className=\"response__user-datas\" key={index}>\n                    <div className=\"response__user-datas-one\" style={{width:'150px'}}> \n                        클릭\n                    </div>\n                    <div className=\"response__user-datas-one\">   \n                        <span style={{color:'rgb(10,10,10)'}}>{item.from}</span>에서 클릭\n                    </div>\n                    <div className=\"response__user-datas-one\" style={{textAlign:'right'}}>\n                        {date}\n                    </div>\n                </div>\n            )\n        }else{\n            return(\n                <div className=\"response__user-datas\" key={index}>\n                    <div className=\"response__user-datas-one\" style={{width:'170px'}}> \n                        신청\n                    </div>\n                    {\n                        item.values.map((doc, index) => {\n                            if(doc.length > 1){\n                                return(\n                                    <div className=\"response__user-datas-one\" key={index}>\n                                        {doc}\n                                    </div>\n                                )\n                            }\n                        })\n                    }\n                    <div className=\"response__user-datas-one\" style={{textAlign:'right'}}>\n                        {date}\n                    </div>\n                </div>\n            )\n        }\n    }\n    \n    return (\n        <div className=\"response-table-middle\">\n            <div className=\"response__user-datas-top\">\n                <div className=\"response__user-datas-one\" style={{width:'150px'}}> \n                    타입\n                </div>\n                <div className=\"response__user-datas-one\">\n                    유저의 행동 데이터\n                </div>\n                <div className=\"response__user-datas-one\" style={{textAlign:'right'}}>\n                    시간\n                </div>\n            </div>\n            {\n                typeof responses[nowChecking] !== undefined && \n                <>\n                    {\n                    responses[nowChecking].map((item, index) => {\n                        return(\n                            <>\n                                {userOneLine(item, index)}\n                            </>\n                        )\n                })}\n                </>\n            }\n        </div>\n    )\n}\n\nexport default ResultTable\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Customer/QnA.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Customer/PersonalInformation.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Customer/Term.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/NavAndFooter/NavBar/NavBar.js",["769","770"],"import React, {useState, useEffect} from 'react'\nimport './utils/NavBar.css'\nimport {Link} from 'react-router-dom';\n\n\nfunction NavBar({history}) {\n    const [scrollPosition, setScrollPosition] = useState(0);\n    const [back, setBack] = useState(0);\n\n    const updateScroll = () => {\n        setScrollPosition(window.scrollY || document.documentElement.scrollTop);\n    }\n    \n    useEffect(()=>{\n        window.addEventListener('scroll', updateScroll);\n        if(scrollPosition < 50){\n            setBack(scrollPosition*(1/50));\n        }else{\n            setBack(1);\n        }\n    });\n\n    return (\n        <>\n        <div className={scrollPosition < 50 ? \"nav-bar-container-top\" : \"nav-bar-container\"} \n        style={{backgroundColor:`rgba(255,255,255,1)`, color:`rgba(${255-back*149},${255-back*156},${255-back*8},1)`\n        }}>\n            <span className=\"nav-bar-title\" onClick={() => {history.push('/#/'); history.go();}} style={{cursor:'pointer'}}>\n                Surfee\n            </span>\n            <span className=\"nav-on\">\n                <button className=\"nav-button\" onClick={() => window.scrollTo(0,document.body.scrollHeight)}>사전신청 하기</button>\n            </span>\n        </div>\n        </>\n    )\n}\n\nexport default NavBar\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/FeaturesSection.js",["771","772","773","774","775"],"import React, {useContext, useEffect, useState, useRef} from 'react'\nimport './FeaturesSection.css'\nimport { motion } from 'framer-motion';\nimport TitleDesc from './components/TitleDesc'\nimport TextAuto from './components/TextAuto'\nimport Element from './components/Element'\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport produce from 'immer'\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\n\nfunction FeaturesSection({content, setting}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const returnFeatureCards = content.elements.map((item, index) => {\n        if (index < content.numOfElements){\n        return(\n            <div key={index} className=\"feature__card\" style={{\n                alignItems: `${state.isPhone ? content.mobile.align : content.align}`,\n                boxShadow : '', \n                margin : `${ state.isPhone ? '5px 5px' : '0px 15px' }`,\n                height : `${state.isPhone ? '' : '100%'}`,\n                width : `${state.isPhone ? content.mobile.layout === 1 ? '100%' : '46%' : '300px'}`\n                }}>\n                <Element content={content} item={item} index={index} key={index}/>\n                {\n                    content.elementText.titleUse && \n                    <div className=\"df-margin-big feature-title\" style={{width:'100%'}}>\n                        <TextAuto className=\"text-input\" \n                            value={item.title} \n                            color = {content.elementText.color} \n                            align = {state.isPhone ? content.mobile.align : content.elementText.align}\n                            onChange={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].elements[index].title = e.currentTarget.value;\n                            }))}  \n                        />\n                    </div>\n                }\n                {\n                    content.elementText.descUse && \n                    <div className=\"df-margin\">\n                        <TextAuto small className=\"text-input\"  \n                            value={item.desc} \n                            color = {content.elementText.color} \n                            align = {state.isPhone ? content.mobile.align : content.elementText.align}\n                            onChange={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].elements[index].desc = e.currentTarget.value;\n                            }))}  \n                        />\n                    </div>\n                }\n            </div>\n        )}\n        else{\n        }\n    })\n\n    return (\n        <>\n            <motion.div className=\"template\" data-aos={setting.animation} aos-duration=\"4000\" >\n                <TitleDesc content={content} />\n\n                <div className=\"features__container\" style={{flexWrap : `${state.isPhone ? 'wrap' : ''}`}}>\n                    {returnFeatureCards}\n                </div>\n\n            </motion.div>\n        </>\n    )\n}\n\nexport default FeaturesSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/DetailSection.js",["776","777","778","779"],"import React, { useContext, useEffect, useState, useRef } from 'react'\n\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport './DetailSection.css'\nimport TitleDesc from './components/TitleDesc'\n\nimport ImageOrSlide from './components/ImageOrSlide'\nimport AnimationDiv from './components/AnimationDiv'\nimport { motion } from 'framer-motion';\n\nfunction DetailSection({content, setting}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const returnLayout = {\n        flexDirection:`${\n            state.isPhone ? \n                content.mobile.layout === 1 ? 'row' : content.mobile.layout === 2 ? 'row-reverse' : content.mobile.layout === 3 ? 'column' : 'column-reverse'\n            :\n                content.layout === 1 ? 'row' : content.layout === 2 ? 'row-reverse' : content.layout === 3 ? 'column' : 'column-reverse'\n        }`,\n    }\n    \n    return (\n        <motion.div data-aos={setting.animation} aos-duration=\"4000\" style={{ width:'100%', height:'100%'}}>\n            <AnimationDiv content={content} returnLayout={returnLayout}>\n                <div className=\"text__container\" style={{marginTop:`${content.layout === 4 ? '30px' : '0px'}`}}>\n                    <TitleDesc content={content} />\n                </div>\n                <div className=\"image__container\">\n                    <ImageOrSlide content={content} />\n                </div>\n            </AnimationDiv>\n        </motion.div>\n    )\n}\n\nexport default DetailSection","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/HeroSection.js",["780","781","782","783","784"],"import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom' \nimport produce from 'immer';\nimport { motion } from 'framer-motion';\n\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport TitleDesc from './components/TitleDesc'\nimport AutosizeInput from 'react-input-autosize';\nimport ImageOrSlide from './components/ImageOrSlide'\nimport ReturnButton from './components/ReturnButton'\nimport AnimationDiv from './components/AnimationDiv'\n\nimport './DetailSection.css'\nimport './Default.css'\nimport './HeroSection.css'\n\nimport playstorebutton from '../../../tools/img/playstorebutton.png'\nimport appstorebutton from '../../../tools/img/appstorebutton.png'\n\nfunction HeroSection({content, setting}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const CustomCtaButton = () => {return (<div className=\"cta-button-made\" style={{\n        borderRadius:`${state.setting.cta.borderRadius}px`,\n        backgroundColor:`${state.setting.cta.backgroundColor}`,\n        color:`${state.setting.cta.color}`,\n        boxShadow:`${state.setting.cta.shadow ? '1px 2px 4px rgba(0,0,0,0.2)' : 'none'}`,\n        border:`${state.setting.cta.border ? `1px solid ${state.setting.cta.borderColor}` : 'none'}`\n    }}>\n        <AutosizeInput className=\"text-input-flex ti\" value={content.button.ctaText} onChange={(e) => action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].button.ctaText = e.currentTarget.value;\n        }))} inputStyle={{fontFamily:`${state.setting.smallFont}`, borderRadius:`${state.setting.cta.borderRadius}px`, backgroundColor:`${state.setting.cta.backgroundColor}`,}}/>\n    </div>)}\n\n    const CustomGhostButton = () => {return (<div className=\"cta-button-made\" style={{\n        marginLeft:`${ content.button.ctaUse ? '5px' : '0px'}`,\n        borderRadius:`${state.setting.ghost.borderRadius}px`,\n        backgroundColor:`${state.setting.ghost.backgroundColor}`,\n        color:`${state.setting.ghost.color}`,\n        boxShadow:`${state.setting.ghost.shadow ? '1px 2px 4px rgba(0,0,0,0.2)' : 'none'}`,\n        border:`${state.setting.ghost.border ? `1px solid ${state.setting.ghost.borderColor}` : 'none'}`\n    }} onClick={() => {}}>\n        <AutosizeInput className=\"text-input-flex ti\" value={content.button.ghostText } onChange={(e) => action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].button.ghostText = e.target.value;\n        }))} inputStyle={{fontFamily:`${state.setting.smallFont}`, borderRadius:`${state.setting.ghost.borderRadius}px`,  backgroundColor:`${state.setting.ghost.backgroundColor}`}}/>\n    </div>)}\n\n    const returnCtaInputs = () => {\n        return(\n            <>\n                <input className=\"input-placeholder\" />\n                {CustomCtaButton()}\n            </>\n        )\n    }\n\n    const returnGhostInputs = () => {\n        return(\n            <>\n                <input className=\"input-placeholder\" />\n                {CustomGhostButton()}\n            </>\n        )\n    }\n\n    const returnButton = () => {\n        // ctaOption === 'link' => 버튼 클릭 시 링크 이동\n        // ctaOption === 'apply' => 신청\n\n        {/* <CustomCtaButton className=\"action-button\" onClick={() => {window.open(`${content.button.ctaLink}`)}}> */}\n        return(\n            <div style={{width:'100%'}}>\n                <div className=\"button__container\" style={{justifyContent:`${content.button.align}`}}>\n                    {\n                        content.button.ctaUse && \n                            ( content.button.ctaOption === 'link' ? CustomCtaButton() : returnCtaInputs() )\n                    }\n                    {/* onClick={() => {window.open(`${content.button.ghostLink}`)}} */}\n                    {\n                        content.button.ghostUse && \n                            ( content.button.ghostOption === 'link' ? CustomGhostButton() : returnGhostInputs() )\n                    }\n                </div>\n                <div className=\"button__container\" style={{justifyContent:`${content.button.align}`}}>\n                    {\n                        content.appButton.google.length > 0 && \n                            <img src={playstorebutton} className=\"store-button\" />\n                    }\n                    {/* onClick={() => {window.open(`${content.button.ghostLink}`)}} */}\n                    {\n                        content.appButton.apple.length > 0 && \n                            <img src={appstorebutton} className=\"store-button\" />\n                    }\n                </div>\n            </div>\n        )\n    }\n\n    const returnLayout = {\n        flexDirection:`${\n            state.isPhone ? \n            content.mobile.layout === 1 ? 'row' : content.mobile.layout === 2 ? 'row-reverse' : content.mobile.layout === 3 ? 'column' : 'column-reverse'\n            :\n            content.layout === 1 ? 'row' : content.layout === 2 ? 'row-reverse' : content.layout === 3 ? 'column' : 'column-reverse'\n        }`,\n    }\n\n    return (\n        <motion.div  data-aos={setting.animation} aos-duration=\"4000\" style={{ width:'100%', height:'100%'}}>\n            <AnimationDiv content={content} returnLayout={returnLayout}>\n                <div className=\"text__container\" style={{marginTop:`${content.layout === 4 ? '30px' : '0px'}`}}>\n                    <TitleDesc content={content} />\n                    <ReturnButton content={content} />\n                </div>\n                <div className=\"image__container\">\n                    <ImageOrSlide content={content} />\n                </div>\n            </AnimationDiv>\n        </motion.div>\n    )\n}\n\nexport default HeroSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/ReviewSection.js",["785"],"import React, {useContext} from 'react'\nimport './ReviewSection.css'\nimport Rating from '@mui/material/Rating';\nimport { motion } from 'framer-motion';\nimport { MyContext } from '../../../pages/Make/MakePageV2';\nimport {produce} from 'immer'\nimport TitleDesc from './components/TitleDesc'\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport Element from './components/Element'\n\nfunction ReviewSection({content, setting}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const returnReviewCards = content.elements.map((item, index) => {\n        if(index < content.numOfElements){\n            return(\n                <div key={index} className=\"feature__card\" \n                    style={{\n                        alignItems: `${state.isPhone ? content.mobile.align : content.align}`,\n                        boxShadow : '', \n                        margin : `${ state.isPhone ? '5px 5px' : '0px 15px' }`,\n                        height : `${state.isPhone ? '' : '100%'}`,\n                        width : `${state.isPhone ? content.mobile.layout === 1 ? '100%' : '46%' : '300px'}`\n                    }}>\n                    <Element content={content} item={item} index={index} key={index}/>\n    \n                    <div className=\"df-margin-big feature-title\" style={{width:'100%'}}>\n                        <TextareaAutosize \n                            className=\"text-input\"  \n                            style={{\n                                width:'100%',\n                                resize:'none',\n                                textAlign:`${state.isPhone ? content.mobile.align : content.elementText.align}`,\n                                fontFamily:`${state.setting.smallFont}`,\n                                color:`${content.elementText.color}`,\n                            }}\n                            value={item.title} \n                            onChange={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].elements[index].title = e.currentTarget.value;\n                            }))} \n                            />\n                    </div>\n                    {\n                        content.rating.use && \n                        <div className=\"df-margin\">\n                            <div style={{\n                                width:'100%', \n                                textAlign:`${state.isPhone ? content.mobile.align : content.elementText.align}`\n                            }}>\n                            <Rating\n                                value={item.rating} \n                                onChange={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].elements[index].rating = e.currentTarget.value;\n                                }))}  \n                                precision={0.1}\n                                style={{ fontSize: `${content.rating.size}px`, color:`${content.rating.color}` }}\n                                // size={content.rating.size}\n                                // color={content.rating.color}\n                            />\n                            </div>\n                        </div>\n                    }\n                    {\n                        content.elementText.use && \n                        <div className=\"df-margin-big feature-desc\" style={{width:'100%'}}>\n                            <TextareaAutosize \n                                className=\"text-input\" \n                                style={{\n                                    width:'100%',\n                                    resize:'none',\n                                    textAlign:`${state.isPhone ? content.mobile.align : content.elementText.align}`,\n                                    fontFamily:`${state.setting.smallFont}`,\n                                    color:`${content.elementText.color}`,\n                                }}\n                                value={item.desc} \n                                onChange={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].elements[index].desc = e.currentTarget.value;\n                                }))}  \n                                />\n                        </div>\n                    }\n                    {\n                        content.writer.use && \n                        <div className=\"df-margin-big feature-writer\" style={{width:'100%'}}>\n                            <TextareaAutosize \n                                className=\"text-input\" \n                                style={{\n                                    width:'100%',\n                                    resize:'none',\n                                    textAlign:`${state.isPhone ? content.mobile.align : content.elementText.align}`,\n                                    color:`${content.writer.color}`,\n                                    fontFamily:`${state.setting.smallFont}`,\n                                }}\n                                value={item.writer} \n                                onChange={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].elements[index].writer = e.currentTarget.value;\n                                }))}  \n                                />\n                        </div>\n                    }\n                </div>\n            )\n        }\n    })\n\n    return (\n        <>\n            <motion.div className=\"template\" data-aos={setting.animation} aos-duration=\"4000\">\n                \n                <TitleDesc content={content} />\n\n                <div className=\"features__container\" style={{flexWrap : `${state.isPhone ? 'wrap' : ''}`}}> \n                    {returnReviewCards}\n                </div>\n\n            </motion.div>\n        </>\n    )\n}\nexport default ReviewSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/AppDownloadSection.js",["786","787"],"import React, {useContext, useState} from 'react'\nimport { motion } from 'framer-motion';\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport {produce} from 'immer'\nimport TitleDesc from './components/TitleDesc'\nimport ReturnButton from './components/ReturnButton'\nimport AnimationDiv from './components/AnimationDiv'\nimport TextAuto from './components/TextAuto'\n\nfunction AppDownloadSection({content}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const returnLayout = {\n        flexDirection:`${content.layout === 1 ? 'row' : content.layout === 2 ? 'row-reverse' : 'column'}`,\n    }\n    \n    return (\n        <>\n            <div style={{ width:'100%', height:'100%'}}>\n                <AnimationDiv content={content} returnLayout={returnLayout}>\n                    <div className=\"text__container\">\n                        <TitleDesc content={content} />\n                    </div>\n                    {content.caution.use && \n                    <div style={{display:'flex', flexDirection:'column', width:'100%'}}>\n                        <ReturnButton content={content} />\n                        <div className=\"df-margin-big feature-desc\" style={{width:'100%'}}>\n                            <TextAuto className=\"text-input\" desc value={content.caution.text} color = {content.caution.color} align = {content.caution.align} size = {content.caution.size}\n                                onChange={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].caution.text = e.currentTarget.value;\n                                }))}  \n                            />\n                        </div>\n                    </div>\n                    }\n                </AnimationDiv>\n            </div>\n        </>\n    )\n}\n\nexport default AppDownloadSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/QnaSection.js",["788","789"],"import React, {useContext, useState} from 'react'\nimport { motion } from 'framer-motion';\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport {produce} from 'immer'\nimport TitleDesc from './components/TitleDesc'\nimport QnaOpenClose from './components/QnaOpenClose'\nimport TextAuto from './components/TextAuto'\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\n\nfunction QnaSection({content, setting}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const returnQnaCards = content.qnas.map((item, index) => {\n        return(\n            <QnaOpenClose key={index} title={item.question} open={content.qna.shape === 'open'} color={content.qna.question} content={content} type={content.layout} index={index}>\n                <div className=\"edit-element\">\n                    <div style={{display:'flex', alignItems: 'start', height:'100%'}}>\n                        <span className=\"qna__word\" style={{fontFamily:`${state.setting.smallFont}`}}>A. <></></span>\n                    </div>\n                    <TextAuto\n                        small\n                        value={item.answer} \n                        onChange={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].qnas[index].answer = e.currentTarget.value;\n                        }))}\n                        color={content.qna.answer} align=\"start\" />\n                </div>\n            </QnaOpenClose>\n        )\n    })\n\n    return (\n        <motion.div className=\"template\"\n            data-aos={setting.animation} aos-duration=\"4000\">\n\n            {/* 큐앤에이 카드의 그림자때문에 텍스트와 정렬이 맞지 않아서 */}\n            <div style={{width : `${state.isPhone ? '100%' : '95%'}` }}>  \n                <TitleDesc content={content} />\n            </div>\n\n            <div className=\"features__container\" style={{flexDirection: 'column', marginTop:'20px'}}>\n                {returnQnaCards}\n            </div>\n\n        </motion.div>\n    )\n}\n\nexport default QnaSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/CtaSection.js",["790","791"],"import React, {useContext, useState} from 'react'\nimport './CtaSection.css'\nimport { motion } from 'framer-motion';\n\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport TitleDesc from './components/TitleDesc'\nimport ReturnButton from './components/ReturnButton'\nimport AnimationDiv from './components/AnimationDiv'\nimport TextAuto from './components/TextAuto'\nimport produce from 'immer'\n\nfunction CtaSection({content, setting}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    console.log(content, \"테스트 cta\")\n\n    const returnLayout = {\n        flexDirection:`${\n            state.isPhone ? \n                content.mobile.layout === 3 ? 'column' : 'column-reverse'\n            :\n                content.layout === 1 ? 'row' : content.layout === 2 ? 'row-reverse' : 'column'\n        }`\n    }\n    \n    return (\n        <>\n            <motion.div style={{display:'flex', width:'100%', height:'100%', ...returnLayout}} data-aos={content.animation.type} aos-duration=\"4000\" >\n                <div className=\"text__container\">\n                    <TitleDesc content={content} />\n                </div>\n                <div style={{display:'flex', flexDirection:'column', width:'100%', justifyContent:'center', height:'100%'}}>\n                    <ReturnButton content={content} />\n                    {content.caution.use && \n                        <div className=\"df-margin-big feature-desc\" style={{width:'100%'}}>\n                            <TextAuto className=\"text-input\" small value={content.caution.text} color = {content.caution.color} align = {state.isPhone ? content.mobile.align : content.caution.align}\n                                onChange={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].caution.text = e.currentTarget.value;\n                                }))}  \n                            />\n                        </div>\n                    }\n                </div>\n            </motion.div>\n        </>\n    )\n}\n\nexport default CtaSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/VideoSection.js",["792","793"],"import React, {useContext, useState} from 'react'\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport {produce} from 'immer'\nimport { motion } from 'framer-motion';\nimport TitleDesc from './components/TitleDesc'\nimport ImageOrSlide from './components/ImageOrSlide'\nimport TextAuto from './components/TextAuto'\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport AnimationDiv from './components/AnimationDiv'\n\nfunction VideoSection({content, setting}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const returnLayout = {\n        flexDirection:`${'column'}`,\n        // paddingLeft:`${content.layout === 1 ? '30px' : content.layout === 2 ? '0px' : '30px'}`,\n        // paddingRight:`${content.layout === 1 ? '0px' : content.layout === 2 ? '30px' : '30px'}`,\n    }\n    \n    return (\n        <motion.div data-aos={setting.animation} aos-duration=\"4000\" style={{ width:'100%', height:'100%'}}>\n            <AnimationDiv content={content} returnLayout={returnLayout}>\n                <div className=\"text__container\">\n                    <TitleDesc content={content} />\n                </div>\n                <div className=\"image__container\">\n                    <ImageOrSlide content={content} />\n                </div>\n                {\n                content.explanation.use &&\n                <div style={{width:'100%'}}>\n                    <TextAuto small  className=\"text-input\" \n                        value={content.explanation.text} \n                        onChange={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].explanation.text = e.currentTarget.value;\n                        }))}\n                        color={content.explanation.color}\n                        align={content.explanation.align}\n                    />\n                </div>\n                }\n            </AnimationDiv>\n        </motion.div>\n    )\n}\n\nexport default VideoSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/ApplySection.js",["794","795"],"import React, {useContext, useState} from 'react'\nimport { motion } from 'framer-motion';\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport {produce} from 'immer'\nimport TitleDesc from './components/TitleDesc'\nimport ReturnButton from './components/ReturnButton'\nimport AnimationDiv from './components/AnimationDiv'\nimport TextAuto from './components/TextAuto'\n\nfunction ApplySection({content}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const returnLayout = {\n        flexDirection:`${content.layout === 1 ? 'row' : content.layout === 2 ? 'row-reverse' : 'column'}`,\n    }\n    \n    return (\n        <>\n            <div style={{ width:'100%', height:'100%'}}>\n                <AnimationDiv content={content} returnLayout={returnLayout}>\n                    <div className=\"text__container\">\n                        <TitleDesc content={content} />\n                    </div>\n                    {content.caution.use && \n                    <div style={{display:'flex', flexDirection:'column', width:'100%'}}>\n                        <ReturnButton content={content} />\n                        <div className=\"df-margin-big feature-desc\" style={{width:'100%'}}>\n                            <TextAuto className=\"text-input\" small value={content.caution.text} color = {content.caution.color} align = {content.caution.align}\n                                onChange={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].caution.text = e.currentTarget.value;\n                                }))}  \n                            />\n                        </div>\n                    </div>\n                    }\n                </AnimationDiv>\n            </div>\n        </>\n    )\n}\n\nexport default ApplySection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/GallerySection.js",["796","797","798","799"],"import React, {useContext, useState, useRef} from 'react'\nimport { motion } from 'framer-motion';\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport {produce} from 'immer'\nimport TitleDesc from './components/TitleDesc'\nimport TextAuto from './components/TextAuto'\nimport {Upload} from '@styled-icons/bootstrap';\n\nfunction GallerySection({content,setting}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const returnElementsCards = content.elements.map((item, index) => {\n       if(index < content.numOfElements){\n           return(\n               <>\n               {content.card.use && \n               <div key={index} className=\"feature__card\" \n                    style={{\n                    alignItems: 'center',\n                    margin : `${ state.isPhone ? '5px 5px' : '0px 15px' }`,\n                    height : `${state.isPhone ? '' : '100%'}`,\n                    width : `${state.isPhone ? content.mobile.layout === 1 ? '100%' : '46%' : '300px'}`,\n                    boxShadow:`${content.card.shadow ? '2px 2px 4px rgba(0,0,0,0.4)' : ''}`, \n                    backgroundColor: `${content.card.color}`, \n                    borderRadius:`${content.card.borderRadius}px`}}>\n\n                       {content.element.use && \n                       <div style={{width:'100%', position:'relative', cursor:'pointer'}}>\n                           { item.attachment ? \n                            <img \n                                src={item.attachment} \n                                style={{\n                                    width:'100%',\n                                    objectFit:'cover',\n                                    height:`${state.isPhone ? content.element.size/1.5 : content.element.size}px`, \n                                    borderRadius:`${content.card.borderRadius}px ${content.card.borderRadius}px 0px 0px`\n                                }}/> \n                               :\n                            <div \n                                className=\"feature-upload-button\" \n                                style={{ \n                                    height:`${content.element.size}px`, \n                                    backgroundColor:`${content.element.backgroundColor}`\n                                }}>\n                                <Upload size=\"25\" />\n                            </div>\n                           }\n                           <input\n                               className=\"feature-upload-file\"\n                               type=\"file\" \n                               accept=\"image/*\" \n                               id=\"file\" \n                               onChange={ e => {\n                                   const {target:{files},} = e;\n                                   const oneFile = files[0];\n                                   const reader = new FileReader();\n                                   reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n                                        if(oneFile.size > 3000000){\n                                            alert(\"파일의 크기가 3MB를 초과합니다.\")\n                                            return;\n                                        }\n                                       const {currentTarget:{result}} = finishedEvent;\n                                       action.setContents(produce(state.contents, draft=>{\n                                           draft[state.secNum].elements[index].attachment = result;\n                                       }))\n                                   }\n                                   if(oneFile){\n                                       reader.readAsDataURL(oneFile);\n                                   }\n                               } }\n                           />\n                       </div> \n                       }\n                       {\n                           content.text.use && \n                           <div className=\"df-margin-big feature-title\" style={{width:'100%', height:'100%', alignItems:'end', display: 'flex', padding:'8px 5px'}}>\n                                   <TextAuto small className=\"text-input\" \n                                        value={item.text} \n                                        color = {content.text.color} \n                                        align = {state.isPhone ? content.mobile.align : content.elementText.align}\n                                        onChange={e => action.setContents(produce(state.contents, draft => {\n                                            draft[state.secNum].elements[index].text = e.currentTarget.value;\n                                        }))}  \n                                   />\n                           </div>\n                       }\n                   </div>\n               }\n               </>\n           )\n       }\n    })\n\n    return (\n        <motion.div className=\"template\"\n            data-aos={setting.animation} aos-duration=\"4000\">\n\n            <TitleDesc content={content} />\n\n            <div className=\"features__container\" style={{flexWrap : `${state.isPhone ? 'wrap' : ''}`}}>\n                {returnElementsCards}\n            </div>\n\n        </motion.div>\n    )\n}\n\nexport default GallerySection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/MockupSection.js",["800","801","802","803","804","805","806","807","808","809","810"],"import React, {useContext, useState, useRef} from 'react'\nimport { motion } from 'framer-motion';\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport {produce} from 'immer'\nimport TitleDesc from './components/TitleDesc'\nimport Phone from '../../../tools/img/mockup/mobile.png'\nimport Desktop from '../../../tools/img/mockup/desktop.png'\nimport ourA from '../../../tools/img/005.png'\n\nfunction MockupSection({content, setting}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const imgRef=useRef(null)\n    const [imageShow, setImageShow] = useState(null);\n    const returnMockup = () => {\n        // 목업 - 모바일\n        if(content.mobile.use)\n            return(\n                <div className=\"mobile-container\">\n                    <img className=\"mobile-ex\" src={Phone} alt=\"목업틀\"\n                        style={{width: `${content.mobile.size}px`}}\n                    />\n                    {content.mobile.file === '' ?  \n                        <></>\n                        : \n                        <img \n                        className=\"upload-mobile\" \n                        ref={imgRef} \n                        src={`${content.mobile.file}`} \n                        onClick={(e) => setImageShow(e.currentTarget)} \n                        style={{ width:`${content.mobile.size}px`}}\n                        />\n                    }\n                </div>\n            )\n        // 목업 - 태블릿\n        if(content.tablet.use)\n            return(\n                <div className=\"mobile-container\">\n                   tablet\n                </div>\n            )\n        // 목업 - 데스크탑\n        if(content.desktop.use)\n            return(\n                <div className=\"desk-container\">\n                    <img className=\"mobile-ex\" src={Desktop} alt=\"목업틀\"\n                        style={{width: `${content.desktop.size}px`}}\n                    />\n                    {content.desktop.file === '' ?  \n                        <></>\n                        : \n                        <img \n                        className=\"upload-desk\" \n                        ref={imgRef} \n                        src={`${content.desktop.file}`} \n                        onClick={(e) => setImageShow(e.currentTarget)} \n                        // style={{ width:`${content.desktop.size}px`}}\n                        />\n                    }\n                </div>\n            )\n        // 목업 - 모바일 2개\n        if(content.mobile2.use)\n        return(\n            <>\n            <div className=\"desk-container\">\n                    <img className=\"mobile-ex\" src={Phone} alt=\"목업틀\"\n                        style={{width: `${content.mobile2.size}px`}}\n                    />\n                    {content.mobile2.file1 === '' ?  \n                        <></>\n                        : \n                        <img \n                        className=\"upload-mobile\" \n                        ref={imgRef} \n                        src={`${content.mobile2.file1}`} \n                        onClick={(e) => setImageShow(e.currentTarget)} \n                        style={{ width:`${content.mobile2.size}px`}}\n                        />\n                    }\n            </div>\n            <div className=\"desk-container\">\n                    <img className=\"mobile-ex\" src={Phone} alt=\"목업틀\"\n                        style={{width: `${content.mobile2.size}px`}}\n                    />\n                    {content.mobile2.file2 === '' ?  \n                        <></>\n                        : \n                        <img \n                        className=\"upload-mobile\" \n                        ref={imgRef} \n                        src={`${content.mobile2.file2}`} \n                        onClick={(e) => setImageShow(e.currentTarget)} \n                        style={{ width:`${content.mobile2.size}px`}}\n                        />\n                    }\n            </div>\n            </>\n        )\n        // 목업 - desk + mobile\n        if(content.deskMobile.use)\n        return(\n            <>\n            <div className=\"mobile-container\">\n                    <img className=\"mobile-ex\" src={Phone} alt=\"목업틀\"\n                        style={{width: `${content.deskMobile.size1}px`}}\n                    />\n                    {content.deskMobile.file1 === '' ?  \n                        <></>\n                        : \n                        <img \n                        className=\"upload-mobile\" \n                        ref={imgRef} \n                        src={`${content.deskMobile.file1}`} \n                        onClick={(e) => setImageShow(e.currentTarget)} \n                        style={{ width:`${content.deskMobile.size1}px`}}\n                        />\n                    }\n            </div>\n            <div className=\"desk-container\">\n                    <img className=\"mobile-ex\" src={Desktop} alt=\"목업틀\"\n                        style={{width: `${content.deskMobile.size2}px`}}\n                    />\n                    {content.deskMobile.file2 === '' ?  \n                        <></>\n                        : \n                        <img \n                        className=\"upload-desk\" \n                        ref={imgRef} \n                        src={`${content.deskMobile.file2}`} \n                        onClick={(e) => setImageShow(e.currentTarget)} \n                        />\n                    }\n            </div>\n            </>\n        )\n    }\n    return (\n        <motion.div className=\"template\"\n            data-aos={setting.animation} aos-duration=\"4000\">\n\n            <TitleDesc content={content} />\n            <div className=\"image__container\" style={{marginTop: '30px'}}>\n             {returnMockup()}\n            </div>\n        </motion.div>\n    )\n}\n\nexport default MockupSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/TextSection.js",["811","812","813","814","815"],"import React, {useContext, useState, useEffect} from 'react'\nimport { motion } from 'framer-motion';\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport {produce} from 'immer'\nimport TitleDesc from './components/TitleDesc'\n\nfunction TextSection({content, setting}) {\n\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    \n    // useEffect(() => {\n    //     if (content.layout === 1)\n    //     {\n    //         action.setContents(produce(state.contents, draft => {\n    //             draft[state.secNum].title.align='center'\n    //             draft[state.secNum].desc.align='center'\n    //             draft[state.secNum].padding.top= 15\n    //             draft[state.secNum].padding.bottom= 15\n    //         }))\n    //     }\n    //     else if(content.layout === 2)\n    //     {\n    //         action.setContents(produce(state.contents, draft => {\n    //             draft[state.secNum].title.align='left'\n    //             draft[state.secNum].desc.align='left'\n    //             draft[state.secNum].padding.top= 25\n    //             draft[state.secNum].padding.bottom= 5\n    //         }))\n    //     }\n    //     else\n    //     {\n    //         action.setContents(produce(state.contents, draft => {\n    //             draft[state.secNum].title.align='left'\n    //             draft[state.secNum].desc.align='left'\n    //             draft[state.secNum].padding.top= 15\n    //             draft[state.secNum].padding.bottom= 15\n    //         }))\n    //     }  \n    // }, [content.layout])\n    \n\n    return (\n        <motion.div className=\"centera\"\n            data-aos={setting.animation} aos-duration=\"4000\">\n            <TitleDesc content={content} />\n\n        </motion.div>\n    )\n}\n\nexport default TextSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/tools/animations.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NavFooterSetting/EditFooterSection.js",["816","817","818","819","820","821","822","823","824","825","826"],"import React, {useState} from 'react'\nimport RadioCustom from '../tools/Custom/RadioCustom'\nimport ColorCustom from '../tools/Custom/ColorCustom'\nimport OpenCloseCustom from '../tools/Custom/OpenCloseCustom'\nimport OnOffCustom from '../tools/Custom/OnOffCustom'\nimport InputCustom from '../tools/Custom/InputCustom'\nimport ResponsiveCustom from '../tools/Custom/ResponsiveCustom'\nimport CheckBoxContainer from '../tools/Custom/CheckBoxCustom'\nimport ElementsTable from '../EditTemplates/tools/ElementsTable'\nimport SliderCustom from '../tools/Custom/SliderCustom'\nimport TextSizeCustom from '../tools/func/TextSizeCustom'\nimport BoxCustom from '../tools/Custom/BoxCustom'\nimport produce from 'immer';\nimport Layout from '../EditTemplates/tools/Layout'\n\nimport { AlignCenter, AlignEnd, AlignStart } from '@styled-icons/bootstrap';\n\nconst alignOptions = [\n    { label: '왼쪽', value: 'left' },\n    { label: '중앙', value: 'center' },\n]\n\nconst sizeOptions = [\n    { label: 'S', value: 10 },\n    { label: 'M', value: 15 },\n    { label: 'L', value: 20 },   \n]\nconst layoutOptions = [\n    { label: '1', value: 1 },\n    { label: '2', value: 2 },\n    { label: '3', value: 3 },\n]\n\nconst iconColorOptions = [\n    { label: '흰색', value: 'white' },\n    { label: '검은색', value: 'black' },\n]\n\nconst paddingOptions = [\n    { label: '좁게', value: 1 },\n    { label: '보통', value: 3 },\n    { label: '넓게', value: 5 },\n]\n\n// const alignOptions = [\n//     { label: <AlignStart width={30} />, value: 'start' },\n//     { label: <AlignCenter width={30} />, value: 'center' },\n//     { label: <AlignEnd width={30} />, value: 'end' },\n// ]\n\nfunction EditFooterSection({foot, setFoot, category}) {\n\n    const elements = [\n        {\n            title:'회사 / 팀 정보',\n            use:foot.text.use,\n            func:() => setFoot(produce(foot, draft => {\n                draft.text.use = !foot.text.use;\n            }))\n        },\n        {\n            title:'소셜 아이콘',\n            use:foot.icon.use,\n            func:() => setFoot(produce(foot, draft => {\n                draft.icon.use = !foot.icon.use;\n            }))\n        },\n        {\n            title:'저작권 표시',\n            use:foot.copyright.use,\n            func:() => setFoot(produce(foot, draft => {\n                draft.copyright.use = !foot.copyright.use;\n            }))\n        },\n    ]\n\n    // const returnIconLinkSetting = foot.icon.icons.map((item, index) => {\n    //     return(\n    //         <div className=\"edit-element\">\n    //             <div className=\"edit-element__one\">\n    //                 <div className=\"edit-element__left\">{item.label}</div>\n    //                 <div className=\"edit-element__right\">\n    //                     <input type=\"text\" value={foot.icons.filter(doc => doc.value === item.value)[0].link} \n    //                         onChange={e => setFoot({...foot, icons:[...foot.icons.map((it, index) => it.value === item.value ? {...it, link:e.currentTarget.value} : it )]}) } />\n    //                 </div>\n    //             </div>\n    //         </div>\n    //     )\n    // })\n\n    return (\n        <div>\n            { category === 0 ? \n            <>\n                <div>\n                <ElementsTable elements={elements} />\n                    <Layout foot={foot} setFoot={setFoot} version='footer'/>\n                    {/* <RadioCustom value={foot.layout} options={layoutOptions} func={e => {setFoot(produce(foot, draft => {\n                        draft.layout = e;\n                    }))}} /> */}\n                    <OpenCloseCustom title=\"회사 / 팀 정보\">\n                        <ColorCustom text=\"색상\" value={foot.text.color} func={e => setFoot(produce(foot, draft => {\n                            draft.text.color = e;\n                        }))} />\n                        <RadioCustom text=\"정렬\" options={alignOptions} value={foot.text.align} func={e => setFoot(produce(foot, draft => {\n                            draft.text.align = e;\n                        }))} />\n                        <TextSizeCustom text=\"크기\" options={sizeOptions} value={foot.text.size} func={e => setFoot(produce(foot, draft => {\n                            draft.text.size = e;\n                        }))} />\n                    </OpenCloseCustom>\n                    <OpenCloseCustom title=\"소셜 아이콘\">\n                        <ColorCustom text=\"색상\" value={foot.icon.color} func={e => {setFoot(produce(foot, draft => {\n                            draft.icon.color = e;\n                        }))}} />\n                        <InputCustom text='페이스북' value={foot.icon.facebook} func={e=>{setFoot(produce(foot, draft => {\n                            draft.icon.facebook = e;\n                        }))}} placeholder='링크를 입력해주세요.'/>\n                       <InputCustom text='인스타그램' value={foot.icon.instagram} func={e=>{setFoot(produce(foot, draft => {\n                            draft.icon.instagram = e;\n                        }))}} placeholder='링크를 입력해주세요.'/>\n                        <InputCustom text='네이버' value={foot.icon.naver} func={e=>{setFoot(produce(foot, draft => {\n                            draft.icon.naver = e;\n                        }))}} placeholder='링크를 입력해주세요.'/>\n                        <InputCustom text='노션' value={foot.icon.notion} func={e=>{setFoot(produce(foot, draft => {\n                            draft.icon.notion = e;\n                        }))}} placeholder='링크를 입력해주세요.'/>\n                        <InputCustom text='메일' value={foot.icon.mail} func={e=>{setFoot(produce(foot, draft => {\n                            draft.icon.mail = e;\n                        }))}} placeholder='링크를 입력해주세요.'/>\n                        <InputCustom text='카카오톡' value={foot.icon.kakaotalk} func={e=>{setFoot(produce(foot, draft => {\n                            draft.icon.kakaotalk = e;\n                        }))}} placeholder='링크를 입력해주세요.'/>\n                        <InputCustom text='트위터' value={foot.icon.twitter} func={e=>{setFoot(produce(foot, draft => {\n                            draft.icon.twitter = e;\n                        }))}} placeholder='링크를 입력해주세요.'/>\n                        <InputCustom text='유튜브' value={foot.icon.youtube} func={e=>{setFoot(produce(foot, draft => {\n                            draft.icon.youtube = e;\n                        }))}} placeholder='링크를 입력해주세요.'/>\n                    </OpenCloseCustom>\n                    <OpenCloseCustom title=\"저작권표시\">\n                        <div className=\"center-column\">\n                            <div className=\"edit-element center-row\" style={{fontSize:'13px', justifyContent:'start'}}>\n                                <div>\n                                    2022 Copyright ©\n                                </div>\n                                <div style={{width:'180px'}}>\n                                    <InputCustom value={foot.copyright.text} placeholder=\"surfee\" func={(e) => setFoot(produce(foot, draft => {\n                                        draft.copyright.text = e;\n                                    }))}/>\n                                </div>\n                                {/* <div>\n                                    , All rights reserved\n                                </div> */}\n                            </div>\n                        </div>\n                    </OpenCloseCustom>\n                </div>\n            </>\n            : \n            <div>\n                <OpenCloseCustom title=\"배경\">\n                    <ColorCustom text=\"색상\" value={foot.backgroundColor} func={e => {setFoot(produce(foot, draft => {\n                        draft.backgroundColor = e;\n                    }))}} />\n                </OpenCloseCustom>\n                <OpenCloseCustom title=\"여백\">\n                    <SliderCustom text=\"상단여백\" value={foot.padding} func={e => {setFoot(produce(foot, draft => {\n                        draft.padding = e;\n                    }))}} />\n                </OpenCloseCustom>\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default EditFooterSection\n\n// {\n//     foot.iconUse && \n//     <>\n//         <div className=\"edit-element\">\n//             <div className=\"edit-element__one\">\n//                 <div className=\"edit-element__left\">아이콘 색상</div>\n//                 <div className=\"edit-element__right\">\n//                     <RadioCustom \n//                         options={iconColorOptions}\n//                         onChange={(e) => setFoot({...foot, iconColor:e})}\n//                         value={foot.iconColor}\n//                     />\n//                 </div>\n//             </div>\n//         </div>\n//         <div className=\"edit-element\">\n//             <div className=\"edit-element__one\">\n//                 <div className=\"edit-element__left\">아이콘 정렬</div>\n//                 <div className=\"edit-element__right\">\n//                     <RadioCustom \n//                         options={alignOptions}\n//                         onChange={(e) => setFoot({...foot, iconAlign:e})}\n//                         value={foot.iconAlign}\n//                     />\n//                 </div>\n//             </div>\n//         </div>\n//         <div className=\"edit-element\">\n//             <div className=\"edit-element__one\" style={{height:'500px'}}>\n//                 <div className=\"edit-element__left\">추가할 아이콘</div>\n//                 <div className=\"edit-element__right\">\n//                     {/* <Select options={iconsList} onChange={e => {console.log(e.label)}} style={{color:'black'}}/> */}\n//                     <Select\n//                         closeMenuOnSelect={false}\n//                         components={animatedComponents}\n//                         isMulti\n//                         options={iconsList}\n//                         onChange={e => {setFoot({...foot, icons:e})}}\n//                     />\n//                 </div>\n//             </div>\n//         </div>\n//         {\n//             returnIconLinkSetting\n//         }\n//     </>\n// }","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/NavBar/NaviConatainer.js",["827","828","829"],"import React, {useContext} from 'react'\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport produce from 'immer'\nimport AutosizeInput from 'react-input-autosize';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport TextAuto from '../SectionTypes/components/TextAuto'\n\nfunction NaviConatainer({navi, setNavi, CustomCtaButton, CustomGhostButton}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    return (\n        <>\n        {navi.logo.use && \n            <div className=\"make-nav-logoc\" style={{height:`${navi.height}px`, justifyContent:`${navi.logo.align}`, paddingLeft:`${state.isPhone ? '10px' : '30px'}`}}>\n                {navi.logo.image.use && \n                    <div className=\"make-nav-logo-image\">\n                        <img src={navi.logo.image.attachment} width={navi.logo.image.width} />\n                    </div>}\n                {navi.logo.text.use && \n                    <div className=\"make-nav-logo-image\" style={{\n                        paddingLeft:`${navi.logo.image.use ? '1px' : '8px'}`\n                    }}>\n                        <TextareaAutosize\n                            className=\"text-input-flex ti\"\n                            value={navi.title}\n                            onChange={(e) => {\n                                setNavi(produce(navi, draft => {\n                                    draft.title = e.currentTarget.value;\n                                }))\n                            }}\n                            style={{\n                                fontSize:`${navi.logo.text.fontSize}px`, \n                                color:`${navi.logo.text.color}`, \n                                fontFamily:`${state.setting.font}`,\n                                resize:'none'\n                            }}\n                        />\n                    </div>\n                }\n            </div>\n        }  \n        {navi.button.use && \n            <div className=\"make-nav-buttonc\" style={{justifyContent:`${navi.button.align}`, paddingRight:`${state.isPhone ? '10px' : '30px'}`}}>\n            { navi.button.cta.use && \n                <div className=\"cta-button-made\" style={{\n                    borderRadius:`${state.setting.cta.borderRadius}px`,\n                    backgroundColor:`${state.setting.cta.backgroundColor}`,\n                    color:`${state.setting.cta.color}`,\n                    boxShadow:`${state.setting.cta.shadow ? '1px 2px 4px rgba(0,0,0,0.2)' : 'none'}`,\n                    border:`${state.setting.cta.border ? `1px solid ${state.setting.cta.borderColor}` : 'none'}`\n                }} onClick={() => {}}>\n                    <AutosizeInput className=\"text-input-flex ti\" value={navi.button.cta.text } onChange={(e) => setNavi(produce(navi, draft => {\n                        draft.button.cta.text = e.currentTarget.value;\n                    }))} inputStyle={{fontFamily:`${state.setting.smallFont}`, borderRadius:`${state.setting.cta.borderRadius}px`,  backgroundColor:`${state.setting.cta.backgroundColor}`}}/>\n                </div>\n            }\n            { navi.button.ghost.use && \n                <div className=\"cta-button-made\" style={{\n                    marginLeft:`${ navi.button.cta.use ? '5px' : '0px'}`,\n                    borderRadius:`${state.setting.ghost.borderRadius}px`,\n                    backgroundColor:`${state.setting.ghost.backgroundColor}`,\n                    color:`${state.setting.ghost.color}`,\n                    boxShadow:`${state.setting.ghost.shadow ? '1px 2px 4px rgba(0,0,0,0.2)' : 'none'}`,\n                    border:`${state.setting.ghost.border ? `1px solid ${state.setting.ghost.borderColor}` : 'none'}`\n                }} onClick={() => {}}>\n                    <AutosizeInput className=\"text-input-flex ti\" value={navi.button.ghost.text } onChange={(e) => setNavi(produce(navi, draft => {\n                        draft.button.ghost.text = e.currentTarget.value;\n                }))} inputStyle={{fontFamily:`${state.setting.smallFont}`, borderRadius:`${state.setting.ghost.borderRadius}px`,  backgroundColor:`${state.setting.ghost.backgroundColor}`}}/>\n                            </div>\n                        }\n                </div>\n        }     \n        </>\n    )\n}\n\nexport default NaviConatainer\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NavFooterSetting/EditNaviSection.js",["830","831","832","833","834","835","836","837","838"],"import React, {useState} from 'react'\nimport RadioCustom from '../tools/Custom/RadioCustom'\nimport ColorCustom from '../tools/Custom/ColorCustom'\nimport OpenCloseCustom from '../tools/Custom/OpenCloseCustom'\nimport OnOffCustom from '../tools/Custom/OnOffCustom'\nimport InputCustom from '../tools/Custom/InputCustom'\nimport ResponsiveCustom from '../tools/Custom/ResponsiveCustom'\nimport CheckBoxContainer from '../tools/Custom/CheckBoxCustom'\nimport ElementsTable from '../EditTemplates/tools/ElementsTable'\nimport SliderCustom from '../tools/Custom/SliderCustom'\nimport TextSizeCustom from '../tools/func/TextSizeCustom'\nimport BoxCustom from '../tools/Custom/BoxCustom'\nimport produce from 'immer';\nimport AddContentImg from '../tools/func/FuncContentImg'\n\nconst logoOptions = [\n    { label: '로고 이미지', value: 'logo' },\n    { label: '텍스트', value: 'text' },\n]\n\nconst logoAlignOptions = [\n    { label: '왼쪽', value: 'start' },\n    { label: '중앙', value: 'center' },\n]\n\nconst buttonAlignOptions = [\n    { label: '중앙', value: 'center' },\n    { label: '오른쪽', value: 'end' },\n]\n\nfunction EditNaviSection({navi, setNavi, category}) {\n    const [logo, setLogo] = useState(\"logo\")\n    const [buttonUse, setButtonUse] = useState(true)\n    const [buttonFunc, setButtonFunc] = useState(\"link\")\n    const [buttonTemplate, setButtonTemplate] = useState(1)\n\n    const elements = [\n        {\n            title:'로고',\n            use:navi.logo.use,\n            func:() => setNavi(produce(navi, draft => {\n                draft.logo.use = !navi.logo.use;\n            }))\n        },\n        {\n            title:'버튼',\n            use:navi.button.use,\n            func:() => setNavi(produce(navi, draft => {\n                draft.button.use = !navi.button.use;\n            }))\n        },\n        {\n            title:'앱 다운로드',\n            use:navi.appButton.use,\n            func:() => setNavi(produce(navi, draft => {\n                draft.appButton.use = !navi.appButton.use;\n            }))\n        },\n    ]\n\n\n    // 이미지 업로드\n    const onChangeContentImage= e => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            const {currentTarget:{result}} = finishedEvent;\n            setNavi(produce(navi, draft=>{\n                draft.logo.image.attachment = result;             \n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    // 이미지 삭제\n    const RemoveImage = () => {\n        setNavi(produce(navi, draft=>{\n            draft.logo.image.attachment = '';\n        }))\n    }\n\n    return (\n        <div>\n            { category === 0 ? \n            <>\n                <div>\n                    <ElementsTable elements={elements} />\n                    <OpenCloseCustom title=\"로고\">\n                        <RadioCustom options={logoAlignOptions} value={navi.logo.align} func={(e) => setNavi(produce(navi, draft => {\n                            draft.logo.align = e;\n                        }))} text=\"정렬\" />\n\n                        <OnOffCustom value={navi.logo.image.use} func={(e) => setNavi(produce(navi, draft => {\n                            draft.logo.image.use = !navi.logo.image.use;\n                        }))} text=\"로고 (Image)\" />\n                        {\n                            navi.logo.image.use && \n                            <>\n                                <AddContentImg text=\"로고\" value={navi.logo.image.attachment} func={e => onChangeContentImage(e)} removeFunc={e => RemoveImage(e)}/>\n                                <div style={{marginTop: '-20px'}}/>\n                                <SliderCustom text=\"로고 사이즈\" subtext=\"이미지의 세로 길이를 조절해주세요.\" func={e => setNavi(produce(navi, draft => {\n                                    draft.logo.image.width = e;\n                                }))} />\n                                <div style={{marginBottom: '20px'}}/>\n                            </>\n                        }\n                        <OnOffCustom value={navi.logo.text.use} func={(e) => setNavi(produce(navi, draft => {\n                            draft.logo.text.use = !navi.logo.text.use;\n                        }))} text=\"서비스/제품명 (Text)\" />\n                        {\n                            navi.logo.text.use && <>\n                                <ColorCustom text=\"Text 색상\" value={navi.logo.text.color} func={e =>  setNavi(produce(navi, draft => {\n                                    draft.logo.text.color = e;\n                                }))} />\n                                <TextSizeCustom text=\"Text 크기\" desc value={navi.logo.text.fontSize} func={e =>  setNavi(produce(navi, draft => {\n                                    draft.logo.text.fontSize = e;\n                                }))} />\n                            </>\n                        }\n                    </OpenCloseCustom>\n                    <OpenCloseCustom title=\"버튼 사용\">\n                        <RadioCustom options={buttonAlignOptions} value={navi.button.align} func={(e) => setNavi(produce(navi, draft => {\n                            draft.button.align = e;\n                        }))} text=\"정렬\" />\n                        \n                        <OnOffCustom text=\"CTA 버튼\" value={navi.button.cta.use} func={() => setNavi(produce(navi, draft => {\n                            draft.button.cta.use = !navi.button.cta.use\n                        }))} />\n                        {\n                            navi.button.cta.use && \n                                <InputCustom placeholder=\"연결하고 싶은 URL을 입력해주세요.\" value={navi.button.cta.link} func={(e) => setNavi(produce(navi, draft => {\n                                    draft.button.cta.link = e\n                                }))} />\n                        }\n                        \n                        <OnOffCustom text=\"고스트 버튼\" value={navi.button.ghost.use} func={() => setNavi(produce(navi, draft => {\n                            draft.button.ghost.use = !navi.button.ghost.use\n                        }))} />\n\n                        {\n                            navi.button.ghost.use && \n                                <InputCustom placeholder=\"연결하고 싶은 URL을 입력해주세요.\" value={navi.button.ghost.link} func={(e) => setNavi(produce(navi, draft => {\n                                    draft.button.ghost.link = e\n                                }))} />\n                        }\n                    </OpenCloseCustom>\n                    \n                    <BoxCustom>\n                        <OnOffCustom text=\"페이지 상단 고정\" value={navi.fixed} func={e => setNavi({...navi, fixed:!navi.fixed})}/>\n                        <div className=\"edit-element\">\n                            {\n                                navi.fixed ? <p className=\"mid-command\">스크롤을 내리면 내비게이션 바는 더 이상 보이지 않습니다.</p> \n                                    : \n                                <p className=\"mid-command\">스크롤을 내려도 내비게이션 바가 화면 상단에 따라 다닙니다.</p>\n                            }\n                        </div>\n                    </BoxCustom>\n                </div>\n            </>\n            : \n            <>\n            <div>\n                <OpenCloseCustom title=\"배경색\">\n                    <ColorCustom func={(e) => setNavi({...navi, backgroundColor:e})} value={navi.backgroundColor} text=\"색상\" />\n                </OpenCloseCustom>\n                <OpenCloseCustom title=\"구분선\">\n                    <CheckBoxContainer text=\"구분선\" value={navi.bottomBorder.use} func={e => setNavi(produce(navi, draft => {\n                        draft.bottomBorder.use = !navi.bottomBorder.use;\n                    }))}/>\n                    {\n                        navi.bottomBorder.use && <>\n                            <ColorCustom func={(e) => setNavi(produce(navi, draft => {\n                                draft.bottomBorder.color = e\n                            }))} value={navi.bottomBorder.color} text=\"색상\" />\n                        </>\n                    }\n                </OpenCloseCustom>\n                <OpenCloseCustom title=\"높이\">\n                    <SliderCustom text=\"높이 조정\" value={navi.height} func={e => setNavi({...navi, height:e})}/>\n                </OpenCloseCustom>\n                <ResponsiveCustom />\n            </div>\n            </>\n            }\n        </div>\n    )\n}\n\nexport default EditNaviSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NavFooterSetting/EditContents.js",["839","840","841","842","843"],"import React, {useContext, useState} from 'react';\nimport { MyContext } from '../../../../pages/Make/MakePageV2';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport produce from 'immer';\nimport ConfirmCustom from '../../../../tools/ConfirmCustom';\nimport AddingSection from '../../Modal/AddingSection';\nimport {CustomSwitch2} from '../tools/Custom/OnOffCustom'\nimport './EditContents.css';\nimport FontFamily from '@ckeditor/ckeditor5-font/src/fontfamily';\nimport {DragIndicator} from '@styled-icons/material-outlined'\n// import PlusIcon from '../../../../tools/img/plusButton.png';\n\nconst BCOLOR = 'rgba(230,230,230,0)'\n\nconst getItemStyle = (isDragging, draggableStyle, backColor) => {\n    return {\n        userSelect: \"none\",\n        textAlign: \"right\",\n\n        // change background color if dragging\n        background: isDragging ? \"white\" : BCOLOR,\n        boxShadow: isDragging ? \"2px 4px 20px #E8F0F9\" : 'none',\n\n        // styles we need to apply on draggables\n        ...draggableStyle\n    };\n};\n\nfunction EditContents({navi, setNavi, foot, setFoot}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const [deleteopen, setDeleteOpen] = useState(false);\n    const [addOpen, setAddOpen] = useState(false);\n\n    const handleChange = result => {\n        if (!result.destination) return;\n\n        action.setContents(produce(state.contents, draft => {\n            const [reorderedItem] = draft.splice(result.source.index, 1);\n            draft.splice(result.destination.index, 0, reorderedItem);\n        }));\n    }\n\n    const optionButton = (num) => {\n        return(\n            <div className=\"content__button\"\n                onClick={() => {\n                    action.setSecNum(num)\n                }}>\n                설정\n            </div>\n        )\n    }\n\n    const deleteSection = (index) => {\n        if(index === 0){\n            action.setContents([\n                ...state.contents.slice(1,state.contents.length)\n            ])\n        }if(index === state.contents.length){\n            action.setContents([\n                ...state.contents.slice(0,index-1),\n            ])\n        }else{\n            action.setContents([\n                ...state.contents.slice(0,index),\n                ...state.contents.slice(index+1, state.contents.length)\n            ])\n        }\n    }\n\n    const pasteThisSection = (content, index) => {\n        action.setContents([\n            ...state.contents.slice(0,index),\n            content,\n            ...state.contents.slice(index, state.contents.length)\n        ])\n    }\n\n    return (\n        <div>\n            <div className=\"back__container\" />\n            <div style={{width:'100%', display: 'flex', justifyContent:'center', alignItems: 'center', flexDirection:'column'}}>\n                <div className=\"one-contents-draggable\" style={{backgroundColor:`${BCOLOR}`}}>\n                    <div className=\"center-row hoverback one-contents__inner\" style={{padding:'20px 10px'}}>\n                        <div className=\"left\">\n                            <div className=\"content__name\">\n                                네비 바\n                            </div>\n                            <div style={{paddingLeft:'7%'}}>\n                                <CustomSwitch2 value={navi.use} onChange={e => setNavi(produce(navi, draft => {\n                                    draft.use = !navi.use\n                                })) }/>\n                            </div>\n                        </div>\n                        <div className=\"right\">\n                            {optionButton(50)}\n                        </div>\n                    </div>   \n                </div>\n                <DragDropContext onDragEnd={handleChange}>\n                    <Droppable droppableId=\"sectionsss\">\n                        {(provided) => \n                            (\n                                <>\n                            <div {...provided.droppableProps} ref={provided.innerRef} style={{width:'100%', display: 'flex', justifyContent:'center', alignItems: 'center', flexDirection:'column'}}>\n                                {state.contents.map((item, index) => {\n                                    return(\n                                        <Draggable draggableId={String(index)} key={index} index={index} style={{width:'100%'}}>\n                                            {(provided, snapshot) => {\n                                                if(index === 0){\n                                                        return(\n                                                            <>\n                                                            <div style={{marginTop: '30px'}}></div>\n                                                            {/* <img className=\"fixed-icon\" src={PlusIcon} alt=\"아이콘\"/> */}\n                                                                <div\n                                                                    className=\"one-contents-draggable\"\n                                                                    ref={provided.innerRef}\n                                                                    {...provided.dragHandleProps}\n                                                                    {...provided.draggableProps}\n\n                                                                    style={getItemStyle(\n                                                                    snapshot.isDragging,\n                                                                    provided.draggableProps.style,\n                                                                    )}>\n                                                                        <div className=\"center-column hoverback one-contents__inner\">\n                                                                            {/* <div className=\"centera\" style={{width:'5%'}}>\n                                                                                <DragIndicator size=\"30\" />\n                                                                            </div> */}\n                                                                                <div className=\"center-row\">\n                                                                                    <div className=\"left\">\n                                                                                        <div className=\"content__name\">\n                                                                                            {item.name}\n                                                                                        </div>\n                                                                                    </div>\n                                                                                    <div className=\"right\">\n                                                                                        {optionButton(index)}\n                                                                                    </div>\n                                                                                </div>\n                                                                                <div className=\"center-row\">\n                                                                                    <div className=\"left\" style={{width:'85%', textAlign:'left', color:'#555C67', display:'block', textOverflow: 'ellipsis', whiteSpace: 'nowrap', overflow: 'hidden'}}>\n                                                                                        {item.title.text}\n                                                                                    </div>\n                                                                                    <div className=\"right\">\n                                                                                        <div className=\"content__button cb-delete\"\n                                                                                            onClick={() => {\n                                                                                                const yes = window.confirm(\"정말 삭제하시겠습니까?\");\n                                                                                                if(yes){\n                                                                                                    deleteSection(index);\n                                                                                                }\n                                                                                            } }>\n                                                                                            삭제\n                                                                                        </div>\n                                                                                        <div className=\"content__button cb-duplicate\"\n                                                                                            onClick={() => pasteThisSection(state.contents[index], index) }>\n                                                                                            복제\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </div>\n                                                                        </div>   \n                                                                </div>\n                                                                {/* <div className=\"centera small-button__container\">\n                                                                    <span className=\"centera make-section-button__small\">\n                                                                        +\n                                                                    </span>\n                                                                </div> */}\n                                                            </>\n                                                        )}\n                                                        else{\n                                                            return(\n                                                            <>\n                                                            <div\n                                                                    className=\"one-contents-draggable\"\n                                                                    ref={provided.innerRef}\n                                                                    {...provided.dragHandleProps}\n                                                                    {...provided.draggableProps}\n\n                                                                    style={getItemStyle(\n                                                                    snapshot.isDragging,\n                                                                    provided.draggableProps.style,\n                                                                    )}>\n                                                                        <div className=\"center-column hoverback one-contents__inner\">\n                                                                            <div className=\"center-row\">\n                                                                                <div className=\"left\">\n                                                                                    <div className=\"content__name\">\n                                                                                        {item.name}\n                                                                                    </div>\n                                                                                </div>\n                                                                                <div className=\"right\">\n                                                                                    {optionButton(index)}\n                                                                                </div>\n                                                                            </div>\n                                                                            <div className=\"center-row\">\n                                                                                <div className=\"left\" style={{width:'85%', textAlign:'left', color:'#555C67', display:'block', textOverflow: 'ellipsis', whiteSpace: 'nowrap', overflow: 'hidden'}}>\n                                                                                    {item.title.text}\n                                                                                </div>\n                                                                                <div className=\"right\">\n                                                                                    <div className=\"content__button cb-delete\"\n                                                                                        onClick={() => {\n                                                                                            const yes = window.confirm(\"정말 삭제하시겠습니까?\");\n                                                                                            if(yes){\n                                                                                                deleteSection(index);\n                                                                                            }\n                                                                                        } }>\n                                                                                        삭제\n                                                                                    </div>\n                                                                                    <div className=\"content__button cb-duplicate\"\n                                                                                        onClick={() => pasteThisSection(state.contents[index], index) }>\n                                                                                        복제\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>   \n                                                                </div>\n                                                            </>\n                                                        ) }}}\n                                                </Draggable>\n                                            )\n                                        })}\n                                {provided.placeholder}\n                            </div>\n                            </>\n                            )\n                        }\n                    </Droppable>\n                </DragDropContext>\n                <div className=\"center-row\">\n                    <div className=\"content__button\" onClick={() => {\n                        setAddOpen(true);\n                        // action.setAddingSectionAt(state.contents.length - 1);\n                    }}\n                    style={{margin:'15px', borderRadius:'3px'}} >\n                        + 섹션 추가하기\n                    </div>\n                </div>\n                <div className=\"one-contents-draggable\">\n                    <div className=\"center-row hoverback one-contents__inner\" style={{padding:'20px 10px'}}>\n                        <div className=\"left\">\n                            <div className=\"content__name\">\n                                푸터 바\n                            </div>\n                            <div style={{paddingLeft:'7%'}}>\n                                <CustomSwitch2 value={foot.use} onChange={e => setFoot(produce(foot, draft => {\n                                    draft.use = !foot.use\n                                })) }/>\n                            </div>\n                        </div>\n                        <div className=\"right\">\n                            {optionButton(51)}\n                        </div>\n                    </div>   \n                </div>\n            </div>\n            <AddingSection open={addOpen} setOpen={setAddOpen} />\n        </div>\n    )\n}\n\nexport default EditContents\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditMockupSection.js",["844"],"import React, {useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport EditDesign from './tools/EditDesign'\nimport produce from 'immer';\nimport ElementsTable from './tools/ElementsTable'\nimport OpenCloseCustom from '../tools/Custom/OpenCloseCustom'\nimport AddMockup from './tools/AddMockup'\n\nfunction EditMockupSection({content, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const elements = [\n        {\n            title:'제목',\n            use:content.title.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].title.use = !content.title.use;\n            }))\n        },\n        {\n            title:'본문',\n            use:content.desc.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].desc.use = !content.desc.use;\n            }))\n        },\n        {\n            title:'목업',\n            use:content.mockup.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].mockup.use = !content.mockup.use;\n            }))\n        },\n    ]\n\n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <div>\n                        <ElementsTable elements={elements} />\n                        <OpenCloseCustom title='목업'>\n                            <AddMockup content={content} />\n                        </OpenCloseCustom>\n                    </div>\n                )\n            case 1:\n                return(\n                    <div>\n                        <EditDesign content={content} />\n                    </div>\n                )\n        }\n    }\n\n    return (\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EditMockupSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditVideoSection.js",["845","846"],"import React, {useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport EditDesign from './tools/EditDesign'\nimport ElementsTable from './tools/ElementsTable'\nimport produce from 'immer'\nimport OpenCloseCustom from '../tools/Custom/OpenCloseCustom'\nimport RadioCustom from '../tools/Custom/RadioCustom'\nimport AddContentVideo from '../tools/func/FuncContentVideo'\nimport AddYoutubeLink from '../tools/func/FuncYoutubeLink'\nimport SliderCustom from '../tools/Custom/SliderCustom'\nimport {CustomSwitch} from '../tools/Custom/OnOffCustom'\nimport ColorCustom from '../tools/Custom/ColorCustom'\n\nconst videoOptions = [\n    { label: '업로드', value: 'base'},\n    { label: '유튜브 링크', value: 'youtube'}\n]\nconst alignOptions = [\n    { label: '왼쪽', value: 'left' },\n    { label: '중앙', value: 'center' },\n]\n\nfunction EditVideoSection({content, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    // video type\n    const changeVideoOption = e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].video.type = e;\n        }));\n    }\n    // video upload - BufferArray를 서버에서 stream으로 처리하는 방식으로 하는게 제일인데.. 포기...\n    const onChangeContentVideo = e => {\n        // let newContents = JSON.parse(JSON.stringify(state.contents))\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].video.file = result;\n            }))\n            // actionImgCompress(result);\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    // video remove\n    const RemoveVideo = () => {\n        action.setContents(produce(state.contents, draft=>{\n            draft[state.secNum].video.file = '';\n        }))\n    }\n    // video size\n    const setImgSize = e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].image.size = e\n        }))\n    }\n\n    const videoType = () => {\n        switch(content.video.type){\n            case 'base':\n                return(\n                    <>\n                    <AddContentVideo text=\"동영상\" value={content.video.file} func={e => onChangeContentVideo(e)} removeFunc={e => RemoveVideo(e)}/>\n                    <SliderCustom top=\"크기\" text=\"동영상\" value={content.image.size} func={setImgSize} max=\"100\"/>\n                    </>\n                )\n            case 'youtube':\n                return(\n                    <>\n                    <AddYoutubeLink content={content} value={content.video.link} />\n                    <CustomSwitch text=\"자동 재생\" value={content.video.auto} \n                        onChange={ () => action.setContents(produce(state.contents, draft => {\n                            if (content.video.link.includes('autoplay=1'))\n                                {draft[state.secNum].video.link = content.video.link.replace('autoplay=1', 'autoplay=0');\n                                draft[state.secNum].video.auto = false;}\n                            else\n                                {draft[state.secNum].video.link = content.video.link.replace('autoplay=0', 'autoplay=1');\n                                draft[state.secNum].video.auto = true;}\n                        }))}/>\n                    <div className=\"mid-command\">\n                        유저가 페이지에 들어오면 동영상이 음소거 상태로 자동 재생됩니다.\n                    </div>\n                    <SliderCustom top=\"크기\" text=\"동영상\" value={content.image.size} func={setImgSize} max=\"100\"/>\n                    </>\n                )\n        }\n    }\n\n    const elements = [\n        {\n            title:'제목',\n            use:content.title.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].title.use = !content.title.use;\n            }))\n        },\n        {\n            title:'본문',\n            use:content.desc.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].desc.use = !content.desc.use;\n            }))\n        },\n        {\n            title:'동영상',\n            use:content.video.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].video.use = !content.video.use;\n            }))\n        },\n        {\n            title:'설명',\n            use:content.explanation.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].explanation.use = !content.explanation.use;\n            }))\n        },\n    ]\n\n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <div>\n                        <ElementsTable elements={elements} />\n                        <OpenCloseCustom title=\"동영상\">\n                        <RadioCustom text=\"방식\" options={videoOptions} value={content.video.type} func={e=>changeVideoOption(e)}/>\n                        <div style={{marginBottom: '25px'}}/>\n                        {videoType()}\n                        </OpenCloseCustom>\n                        <OpenCloseCustom title='설명'>\n                        <ColorCustom text=\"색상\" value={content.explanation.color} func={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].explanation.color = e;\n                        }))} />\n                        <RadioCustom text=\"정렬\" options={alignOptions} value={content.explanation.align} func={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].explanation.align = e;\n                        }))} />\n                        </OpenCloseCustom>\n                    </div>\n                )\n            case 1:\n                return(\n                    <div>\n                        <EditDesign content={content} />\n                    </div>\n                )\n        }\n    }\n\n    return (\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EditVideoSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditTextSection.js",["847"],"import React, {useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport EditDesign from './tools/EditDesign'\nimport produce from 'immer';\nimport ElementsTable from './tools/ElementsTable'\nimport Layout from './tools/Layout'\n\nfunction EditTextSection({content, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const elements = [\n        {\n            title:'제목',\n            use:content.title.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].title.use = !content.title.use;\n            }))\n        },\n        {\n            title:'본문',\n            use:content.desc.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].desc.use = !content.desc.use;\n            }))\n        },\n    ]\n\n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <div>\n                        <ElementsTable elements={elements} />\n                        <Layout content={content} version='text' />\n                    </div>\n                )\n            case 1:\n                return(\n                    <div>\n                        <EditDesign content={content} />\n                    </div>\n                )\n        }\n    }\n\n    return (\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EditTextSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditReviewSection.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditGallerySection.js",["848","849","850"],"import React, {useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport EditDesign from './tools/EditDesign'\nimport produce from 'immer';\nimport ElementsTable from './tools/ElementsTable'\nimport RadioCustom from '../tools/Custom/RadioCustom'\nimport OnOffCustom from '../tools/Custom/OnOffCustom'\nimport ColorCustom from '../tools/Custom/ColorCustom'\nimport OpenCloseCustom from '../tools/Custom/OpenCloseCustom'\nimport TextSizeCustom from '../tools/func/TextSizeCustom'\nimport LayoutRFG from './tools/LayoutRFG'\n\nconst layoutOptions = [\n    { label: '1', value: 1},\n    { label: '2', value: 2},\n    { label: '3', value: 3},\n    { label: '4', value: 4},\n]\nconst shapeOptions = [\n    { label: '사각형', value: 0 },\n    { label: '라운드', value: 5 },\n    { label: '원형', value: 20 },\n]\nconst imageSizeOptions = [\n    { label: 'Small', value: 150 },\n    { label: 'Medium', value: 230 },\n    { label: 'Large', value: 270 },\n]\nconst alignOptions = [\n    { label: '왼쪽', value: 'left' },\n    { label: '중앙', value: 'center' },\n]\n\n\nfunction EditGallerySection({content, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const elements = [\n        {\n            title:'제목',\n            use:content.title.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].title.use = !content.title.use;\n            }))\n        },\n        {\n            title:'본문',\n            use:content.desc.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].desc.use = !content.desc.use;\n            }))\n        },\n        {\n            title:'이미지',\n            use:content.element.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].element.use = !content.element.use;\n            }))\n        },\n        {\n            title:'카드',\n            use:content.card.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].card.use = !content.card.use;\n            }))\n        },\n        {\n            title:'설명',\n            use:content.text.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].text.use = !content.text.use;\n            }))\n        },\n    ]\n\n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <div>\n                        <ElementsTable elements={elements} />\n                        <LayoutRFG content={content} />\n                        <OpenCloseCustom title=\"이미지\">\n                            <TextSizeCustom text=\"크기\" value={content.element.size} options={imageSizeOptions} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].element.size = e;\n                            }))} />\n                        </OpenCloseCustom>\n                        <OpenCloseCustom title='카드'>\n                            <RadioCustom text=\"프레임\" button value={content.card.borderRadius} options={shapeOptions} func={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].card.borderRadius = e;\n                                }))} />\n                            <ColorCustom text=\"색상\" value={content.card.color} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].card.color = e;\n                            }))} />\n                            <OnOffCustom text=\"그림자 적용\" value={content.card.shadow} func={(e) => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].card.shadow = !content.card.shadow\n                            }))} />\n                        </OpenCloseCustom>\n                        <OpenCloseCustom title='설명'>\n                            <ColorCustom text=\"색상\" value={content.text.color} func={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].text.color = e;\n                                }))} />\n                        </OpenCloseCustom>\n                    </div>\n                )\n            case 1:\n                return(\n                    <div>\n                        <EditDesign content={content} />\n                    </div>\n                )\n        }\n    }\n\n    return (\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EditGallerySection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditAppDownloadSection.js",["851"],"import React, {useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport EditDesign from './tools/EditDesign'\nimport ElementsTable from './tools/ElementsTable'\nimport produce from 'immer'\nimport AddAppButton from './tools/AddAppButton'\nimport EditNotice from './tools/EditNotice'\n\nimport Layout from './tools/Layout'\n\nfunction EditAppDownloadSection({content, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const elements = [\n        {\n            title:'제목',\n            use:content.title.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].title.use = !content.title.use;\n            }))\n        },\n        {\n            title:'본문',\n            use:content.desc.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].desc.use = !content.desc.use;\n            }))\n        },\n        {\n            title:'앱 다운로드',\n            use:content.appButton.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].appButton.use = !content.appButton.use;\n            }))\n        },\n        {\n            title:'유의 사항 안내',\n            use:content.caution.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].caution.use = !content.caution.use;\n            }))\n        },\n    ]\n\n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <div>\n                        <ElementsTable elements={elements} />\n                        <Layout content={content} version='app' />\n                        <AddAppButton content={content} />\n                        <EditNotice content={content} />\n                    </div>\n                )\n            case 1:\n                return(\n                    <div>\n                        <EditDesign content={content} />\n                    </div>\n                )\n        }\n    }\n\n    return (\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EditAppDownloadSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditQnaSection.js",["852"],"import React, {useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport EditDesign from './tools/EditDesign'\nimport ElementsTable from './tools/ElementsTable'\nimport produce from 'immer'\nimport OpenCloseCustom from '../tools/Custom/OpenCloseCustom'\nimport RadioCustom from '../tools/Custom/RadioCustom'\nimport ColorCustom from '../tools/Custom/ColorCustom'\n\nconst layoutOptions = [\n    {label: '카드', value: 'card'},\n    {label: '표', value: 'table'},\n]\nconst shapeOptions = [\n    {label: '접혀있기\u001d', value: 'close'},\n    {label: '펼쳐있기', value: 'open'},\n]\nfunction EditQnaSection({content, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const elements = [\n        {\n            title:'제목',\n            use:content.title.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].title.use = !content.title.use;\n            }))\n        },\n        {\n            title:'본문',\n            use:content.desc.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].desc.use = !content.desc.use;\n            }))\n        },\n        {\n            title:'QnA',\n            use:content.qna.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].qna.use = !content.qna.use;\n            }))\n        },\n    ]\n\n    const changeLayoutOption = e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].layout = e;\n            console.log(content.layout)\n        }))\n    }\n\n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <div>\n                        <ElementsTable elements={elements} />\n                        <OpenCloseCustom title=\"레이아웃\" subtext={state.isPhone ? '모바일' : 'PC'}>\n                            <RadioCustom options={layoutOptions} value={content.layout} func={e => changeLayoutOption(e)} />\n                        </OpenCloseCustom>\n                        <OpenCloseCustom title=\"QnA\">\n                            <RadioCustom text=\"기본 모양\" options={shapeOptions} value={content.qna.shape} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].qna.shape = e;\n                                console.log(content.qna.shape)\n                            }))} />\n                            <ColorCustom text=\"질문\" value={content.qna.question} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].qna.question = e;\n                            }))} />\n                            <ColorCustom text=\"답변\" value={content.qna.answer} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].qna.answer = e;\n                            }))} />\n                        </OpenCloseCustom>\n\n                    </div>\n                )\n            case 1:\n                return(\n                    <div>\n                        <EditDesign content={content} />\n                    </div>\n                )\n        }\n    }\n\n    return (\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EditQnaSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditHeroSection.js",["853","854","855","856","857","858","859","860","861","862","863","864","865"],"import React, {useState, useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport EditDesign from './tools/EditDesign'\nimport RadioCustom from '../tools/Custom/RadioCustom'\nimport ElementsTable from './tools/ElementsTable'\nimport produce from 'immer';\nimport {CustomSwitch} from '../tools/Custom/OnOffCustom'\nimport OpenCloseCustom from '../tools/Custom/OpenCloseCustom'\nimport CheckBoxContainer from '../tools/Custom/CheckBoxCustom'\nimport InputCustom from '../tools/Custom/InputCustom'\nimport ApplyInputCustom from '../tools/Custom/ApplyInputCustom'\n\nimport Layout from './tools/Layout'\nimport Contents from './tools/Contents'\nimport AddGhostButton from './tools/AddGhostButton'\nimport AddCtaButton from './tools/AddCtaButton'\nimport AddAppButton from './tools/AddAppButton'\n\nconst alignOptions = [\n    {label:'왼쪽', value: '0'},\n    {label:'중앙', value: '0 auto'}\n]\n\nconst buttonAlignOptions = [\n    {label:'왼쪽', value: 'start'},\n    {label:'중앙', value: 'center'}\n]\n\nconst buttonOptions = [\n    {label: '링크 연결', value: 'link'},\n    {label: '신청', value: 'apply'},\n]\n\nconst layoutOptions = [\n    {label: '1', value: 1},\n    {label: '2', value: 2},\n    {label: '3', value: 3},\n]\n\nfunction EditHeroSection({content, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const elements = [\n        {\n            title: '제목',\n            use:content.title.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].title.use = !content.title.use;\n            }))\n        },\n        {\n            title: '본문',\n            use:content.desc.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].desc.use = !content.desc.use;\n            }))\n        },\n        {\n            title: '콘텐츠',\n            use:content.contents.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].contents.use = !content.contents.use;\n            }))\n        },\n        {\n            title: '버튼',\n            use:content.button.ctaUse || content.button.ghostUse,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].button.ctaUse = !content.button.ctaUse;\n                draft[state.secNum].button.ghostUse = !content.button.ghostUse;\n            }))\n        },\n        {\n            title: '앱 다운로드 버튼',\n            use:content.appButton.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].appButton.use = !content.appButton.use;\n            }))\n        },\n    ]\n    const changeAlignOption = e => {\n        action.setContents(produce(state.contents, draft => {\n            if (draft[state.secNum].button.align == '0')\n                draft[state.secNum].button.align = '0 auto'\n            else\n                draft[state.secNum].button.align = '0'\n        }))\n    }\n\n    const changeButtonAlignOption = e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].button.align = e\n        }))\n    }\n\n    const changeLayoutOption = e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].layout = e\n        }))\n    }\n\n    // 버튼 관련\n    const ctaOpen = () => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].button.ctaUse = !content.button.ctaUse}))     \n    }\n\n    const changeCtaOption = () => {\n        action.setContents(produce(state.contents, draft => {\n            if (draft[state.secNum].button.ctaOption == 'link')\n                draft[state.secNum].button.ctaOption = 'apply'\n            else\n                draft[state.secNum].button.ctaOption = 'link'\n        }))\n    }\n\n\n    const returnCtaOptions = () => {\n        switch(content.button.ctaOption){\n            case 'link':\n                return(\n                    <>\n                    <InputCustom placeholder=\"연결하고 싶은 URL을 선택해주세요\" value={content.button.ctaLink} func = {(e) => action.setContents(produce(state.contents, draft => {\n                        draft[state.secNum].button.ctaLink = e\n                    }))} />\n                    <div className=\"mid-command\">입력 후 엔터를 누르세요.</div>\n                    </>\n                )\n            case 'apply':\n                return(\n                    <>\n                    {\n                        content.ctaApplyInputs.length >= 1 ?  \n                        <ApplyInputCustom disabled /> \n                        :\n                        <ApplyInputCustom func={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].ctaApplyInputs.push(e)\n                        }))} /> \n                    }\n                    \n                    { content.ctaApplyInputs.length > 0 && \n                    <>\n                        { content.ctaApplyInputs.map((item, index) => {\n                                return(\n                                    <div key={index}>\n                                        <ApplyInputCustom made value={item} func={e => action.setContents(produce(state.contents, draft => {\n                                            if(index === 0 ){\n                                                draft[state.secNum].ctaApplyInputs.shift()\n                                            }else{\n                                                draft[state.secNum].ctaApplyInputs.splice(index, index)\n                                            }\n                                        }))} />\n                                    </div>\n                                )\n                            })\n                        } \n                    </> }\n                    <div className=\"mid-command-light\"> 최대 5개의 신청 박스만 생성 가능합니다. \n                    </div>\n                    </>\n                )\n            default:\n                return(\n                    <> </>\n                )\n        }\n    }\n\n    \n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <>\n                    <ElementsTable elements={elements} />\n                    <Layout content={content} version='main' />\n                    <Contents content={content} />\n                    <OpenCloseCustom title=\"버튼\">\n                        <RadioCustom options={buttonAlignOptions} value={content.button.align} func={e => changeButtonAlignOption(e)} />\n                        <AddCtaButton content={content} num={1} />\n                        <AddGhostButton content={content} num={1} />\n                    </OpenCloseCustom>\n                    <AddAppButton content={content} />\n                    {/* <div className=\"left\">\n                        <div className=\"content__name\">\n                                    애니메이션\n                        </div>\n                        <div style={{paddingLeft:'7%'}}>\n                            <CustomSwitch value={content.animation.use} \n                                onChange={ e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].animation.use = !content.animation.use\n                                }))}/>\n                        </div>\n                    </div> */}\n                    </>\n                )\n\n            case 1:\n                // case 1은 템플릿 변경\n                return(\n                    <>\n                        <EditDesign content={content} />\n                    </>\n                )\n\n            default:\n                <></>\n        }\n    }\n\n    return(\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EditHeroSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditDetailSection.js",["866","867","868"],"import React, {useState, useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport { detailSectionTemplateList } from './InnerTemplates'\nimport EditDesign from './tools/EditDesign'\nimport './EditeTemplates.css'\nimport ElementsTable from './tools/ElementsTable'\nimport produce from 'immer';\nimport './EditContent.css'\n\nimport Layout from './tools/Layout'\nimport Contents from './tools/Contents'\n\nfunction EditDetailSection({content, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const onChangeButtonLink = (e) => {\n        let newContents = state.contents.map((item, index) => index === state.secNum ? {...item, button:{...item.button, link:e.currentTarget.value}} : item )\n        action.setContents(newContents);\n    }\n\n    const elements = [\n        {\n            title:'제목',\n            use:content.title.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].title.use = !content.title.use;\n            }))\n        },\n        {\n            title:'본문',\n            use:content.desc.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].desc.use = !content.desc.use;\n            }))\n        },\n        {\n            title:'콘텐츠',\n            use:content.contents.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].contents.use = !content.contents.use;\n            }))\n        },\n    ]\n\n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <div className=\"section-make__inner-container\">\n                        <ElementsTable elements={elements} />\n                        <Layout content={content} version='detail' />\n                        <Contents content={content}/>\n                    </div>\n                )\n\n            case 1:\n                // case 1은 템플릿 변경\n                return(\n                    <>\n                        <EditDesign content={content} />\n                    </>\n                )\n\n            default:\n                <></>\n        }\n    }\n\n    return(\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EditDetailSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditCtaSection.js",["869","870","871","872"],"import React, {useState, useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport ElementsTable from './tools/ElementsTable'\nimport EditDesign from './tools/EditDesign'\nimport produce from 'immer'\nimport ApplyInputCustom from '../tools/Custom/ApplyInputCustom'\nimport AddAppButton from './tools/AddAppButton'\nimport OpenCloseCustom from '../tools/Custom/OpenCloseCustom'\nimport RadioCustom from '../tools/Custom/RadioCustom'\nimport InputCustom from '../tools/Custom/InputCustom'\nimport EditNotice from './tools/EditNotice'\n\nimport AddCtaButton from './tools/AddCtaButton'\nimport AddGhostButton from './tools/AddGhostButton'\nimport Layout from './tools/Layout'\n\nconst alignOptions = [\n    {label:'왼쪽', value: 'start'},\n    {label:'중앙', value: 'center'}\n]\n\nfunction EditCtaSection({content, category, type}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const elements = [\n        {\n            title:'제목',\n            use:content.title.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].title.use = !content.title.use;\n            }))\n        },\n        {\n            title:'본문',\n            use:content.desc.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].desc.use = !content.desc.use;\n            }))\n        },\n        {\n            title:'버튼',\n            use:content.button.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].button.use = !content.button.use;\n            }))\n        },\n        {\n            title:'앱 다운로드',\n            use:content.appButton.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].appButton.use = !content.appButton.use;\n            }))\n        },\n        {\n            title:'안내사항',\n            use:content.caution.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].caution.use = !content.caution.use;\n            }))\n        },\n    ]\n    \n    const changeAlignOption = (e) => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].button.align = e\n        }))\n    }\n\n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <div>\n                        <ElementsTable elements={elements} />\n                        <Layout content={content} version=\"cta\"/>\n                        {\n                            !(type === 'appDownload') &&\n                            <OpenCloseCustom title=\"버튼\">\n                                <RadioCustom options={alignOptions} value={content.button.align} func={e => changeAlignOption(e)} />\n                                <AddCtaButton content={content} num={5}/>\n                                <AddGhostButton content={content} num={5}/>\n                            </OpenCloseCustom>\n                        }\n                        {\n                            !(type === 'apply') &&\n                            <AddAppButton content={content} />\n                        }\n                        <EditNotice content={content}/>\n                    </div>\n                )\n            case 1:\n                return(\n                    <div>\n                        <EditDesign content={content} />\n                    </div>\n                )\n        }\n    }\n\n    return (\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EditCtaSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditFeaturesSection.js",["873"],"import React, {useState, useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport ElementsTable from './tools/ElementsTable'\nimport RadioCustom from '../tools/Custom/RadioCustom'\nimport produce from 'immer';\nimport ColorCustom from '../tools/Custom/ColorCustom'\nimport OnOffCustom from '../tools/Custom/OnOffCustom'\nimport OpenCloseCustom from '../tools/Custom/OpenCloseCustom'\nimport EditDesign from './tools/EditDesign'\nimport LayoutRFG from './tools/LayoutRFG'\n\nconst featureOptions = [\n    { label: '아이콘', value: 'icon' },\n    { label: '이미지', value: 'image'},\n]\n\nconst shapeOptions = [\n    { label: '사각형', value: 0 },\n    { label: '라운드', value: 5 },\n    { label: '원형', value: 500 },\n]\nconst imageSizeOptions = [\n    { label: 'Small', value: 50 },\n    { label: 'Medium', value: 100 },\n    { label: 'Large', value: 150 },\n]\nconst imageSmallSizeOptions = [\n    { label: 'Small', value: 55 },\n    { label: 'Medium', value: 70 },\n    { label: 'Large', value: 90 },\n]\n\nfunction EditFeaturesSection({content, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const elements = [\n        {\n            title:'제목',\n            use:content.title.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].title.use = !content.title.use;\n            }))\n        },\n        {\n            title:'본문',\n            use:content.desc.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].desc.use = !content.desc.use;\n            }))\n        },\n        {\n            title:'이미지',\n            use:content.element.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].element.use = !content.element.use;\n            }))\n        },\n        {\n            title:'설명글',\n            use:content.elementText.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].elementText.use = !content.elementText.use;\n            }))\n        },\n    ]\n\n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <div>\n                        <ElementsTable elements={elements} />\n                        <LayoutRFG content={content} />\n                        <OpenCloseCustom title=\"이미지\">\n                            <RadioCustom text=\"특징\" value={content.element.type} options={featureOptions} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].element.type = e;\n                            }))} />\n                            {\n                                content.element.type === 'icon' && \n                                <>\n                                <ColorCustom text=\"색상\" value={content.element.backgroundColor} func={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].element.backgroundColor = e;\n                                }))} />\n                                <RadioCustom text=\"프레임\" button value={content.element.iconBorder} options={shapeOptions} func={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].element.iconBorder = e;\n                                }))} />\n                                <RadioCustom text=\"크기\" value={content.element.size} options={imageSmallSizeOptions} func={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].element.size = e;\n                                }))} />\n                                </>\n                            }\n                            {\n                                content.element.type === 'image' &&\n                                <>\n                                <RadioCustom text=\"프레임\" button value={content.element.imageBorder} options={shapeOptions} func={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].element.imageBorder = e;\n                                }))} />\n                                <RadioCustom text=\"크기\" value={content.element.size} options={imageSizeOptions} func={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].element.size = e;\n                                }))} />\n                                </>\n                            }\n                        </OpenCloseCustom>\n                        <OpenCloseCustom title=\"설명글\">\n                            <ColorCustom text=\"색상\" value={content.elementText.color} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].elementText.color = e;\n                            }))} />\n                            <OnOffCustom text=\"특징 제목\" value={content.elementText.titleUse} func={(e) => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].elementText.titleUse = !content.elementText.titleUse;\n                            }))} />\n                            <OnOffCustom text=\"특징 본문\" value={content.elementText.descUse} func={(e) => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].elementText.descUse = !content.elementText.descUse;\n                            }))} />\n                        </OpenCloseCustom>\n                    </div>\n                )\n\n            case 1:\n                // case 1은 템플릿 변경\n                return(\n                    <div>\n                        <EditDesign content={content} />\n                    </div>\n                )\n\n            default:\n                <></>\n        }\n    }\n\n\n    return(\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EditFeaturesSection","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditApplySection.js",["874","875","876"],"import React, {useState, useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport EditDesign from './tools/EditDesign'\nimport ElementsTable from './tools/ElementsTable'\nimport produce from 'immer'\nimport OpenCloseCustom from '../tools/Custom/OpenCloseCustom'\nimport ApplyInputCustom from '../tools/Custom/ApplyInputCustom'\nimport EditNotice from './tools/EditNotice'\n\nimport AddCtaButton from './tools/AddCtaButton'\nimport AddGhostButton from './tools/AddGhostButton'\nimport Layout from './tools/Layout'\n\nfunction EditApplySection({content, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const elements = [\n        {\n            title:'제목',\n            use:content.title.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].title.use = !content.title.use;\n            }))\n        },\n        {\n            title:'본문',\n            use:content.desc.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].desc.use = !content.desc.use;\n            }))\n        },\n        {\n            title:'신청 버튼',\n            use:content.applyButton.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].applyButton.use = !content.applyButton.use;\n            }))\n        },\n        {\n            title:'유의 사항 안내',\n            use:content.caution.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].caution.use = !content.caution.use;\n            }))\n        },\n    ]\n\n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <div>\n                        <ElementsTable elements={elements} />\n                        <Layout content={content} version='apply' />\n                        <OpenCloseCustom title=\"신청 버튼\">\n                            <AddCtaButton content={content} num={5}/>\n                            <AddGhostButton content={content} num={5}/>\n                        </OpenCloseCustom>\n                        <EditNotice content={content}/>\n                    </div>\n                )\n            case 1:\n                return(\n                    <div>\n                        <EditDesign content={content} />\n                    </div>\n                )\n        }\n    }\n\n    return (\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EditApplySection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Footer/FTemplate.js",["877","878"],"import React,{useContext} from 'react'\nimport produce from 'immer'\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport {FacebookCircle, FacebookSquare, Youtube, Twitter, InstagramAlt} from '@styled-icons/boxicons-logos';\nimport { Mail } from '@styled-icons/entypo';\nimport { Naver, Notion, Kakaotalk } from '@styled-icons/simple-icons';\nimport TextareaAutosize from 'react-textarea-autosize';\n\nfunction FTemplate({foot, setFoot, history }) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const returnLayout = {\n        flexDirection: `${foot.layout === 1 ? 'row' : foot.layout === 2 ? 'column-reverse' : foot.layout === 3 ? 'column' : 'column-reverse'}`,\n    }\n\n    const onChangeText = (data) => {\n        setFoot(produce(foot, draft => {\n            draft.text.text = data;\n        }));\n    }\n\n    const returnIcons = () => {\n        return(\n            <>\n        {foot.icon.facebook !== '' && \n                    <FacebookCircle color={foot.icon.color} className=\"footer-icon\" \n                        onClick={()=>{\n                            window.open(\n                                foot.icon.facebook,\n                                '_blank' // <- This is what makes it open in a new window.\n                            );\n                        }}\n                    />\n        }\n        {foot.icon.instagram !== '' && \n                    <InstagramAlt color={foot.icon.color} className=\"footer-icon\" \n                    onClick={()=>{\n                        window.open(\n                            foot.icon.instagram,\n                            '_blank' // <- This is what makes it open in a new window.\n                        );\n                    }}\n                    />\n        }\n        {foot.icon.naver !== '' && \n                    <Naver color={foot.icon.color} className=\"footer-icon\" \n                    onClick={()=>{\n                        window.open(\n                            foot.icon.naver,\n                            '_blank' // <- This is what makes it open in a new window.\n                        );\n                    }}\n                    />\n        }\n        {foot.icon.notion !== '' && \n                    <Notion color={foot.icon.color} className=\"footer-icon\" \n                    onClick={()=>{\n                        window.open(\n                            foot.icon.notion,\n                            '_blank' // <- This is what makes it open in a new window.\n                        );\n                    }}\n                    />\n        }\n        {foot.icon.mail !== '' && \n                    <Mail color={foot.icon.color} className=\"footer-icon\" \n                    onClick={()=>{\n                        window.open(\n                            foot.icon.mail,\n                            '_blank' // <- This is what makes it open in a new window.\n                        );\n                    }}\n                    />\n        }\n        {foot.icon.kakaotalk !== '' && \n                    <Kakaotalk color={foot.icon.color} className=\"footer-icon\" \n                    onClick={()=>{\n                        window.open(\n                            foot.icon.kakaotalk,\n                            '_blank' // <- This is what makes it open in a new window.\n                        );\n                    }}\n                    />\n        }\n        {foot.icon.twitter !== '' && \n                    <Twitter color={foot.icon.color} className=\"footer-icon\" \n                    onClick={()=>{\n                        window.open(\n                            foot.icon.twitter,\n                            '_blank' // <- This is what makes it open in a new window.\n                        );\n                    }}\n                    />\n        }\n        {foot.icon.youtube !== '' && \n                    <Youtube color={foot.icon.color} className=\"footer-icon\" \n                    onClick={()=>{\n                        window.open(\n                            foot.icon.youtube,\n                            '_blank' // <- This is what makes it open in a new window.\n                        );\n                    }}\n                    />\n        }\n            </>\n        )\n    }\n    return (\n        <>\n            <div className=\"footer-section\" style={{fontSize:'0.5em'}}>\n                <div\n                    style={{display:'flex', ...returnLayout}}\n                >\n                    {foot.text.use && \n                        <TextareaAutosize\n                            // defaultValue={new Array(15).join('Line.')}\n                            className=\"footer-text-input\"\n                            value={foot.text.text}\n                            style={{\n                                fontFamily:`${state.setting.font}`, \n                                color: `${foot.text.color}`,\n                                fontSize: `${foot.text.size}px`,\n                                textAlign:`${foot.text.align}`\n                            }}\n                            placeholder='회사 또는 팀 정보를 입력하세요.'\n                            onChange={(e) => {\n                                onChangeText(e.currentTarget.value);\n                            }}\n                        /> \n                    }\n                    {foot.icon.use && foot.layout === 1 && \n                        <div className=\"icon-box\" style={{flexDirection: 'column', justifyContent: 'center'}}>\n                        {returnIcons()}\n                        </div>\n                    }\n                    {foot.icon.use && foot.layout === 2 && \n                        <div className=\"icon-box\" style={{flexDirection: 'row', justifyContent: 'start'}}>\n                        {returnIcons()}\n                        </div>\n                    }\n                    {foot.icon.use && foot.layout === 3 && \n                        <div className=\"icon-box\" style={{flexDirection: 'row', justifyContent: 'start'}}>\n                        {returnIcons()}\n                        </div>\n                    }\n                </div>\n                {foot.copyright.use && \n                    <div \n                        className='copyright-box'\n                        style={{\n                            fontFamily:`${state.setting.font}`\n                        }}>\n                        2022 Copyright © {foot.copyright.text}\n                    </div>\n                }\n            </div>\n        </>\n    )\n}\n\nexport default FTemplate\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/func/FuncContentImg.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/func/FuncTopBar.js",["879","880","881","882"],"import React, {useContext} from 'react'\nimport {MyContext} from '../../../../../pages/Make/MakePageV2'\nimport { Template } from '@styled-icons/heroicons-outline'\nimport { DesignServices } from '@styled-icons/material-outlined'\nimport './EditTopBar.css'\n\nfunction FuncTopBar({category, setCategory}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    return (\n        <div className=\"edit__top-bar\">\n            <div className={category === 1 ? 'edit-radios' : 'edit-radios er-clicked'} onClick={() => setCategory(0)}>\n                기본\n            </div>\n            <div className={category === 0 ? 'edit-radios' : 'edit-radios er-clicked'} onClick={() => setCategory(1)}>\n                디자인\n            </div>\n        </div>\n    )\n}\n\nexport default FuncTopBar\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Modal/CheckModal.js",["883"],"import React, {useState} from 'react'\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\nimport { Input } from 'antd';\nimport Checkbox from '@mui/material/Checkbox';\nimport {dbService} from '../../../tools/fbase'\n\nconst label = { inputProps: { 'aria-label': 'Checkbox demo' } };\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Backdrop = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: '600px',\n  height: '500px',\n  bgcolor: 'rgba(255,255,255,1)',\n  borderRadius: '5px',\n  p: 2,\n  px: 4,\n  pb: 3,\n};\n\nfunction CheckModal({ch, setCh, onSubmit2}) {\n    const [myYes, setMyYes] = useState(false);\n    const [email, setEmail] = useState(\"\");\n    const [feedback1, setFeedback1] = useState(\"\");\n\n    const submitDone = () => {\n        if(!myYes){\n            alert(\"상기의 사항에 대해서 동의한 경우에만 신청이 진행될 수 있습니다!\")\n            return;\n        }else if(email.length < 3){\n            alert(\"이메일 양식에 맞게 작성해주시기 바랍니다.\")\n            return;\n        }else{\n            // 피드백 입력 받아서 저장. 입력한 내용이랑 현재 유저의 이메일, 현재 제작한 랜딩페이지의 아이디\n            dbService.collection('make-feedback').add({\n                feedback1:feedback1\n            })\n\n            onSubmit2();\n            setCh(!ch);\n        }\n    }\n\n    return (\n        <div>\n            <StyledModal\n                aria-labelledby=\"unstyled-modal-title\"\n                aria-describedby=\"unstyled-modal-description\"\n                open={ch}\n                onClose={() => setCh(!ch)}\n                BackdropComponent={Backdrop}\n            >\n                <Box sx={style}>\n                    <div className=\"check-container\">\n                        <div className=\"check-title\">\n                        안내창\n                        </div>\n\n                        <div className=\"check-desc\">\n                            이메일을 기입하고 체크박스 체크 후 ‘제출하기’를 누르면 <br/>\n                            12시간 내에 완성된 페이지와 데이터 분석 페이지를 메일로 보내드립니다. <br/>\n                            페이지는 Surfee 베타 서비스 기간인 12월00일까지 무료로 제공되며 <br/>\n                            00일부터 디벨롭 과정을 거친 후 빠른 시일 내에 다시 돌아오겠습니다!\n                        </div>\n\n                        <div className=\"check-form-container\">\n                            <div style={{display:'flex', flexDirection:'column'}}>\n                                <span>이메일</span>\n                                <Input style={{width:'60%'}} tyle=\"text\" value={email} onChange={e => setEmail(e.currentTarget.value)}/>\n                            </div>\n                            <div style={{display:'flex', flexDirection:'column'}}>\n                                <span>피드백 질문 1</span>\n                                <Input style={{width:'60%'}} tyle=\"text\" value={feedback1} onChange={e => setFeedback1(e.currentTarget.value)}/>\n                            </div>\n                            <div style={{marginTop:'20px', display:'flex', flexDirection:'row', alignItems:'center'}}>\n                                <Checkbox color=\"secondary\" type=\"checkbox\" value={myYes} onChange={e => setMyYes(!myYes)}/>\n                                <span style={{marginLeft:'10px'}}> 개인정보 수집/이용에 동의합니다.</span>\n                            </div>\n                        </div>\n                        <div>\n                            <button className=\"check-button\" onClick={e => submitDone()}>제출하기</button>\n                        </div>\n                    </div>\n                </Box>\n            </StyledModal>\n        </div>\n    )\n}\n\nexport default CheckModal\n",["884","885"],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/VideoSection.js",["886","887","888"],"import React, {useContext, useState} from 'react'\n\nimport TitleDesc from './components/TitleDesc'\nimport ImageOrSlide from './components/ImageOrSlide'\nimport TextAuto from './components/TextAuto'\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport AnimationDiv from './components/AnimationDiv'\n\nfunction VideoSection({content, setting}) {\n    const returnLayout = {\n        flexDirection:`${'column'}`,\n        // paddingLeft:`${content.layout === 1 ? '30px' : content.layout === 2 ? '0px' : '30px'}`,\n        // paddingRight:`${content.layout === 1 ? '0px' : content.layout === 2 ? '30px' : '30px'}`,\n    }\n    \n    return (\n        <div style={{ width:'100%', height:'100%' }}>\n            <AnimationDiv content={content} returnLayout={returnLayout}>\n                <div className=\"text__container\">\n                    <TitleDesc setting={setting} content={content} />\n                </div>\n                <div className=\"image__container\">\n                    <ImageOrSlide content={content} />\n                </div>\n                {\n                content.explanation.use &&\n                <div style={{width:'100%'}}>\n                    <TextAuto small  className=\"text-input\" \n                        value={content.explanation.text} \n                        color={content.explanation.color}\n                        align={content.explanation.align}\n                    />\n                </div>\n                }\n            </AnimationDiv>\n        </div>\n    )\n}\n\nexport default VideoSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/SelectCustom.js",["889"],"import React, {useState, useEffect} from 'react'\nimport {ChevronDown} from '@styled-icons/bootstrap';\nimport Popover from '@mui/material/Popover';\nimport './SelectCustom.css'\n\nfunction SelectCustom({options, onChange, value}) {\n    const [anchorEl, setAnchorEl] = useState(null);\n  \n    const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n  \n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    return (\n        <div>\n            <div className=\"select-open-button center-row\" aria-describedby={id} variant=\"contained\" onClick={handleClick}>\n                <div className=\"select-button__content\" style={{paddingLeft:'15px'}}>\n                    {options.filter(doc => doc.value === value)[0].label}\n                </div>\n                <div className=\"select-button__content\" style={{justifyContent:'end', paddingRight:'15px'}}><ChevronDown size=\"17\" /></div>\n            </div>\n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n            >\n                <div className=\"so__container\">\n                    {options.map((item, index) => {\n                        return(\n                            <div className=\"select-hover\" onClick={() => {onChange(item.value); setAnchorEl('')}}\n                                style={{ fontFamily:`${item.value}`, borderBottomLeftRadius:`${index === options.length -1 ? '5px' : '0px'}`,borderBottomRightRadius:`${index === options.length ? '5px' : '0px'}`}}\n                            >\n                                {item.label}\n                            </div>\n                        )\n                    })}\n                </div>\n            </Popover>\n        </div>\n    )\n}\n\nexport default SelectCustom\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/OpenCloseCustom.js",["890","891"],"import React, {useState} from 'react'\nimport { styled } from '@mui/material/styles';\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\nimport MuiAccordion from '@mui/material/Accordion';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { Tooltip, ChakraProvider } from '@chakra-ui/react'\nimport { InformationCircle } from '@styled-icons/ionicons-outline';\nimport './OpenCloseCustom.css'\n// import Accordion from '@mui/material/Accordion';\n\nconst Accordion = styled((props) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n    border: '1px solid rgba(0,0,0,0.2)',\n    width:'90%',\n    borderRadius:10,\n    backgroundColor:\n      theme.palette.mode === 'dark'\n        ? 'rgba(255, 255, 255, .05)'\n        : 'rgba(0, 0, 0, 0)',\n}));\n\nconst AccordionSummary = styled((props) => (\n  <MuiAccordionSummary\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\n    {...props}\n  />\n))(({ theme }) => ({\n  flexDirection: 'row-reverse',\n  '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n    transform: 'rotate(180deg)',\n  },\n  '& .MuiAccordionSummary-content': {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\n  padding: theme.spacing(0.3),\n}));\n\n// 아래는 열고 닫히는 애니메이션 효과까지 적용\nexport const AccordionCustom = (props) => {\n  return (\n    <div className=\"centera\">\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n            <div>\n                {props.title}\n            </div>\n        </AccordionSummary>\n        <AccordionDetails>\n            <div>\n                {props.children}\n            </div>\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n}\n\nconst CustomSwitch = ({use, onChange}) => {\n  return(\n    <div className={use ? 'custom-switch' : 'custom-switch unclicked'} onClick={onChange} style={{marginLeft: '13px'}}>\n      <div className=\"custom-switch-thumb\" style={{left : `${use ? '32px' : '2px'}`}}></div>\n    </div>\n  )\n}\n\nconst OpenCloseCustom = (props) => {\n  /**\n   * title, tooltip, preseen 설정 가능\n   */\n  const [open, setOpen] = useState(false)\n\n  return (\n    <div className=\"one-element\">\n      <div className=\"accordion\">\n        <div className=\"accordion__header\" onClick={() => setOpen(!open)}>\n          <div className=\"edit-element\">\n            <ChakraProvider>\n            <div className=\"accordion__title\">\n              <div className=\"title_text\">\n                {props.title}\n              </div> \n              {\n                props.subtext && \n                <div className=\"title_subtext\">\n                  {props.subtext}\n                </div> \n              }\n              {\n                props.tooltip && \n                  <Tooltip hasArrow arrowSize={10} label={props.tooltip} placement='top' fontSize='13'>\n                    <InformationCircle size=\"16\" style={{color:'#C4CACF', zIndex:'20', marginLeft:'6px'}}/>\n                  </Tooltip>\n              }\n            </div>\n            </ChakraProvider>\n            <div className=\"centera\" style={{justifyContent: 'end'}}>\n              { open ? <ExpandMoreIcon style={{transform:'rotate(180deg)'}} /> : <ExpandMoreIcon />}\n            </div>\n          </div>\n          { props.preseen && \n            <div>\n              {props.preseen}\n            </div> }\n        </div>\n        <div className=\"accordion__body\" style={{display:`${open ? 'flex' : 'none'}`}}>\n          {props.children}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OpenCloseCustom\n\n\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/MockupSection.js",["892","893","894"],"import React, {useContext, useState} from 'react'\nimport { motion } from 'framer-motion';\nimport {produce} from 'immer'\nimport TitleDesc from './components/TitleDesc'\n\nfunction MockupSection({content, setting}) {\n    return (\n        <motion.div className=\"template\"\n            data-aos={content.animation.type} aos-duration=\"2000\">\n\n            <TitleDesc setting={setting} content={content} />\n\n        </motion.div>\n    )\n}\n\nexport default MockupSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/AnimationCustom.js",["895","896","897","898"],"import React from 'react'\nimport RiseW from '../../../../../tools/img/animationIcon/riseUpW.png'\nimport RiseG from '../../../../../tools/img/animationIcon/riseUpG.png'\nimport FadeW from '../../../../../tools/img/animationIcon/fadeInW.png'\nimport FadeG from '../../../../../tools/img/animationIcon/fadeInG.png'\n\nfunction EditAnimation({options, value, onChange}) {\n    const NONE = 'none'\n    const FADEUP = 'fade-up'\n    const ZOOMIN = 'zoom-in'\n\n    return (\n        <div>\n            <div className=\"radio-container\">\n                <div className={value === NONE ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => onChange(NONE)}>\n                    <div className=\"radio-shape round\">\n            \n                    </div>\n                    <div className=\"radio-shape-text\">\n                        없음\n                    </div>\n                </div>\n\n                <div className={value === FADEUP ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => onChange(FADEUP)}>\n                    {value === FADEUP ? (\n                    <>\n                        <img src={RiseW} />\n                        <div className=\"radio-shape-text\">\n                            떠오르기\n                        </div>\n                        <div className=\"radio-shape-subtext\">\n                            0.8초\n                        </div>\n                    </>\n                    ):(\n                        <>\n                        <img src={RiseG} />\n                        <div className=\"radio-shape-text\">\n                            떠오르기\n                        </div>\n                        <div className=\"radio-shape-subtext\">\n                            0.8초\n                        </div>\n                        </>\n                    )}\n                </div>\n\n                <div className={value === ZOOMIN ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => onChange(ZOOMIN)}>\n                    {value === ZOOMIN ? (\n                    <>\n                        <img src={FadeW} />\n                        <div className=\"radio-shape-text\">\n                            페이드 인                           \n                        </div>\n                        <div className=\"radio-shape-subtext\">\n                            0.8초\n                        </div>\n                    </>\n                    ):(\n                        <>\n                        <img src={FadeG} />\n                        <div className=\"radio-shape-text\">\n                            페이드 인\n                        </div>\n                        <div className=\"radio-shape-subtext\">\n                            0.8초\n                        </div>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst AnimationCustom = ({options, value, func}) => {\n    return(\n            <EditAnimation \n                options={options}\n                onChange={e => {func(e)}}\n                value={value}\n            />\n\n    )\n}\n\nexport default AnimationCustom\n\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/OnOffCustom.js",["899","900"],"import React from 'react'\nimport { styled } from '@mui/material/styles';\nimport Switch from '@mui/material/Switch';\nimport './OnOffCustom.css'\n\nexport const CustomSwitch = ({text, value, onChange}) => {\n  return(\n    <div className=\"switch-element\" >\n      <div className=\"switch-text\">\n          {text}\n      </div>\n      <div>\n        <div className={value ? 'custom-switch' : 'custom-switch unclicked'} onClick={onChange}>\n          <div className=\"custom-switch-thumb\" style={{left : `${value ? '32px' : '2px'}`}}></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport const CustomSwitch2 = ({text, value, onChange}) => {\n  return(\n    <div className={value ? 'custom-switch' : 'custom-switch unclicked'} onClick={onChange}>\n      <div className=\"custom-switch-thumb\" style={{left : `${value ? '32px' : '2px'}`}}></div>\n    </div>\n  )\n}\n\nfunction OnOffCustom({text, value, func}) {\n    return (\n      <div className=\"edit-element\">\n        <div className=\"edit-element__left\">\n            {text}\n        </div>\n        <div className=\"edit-element__right\">\n            <CustomSwitch2 value={value} onChange={e => func(e)} checkedChildren=\"ON\" unCheckedChildren=\"OFF\" defaultChecked />\n        </div>\n      </div>\n    )\n}\n\nexport default OnOffCustom\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/InputCustom.js",["901","902"],"import React from 'react'\nimport {Link45deg} from '@styled-icons/bootstrap'\nimport './InputCustom.css'\n\nfunction EditInput({value, func, placeholder, noKorean}) {\n    return (\n        <div className=\"edit-element\" style={{justifyContent:'start'}}>\n            {/* <div>\n                <Link45deg size=\"25\" />\n            </div> */}\n            <div className=\"centera\">\n                <input className=\"edit-input\" placeholder={placeholder} value={value} onChange={e => func(e.currentTarget.value)} />\n            </div>\n        </div>\n    )\n}\n\nexport function InputCustom({value, func, placeholder, text, noKorean}) {\n    const isNotNumber = (v) => {\n        const regExp = /[a-zA-Z0-9]/g; \n        return regExp.test(v);\n    }\n\n    const onChangeHandler = (e) => {\n        if(noKorean){\n            if (isNotNumber(e.nativeEvent.data)){ \n                func(e.currentTarget.value)\n            }else{\n                e.preventDefault(); \n                return null; \n            }\n        }else{\n            func(e.currentTarget.value)\n        }\n    }\n\n    return (\n        <div className=\"edit-element\" style={{justifyContent:'start', flexDirection:'column'}}>\n            {\n                text &&\n                <div className=\"centera\" style={{justifyContent:'start'}}>\n                    {text}\n                </div>\n            }\n            <div className=\"input-centera\" style={{marginTop:`${text ? '12px' : '0px'}`, justifyContent:'start'}}>\n                <input className=\"edit-input\" placeholder={placeholder} value={value} onChange={e => onChangeHandler(e)} />\n            </div>\n        </div>\n    )\n}\n\nexport default InputCustom\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/SingleColorCustom.js",["903","904","905","906","907"],"import React, {useContext, useState, useRef} from 'react'\nimport { MakeContext } from '../../NewSectionMake'\nimport { MyContext } from '../../../../../pages/Make/MakePageV2'\nimport produce from 'immer'\nimport { ColorPicker, useColor } from \"react-color-palette\";\nimport \"react-color-palette/lib/css/styles.css\";\nimport './ColorCustom.css'\nimport {\n    ChakraProvider,\n    Popover,\n    PopoverTrigger,\n    PopoverContent,\n    PopoverHeader,\n    PopoverBody,\n    PopoverFooter,\n    PopoverArrow,\n  } from '@chakra-ui/react'\n\nexport function EditColor({onChange, value}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const {stateC, actionC} = useContext(MakeContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const [color, setColor] = useColor(\"hex\", value);\n    const [open, setOpen] = useState(null);\n    const popover = useRef();\n    const handleClick = () => {\n        setOpen(!open);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <ChakraProvider>\n        <div className=\"center-row\" style={{justifyContent: \"start\"}}>\n            <Popover\n                    placement='right'\n                    closeOnBlur={false}\n                    isOpen={open}\n                    onClose={() => {\n                        handleClose();\n                        if(stateC.usedColors.includes(value)){\n                            return\n                        }else{\n                            if(stateC.usedColors.length > 5){\n                                actionC.setUsedColors(produce(stateC.usedColors, draft => {\n                                    draft.shift()\n                                    draft.push(value)\n                                }))\n                            }else{\n                                actionC.setUsedColors(produce(stateC.usedColors, draft => {\n                                    draft.push(value)\n                                }))\n                            }\n                        }\n                    }}>\n                <PopoverTrigger>\n                    <div className=\"color-button\" style={{backgroundColor:`${value}`, color:`${value === '#ffffff' ? '#555C67' : 'white'}`}} onClick={handleClick}>    \n                        {value}\n                    </div>\n                </PopoverTrigger>\n                <PopoverContent>\n                    <PopoverArrow />\n                    \n                    <PopoverBody>\n                        <div className=\"center-column\">\n                            <ColorPicker\n                                width={300}\n                                height={150}\n                                color={color}\n                                onChange={(e) => {\n                                    setColor(e);\n                                    onChange(e.hex);\n                                }}\n                                hideHSV\n                                alpha\n                            />\n                            <div className=\"center-row\">\n                                {stateC.usedColors.map((item, index) => {\n                                    return(\n                                        <div onClick={() => {onChange(item); setColor({...color, hex:item})}} key={index}>\n                                            <div className=\"recent-color-button\" style={{backgroundColor:`${item}`}}>\n                                                \n                                            </div>\n                                            {/* <div className=\"recent-color-text\">\n                                                {item}\n                                            </div> */}\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        </div>\n                    </PopoverBody>\n                </PopoverContent>\n                </Popover>\n        </div>\n        </ChakraProvider>\n    )\n}\n\nconst SingleColorCustom = ({text, value, func}) => {\n    return(\n        <div className=\"edit-element\">\n            <div className=\"edit-element__one\" style={{flexDirection: 'column'}}>\n                <div className=\"edit-element__left\">{text}</div>\n                <div className=\"edit-element__bottom\">\n                    <EditColor onChange={(e) => func(e)} value={value || 'white'} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SingleColorCustom\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/TextSection.js",["908","909","910"],"import React, {useContext, useState} from 'react'\nimport { motion } from 'framer-motion';\nimport {produce} from 'immer'\nimport TitleDesc from './components/TitleDesc'\n\nfunction TextSection({content, setting}) {\n    return (\n        <motion.div className=\"centera\"\n            data-aos={content.animation.type} aos-duration=\"2000\">\n\n            <TitleDesc setting={setting} content={content} />\n\n        </motion.div>\n    )\n}\n\nexport default TextSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/RadioCustom.js",["911","912","913","914","915","916","917","918","919","920","921","922","923","924","925","926","927","928","929","930","931","932","933","934","935","936","937","938","939","940","941"],"import React from 'react'\nimport '../custom.css'\nimport Blay1G from '../../../../../tools/img/layoutMainDetail/base1G.png'\nimport Blay1W from '../../../../../tools/img/layoutMainDetail/base1W.png'\nimport Blay2G from '../../../../../tools/img/layoutMainDetail/base2G.png'\nimport Blay2W from '../../../../../tools/img/layoutMainDetail/base2W.png'\nimport Blay3G from '../../../../../tools/img/layoutMainDetail/base3G.png'\nimport Blay3W from '../../../../../tools/img/layoutMainDetail/base3W.png'\nimport Blay4G from '../../../../../tools/img/layoutMainDetail/base4G.png'\nimport Blay4W from '../../../../../tools/img/layoutMainDetail/base4W.png'\nimport Flay11 from '../../../../../tools/img/layoutFooter/lay1-1.png'\nimport Flay12 from '../../../../../tools/img/layoutFooter/lay1-2.png'\nimport Flay21 from '../../../../../tools/img/layoutFooter/lay2-1.png'\nimport Flay22 from '../../../../../tools/img/layoutFooter/lay2-2.png'\nimport Flay31 from '../../../../../tools/img/layoutFooter/lay3-1.png'\nimport Flay32 from '../../../../../tools/img/layoutFooter/lay3-2.png'\nimport Clay11 from '../../../../../tools/img/layoutCta/layout1W.png'\nimport Clay12 from '../../../../../tools/img/layoutCta/layout1G.png'\nimport Clay21 from '../../../../../tools/img/layoutCta/layout2W.png'\nimport Clay22 from '../../../../../tools/img/layoutCta/layout2G.png'\nimport Clay31 from '../../../../../tools/img/layoutCta/layout3W.png'\nimport Clay32 from '../../../../../tools/img/layoutCta/layout3G.png'\nimport Tlay1G from '../../../../../tools/img/layoutText/text1G.png'\nimport Tlay1W from '../../../../../tools/img/layoutText/text1W.png'\nimport Tlay23G from '../../../../../tools/img/layoutText/text23G.png'\nimport Tlay23W from '../../../../../tools/img/layoutText/text23W.png'\n\nexport function EditRadio({options, value, onChange}) {\n    return (\n        <div className=\"radio-container\">\n            {options.map((item, index) => {\n                return(\n                    <div className={value === item.value ? 'radio-element' : 'radio-element r-unclicked'} onClick={() => onChange(item.value)} key={index}>\n                        {item.label}\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport function EditRadioLayout({options, value, onChange, version}){\n    switch(version){\n        case 'main':\n            return(\n                <div className=\"radio-container\">\n                    <div className={value === 1 ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => onChange(1)}>\n                        {value === 1 ? (\n                            <img src={Blay1W} />\n                        ):(\n                            <img src={Blay1G} />\n                        )}\n                    </div>\n                    <div className={value === 2 ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => onChange(2)}>\n                        {value === 2 ? (\n                            <img src={Blay2W} />\n                        ):(\n                            <img src={Blay2G} />\n                        )}\n                    </div>\n                    <div className={value === 3 ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => onChange(3)}>\n                    {value === 3 ? (\n                            <img src={Blay3W} />\n                        ):(\n                            <img src={Blay3G} />\n                        )}\n                    </div>\n                    <div className={value === 4 ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => onChange(4)}>\n                    {value === 4 ? (\n                            <img src={Blay4W} />\n                        ):(\n                            <img src={Blay4G} />\n                        )}\n                    </div>\n                </div>\n            )\n        case 'cta': \n            return(\n                <div className=\"radio-container\">\n                    <div className={value === 1 ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => onChange(1)}>\n                        {value === 1 ? (\n                            <img src={Clay31} />\n                        ):(\n                            <img src={Clay32} />\n                        )}\n                    </div>\n                    <div className={value === 2 ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => onChange(2)}>\n                        {value === 2 ? (\n                            <img src={Clay21} />\n                        ):(\n                            <img src={Clay22} />\n                        )}\n                    </div>\n                    <div className={value === 3 ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => onChange(3)}>\n                    {value === 3 ? (\n                            <img src={Clay11} />\n                        ):(\n                            <img src={Clay12} />\n                        )}\n                    </div>\n                </div>\n            )\n        case 'two': \n            return(\n                <div className=\"radio-container\">\n                    <div className={value === 3 ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => onChange(3)}>\n                    {value === 3 ? (\n                            <img src={Blay3W} />\n                        ):(\n                            <img src={Blay3G} />\n                        )}\n                    </div>\n                    <div className={value === 4 ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => onChange(4)}>\n                    {value === 4 ? (\n                            <img src={Blay4W} />\n                        ):(\n                            <img src={Blay4G} />\n                        )}\n                    </div>\n                </div>\n            )\n        case 'text':\n            return (\n                <div className=\"radio-container\">\n                    <div className={value === 1 ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => onChange(1)}>\n                        {value === 1 ? (\n                            <img src={Tlay1W} />\n                        ):(\n                            <img src={Tlay1G} />\n                        )}\n                    </div>\n                    <div className={value === 2 ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => onChange(2)}>\n                        {value === 2 ? (\n                            <img className='text-layout2' src={Tlay23W} />\n                        ):(\n                            <img className='text-layout2' src={Tlay23G} />\n                        )}\n                    </div>\n                    <div className={value === 3 ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => onChange(3)}>\n                    {value === 3 ? (\n                            <img className='text-layout3' src={Tlay23W} />\n                        ):(\n                            <img className='text-layout3' src={Tlay23G} />\n                        )}\n                    </div>\n                </div>\n            )\n        case 'footer':\n            return (\n                <div className=\"radio-container\">\n                    <div className={value === 1 ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => onChange(1)}>\n                        {value === 1 ? (\n                            <img src={Flay12} />\n                        ):(\n                            <img src={Flay11} />\n                        )}\n                    </div>\n                    <div className={value === 2 ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => onChange(2)}>\n                        {value === 2 ? (\n                            <img src={Flay22} />\n                        ):(\n                            <img src={Flay21} />\n                        )}\n                    </div>\n                    <div className={value === 3 ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => onChange(3)}>\n                    {value === 3 ? (\n                            <img src={Flay32} />\n                        ):(\n                            <img src={Flay31} />\n                        )}\n                    </div>\n                </div>\n            )\n    }\n}\n\nexport function EditRadioButtom({options, value, onChange}) {\n    const ROUNDBORDER = 5;\n    const CIRCLEBORDER = 500;\n\n    return (\n        <div className=\"radio-container\">\n            <div className={value === 0 ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => onChange(0)}>\n                <div className=\"radio-shape box\">\n\n                </div>\n                <div className=\"radio-shape-text\">\n                    사각형\n                </div>\n            </div>\n            <div className={value === ROUNDBORDER ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => onChange(ROUNDBORDER)}>\n                <div className=\"radio-shape round\">\n\n                </div>\n                <div className=\"radio-shape-text\">\n                    라운드\n                </div>\n            </div>\n            <div className={value === CIRCLEBORDER ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => onChange(CIRCLEBORDER)}>\n                <div className=\"radio-shape circle\">\n\n                </div>\n                <div className=\"radio-shape-text\">\n                    원형\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst RadioCustom = ({text, options, value, func, button, layout, version}) => {\n    if (button === true){\n        return(\n            <div className=\"edit-element\">\n            <div className=\"edit-element__one\" style={{flexDirection: 'column'}}>\n                {text ? \n                    <div className=\"edit-element__left\">{text}</div> \n                    : \n                    <div className=\"edit-element__left\">{text}</div> \n                }\n                <div className=\"radio-container\">\n                    <EditRadioButtom\n                        options={options}\n                        onChange={e => {func(e)}}\n                        value={value}\n                        />\n                </div>\n            </div>\n        </div>\n        )\n    }else{\n        if (layout === 'on'){\n            return(\n                <>\n                 <div className=\"edit-element\">\n                    <div className=\"edit-element__one\" style={{flexDirection: 'column'}}>\n                        <div className=\"radio-container\">\n                            <EditRadioLayout \n                                options={options}\n                                onChange={e => {func(e)}}\n                                value={value}\n                                version={version}\n                            />\n                        </div>\n                    </div>\n                </div>\n                </>\n            )\n        }else{\n            return(\n            <div className=\"edit-element\">\n                <div className=\"edit-element__one\" style={{flexDirection: 'column'}}>\n                    {text ? \n                        <div className=\"edit-element__left\">{text}</div> \n                        : \n                        <div className=\"edit-element__left\">{text}</div> \n                    }\n                    <div className=\"radio-container\">\n                        <EditRadio \n                            options={options}\n                            onChange={e => {func(e)}}\n                            value={value}\n                            />\n                    </div>\n                </div>\n            </div>\n            )\n        }   \n    }\n}\n\nexport default RadioCustom\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/ColorCustom.js",["942","943","944"],"import React, {useContext, useState, useRef} from 'react'\nimport { MyContext } from '../../../../../pages/Make/MakePageV2'\nimport { MakeContext } from '../../NewSectionMake'\nimport produce from 'immer'\nimport { ColorPicker, useColor } from \"react-color-palette\";\nimport \"react-color-palette/lib/css/styles.css\";\nimport './ColorCustom.css'\nimport {\n    ChakraProvider,\n    Popover,\n    PopoverTrigger,\n    PopoverContent,\n    PopoverHeader,\n    PopoverBody,\n    PopoverFooter,\n    PopoverArrow,\n  } from '@chakra-ui/react'\n\n\nexport function EditColor({onChange, value}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const {stateC, actionC} = useContext(MakeContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const [color, setColor] = useColor(\"hex\", value);\n    const [open, setOpen] = useState(null);\n\n    const handleClick = () => {\n        setOpen(!open);\n    };\n  \n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <ChakraProvider>\n        <div className=\"center-row\" style={{justifyContent: \"start\"}}>\n            <div className=\"color-button\" style={{backgroundColor : `${state.setting.color}`, color:`${state.setting.color === '#ffffff' ? '#555C67' : 'white'}`}} onClick={() => onChange(`${state.setting.color}`)}>\n                {/* <div style={{color:'rgba(255,255,255,0.8)'}}>\n                    main\n                </div> */}\n                <div>\n                    {state.setting.color}\n                </div>\n            </div>\n                <Popover\n                    placement='right'\n                    closeOnBlur={false}\n                    isOpen={open}\n                    onClose={() => {\n                        handleClose();\n                        if(stateC.usedColors.includes(value)){\n                            return\n                        }else{\n                            if(stateC.usedColors.length > 5){\n                                actionC.setUsedColors(produce(stateC.usedColors, draft => {\n                                    draft.shift()\n                                    draft.push(value)\n                                }))\n                            }else{\n                                actionC.setUsedColors(produce(stateC.usedColors, draft => {\n                                    draft.push(value)\n                                }))\n                            }\n                        }\n                    }}>\n                <PopoverTrigger>\n                    <div className=\"color-button\" style={{backgroundColor:`${value}`, color:`${value === '#ffffff' ? '#555C67' : 'white'}`}} onClick={handleClick}>    \n                        {value}\n                    </div>\n                </PopoverTrigger>\n                <PopoverContent>\n                    <PopoverArrow />\n                    <PopoverHeader>색상을 선택하세요.</PopoverHeader>\n                    <PopoverBody>\n                        <div className=\"center-column\">\n                            <ColorPicker\n                                width={300}\n                                height={150}\n                                color={color}\n                                onChange={(e) => {\n                                    setColor(e);\n                                    onChange(e.hex);\n                                }}\n                                hideHSV\n                                alpha\n                            />\n                            <div style={{width:'95%', textAlign:'left'}}>최근에 사용한 색상</div>\n                            <div className=\"center-row\">\n                                {stateC.usedColors.map((item, index) => {\n                                    return(\n                                        <div onClick={() => {onChange(item); setColor({...color, hex:item})}} key={index}>\n                                            <div className=\"recent-color-button\" style={{backgroundColor:`${item}`}}>\n                                                \n                                            </div>\n                                            {/* <div className=\"recent-color-text\">\n                                                {item}\n                                            </div> */}\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        </div>\n                    </PopoverBody>\n                </PopoverContent>\n                </Popover>\n        </div>\n        </ChakraProvider>\n    )\n}\n\nconst ColorCustom = ({text, value, func}) => {\n    return(\n        <div className=\"edit-element\">\n            <div className=\"edit-element__one\" style={{flexDirection: 'column'}}>\n                {\n                    text && <div className=\"edit-element__left\">{text}</div>\n                }\n                <div className=\"edit-element__bottom\">\n                    <EditColor onChange={(e) => func(e)} value={value || 'white'} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ColorCustom\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/GallerySection.js",["945","946","947","948"],"import React, {useContext, useState, useRef} from 'react'\nimport { motion } from 'framer-motion';\nimport TitleDesc from './components/TitleDesc'\nimport TextAuto from './components/TextAuto'\nimport {Upload} from '@styled-icons/bootstrap';\nimport Element from './components/Element'\n\nfunction GallerySection({content, setting}) {\n    const heightRef = useRef(null)\n\n    const returnElementsCards = content.elements.map((item, index) => {\n        // '1px 1px 3px rgba(0,0,0,0.2)'\n        return(\n        <div key={index} className=\"feature__card\" style={{alignItems: 'center', boxShadow:`${content.card.shadow ? '2px 2px 4px rgba(0,0,0,0.4)' : ''}`, margin:`${ index === 0 ? '0px 15px 0px 0px' : index === content.elements.length - 1 ? '0px 0px 0px 15px' : '0px 15px' }`, backgroundColor: `${content.card.color}`, padding:'8px 5px'}}>\n                <div style={{width:`${content.element.size}px`, position:'relative', cursor:'pointer'}}>\n                    { item.attachment ? \n                        <img src={item.attachment} style={{width:`${content.element.size}px`, borderRadius:`${content.element.borderRadius}px`}}/> \n                        :\n                        <div className=\"feature-upload-button\" style={{borderRadius:`${content.element.borderRadius}px`, backgroundColor:`${content.element.backgroundColor}`}}>\n                            <Upload size=\"25\" />\n                        </div>\n                    }\n                </div> \n                {\n                    content.text.use && \n                    <div className=\"df-margin-big feature-title\" style={{width:'100%'}}>\n                            <TextAuto small className=\"text-input\" value={item.text} color = {content.text.color} align = {content.text.align}\n                            />\n                    </div>\n                }\n            </div>\n        )\n    })\n\n    return (\n        <motion.div className=\"template\"\n            data-aos={content.animation.type} aos-duration=\"2000\">\n\n            <TitleDesc setting={setting} content={content}/>\n\n            <div className=\"features__container\" ref={heightRef} >\n                {returnElementsCards}\n            </div>\n\n        </motion.div>\n    )\n}\n\nexport default GallerySection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/QnaSection.js",["949","950","951"],"import React, {useContext, useState} from 'react'\nimport { motion } from 'framer-motion';\nimport TitleDesc from './components/TitleDesc'\nimport QnaOpenClose from './components/QnaOpenClose'\nimport TextAuto from './components/TextAuto'\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\n\nfunction QnaSection({content, setting}) {\n\n    const returnQnaCards = content.qnas.map((item, index) => {\n        return(\n            <QnaOpenClose key={index} title={item.question} open={content.qna.shape === 'open'} color={content.qna.question} content={content} type={content.layout} index={index}>\n                <div className=\"edit-element\">\n                    <div style={{display:'flex', alignItems: 'start', height:'100%'}}>\n                        <span className=\"qna__word\">A. <></></span>\n                    </div>\n                    <TextAuto \n                        small\n                        value={item.answer} \n                        color={content.qna.answer} align=\"start\" />\n                </div>\n            </QnaOpenClose>\n        )\n    })\n\n    return (\n        <motion.div className=\"template\"\n            data-aos={content.animation.type} aos-duration=\"2000\">\n\n            <TitleDesc setting={setting} content={content} />\n\n            <div className=\"features__container\" style={{flexDirection: 'column', marginTop:'20px'}}>\n                {returnQnaCards}\n            </div>\n\n        </motion.div>\n    )\n}\n\nexport default QnaSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/CtaSection.js",["952","953","954"],"import React, {useContext, useState} from 'react'\nimport { motion } from 'framer-motion';\n\nimport TitleDesc from './components/TitleDesc'\nimport ReturnButton from './components/ReturnButton'\nimport AnimationDiv from './components/AnimationDiv'\nimport TextAuto from './components/TextAuto'\n\nfunction CtaSection({content, setting}) {\n\n    const returnLayout = {\n        flexDirection:`${content.layout === 1 ? 'row' : content.layout === 2 ? 'row-reverse' : 'column'}`,\n    }\n    \n    return (\n        <>\n            <div style={{ width:'100%', height:'100%'}}>\n                <AnimationDiv content={content} returnLayout={returnLayout}>\n                    <div className=\"text__container\">\n                        <TitleDesc setting={setting} content={content} />\n                    </div>\n                    <div style={{display:'flex', flexDirection:'column', width:'100%'}}>\n                    <ReturnButton content={content} setting={setting} />\n                    {content.caution.use && \n                        <div className=\"df-margin-big feature-desc\" style={{width:'100%'}}>\n                            <TextAuto \n                                className=\"text-input\" \n                                small \n                                value={content.caution.text} \n                                color = {content.caution.color} \n                                align = {content.caution.align} \n                            />\n                        </div>\n                    }\n                    </div>\n                </AnimationDiv>\n            </div>\n        </>\n    )\n}\n\nexport default CtaSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Login/LoginModal.js",["955","956","957","958","959","960"],"import React, {useState, useContext} from 'react'\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\nimport { Close } from '@styled-icons/evaicons-solid';\nimport {Link} from 'react-router-dom'\nimport { authService } from '../../tools/fbase'\nimport { firebaseInstance } from '../../tools/fbase'\nimport { dbService } from '../../tools/fbase'\nimport { Input } from 'antd';\nimport googlelogo from '../../tools/img/googlelogo.png'\nimport './LoginModal.css'\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Backdrop = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.1);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: 450,\n  height: 500,\n  bgcolor: 'rgba(255,255,255,1)',\n  borderRadius:'20px',\n  p: 2,\n  px: 4,\n  pb: 3,\n};\n\nfunction LoginModal({open, setOpen}) {\n    const [id, setId] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [done, setDone] = useState(false);\n\n    const socialLogin = async (e) => {\n        const { \n            target : { name }, \n        } = e;\n        let provider;\n        // if (name === \"googleLogin\"){\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\n        // }else{\n        //     console.log(\"이건 뜨면 안되는 메세지.\");\n        // }\n\n        const data = await authService.signInWithPopup(provider);\n        await checkRegister(data.user.multiFactor.user.email);\n    }\n\n    const submit = async (e) => {\n        var data = '';\n        e.preventDefault();\n        try{\n            data = await authService.signInWithEmailAndPassword(\n                id, password\n            )\n            checkRegister(data.user.multiFactor.user.email)\n        } catch (err){\n            console.log(err)\n        }\n        console.log(data)\n    }\n\n    const checkRegister = async (email) => {\n        const usersCollections = await dbService\n            .collection(\"users\")\n            .where(\"email\", \"==\", email)\n            .get();\n        \n        const usersExist = usersCollections.docs.map(doc => {\n            return({...doc.data(), id: doc.id})\n        })\n\n        console.log(\"일단 로그인 성공\", email, usersExist)\n\n\n        // if(usersExist.length === 0){\n        //     // 구글 아이디로 로그인했는데 회원가입에 정보가 없을 때\n        //     console.log(\"회원가입 정보를 받습니다.\");\n        //     setDone(true);\n        // }else{\n        //     console.log(\"로그인 완료\");\n        //     localStorage.setItem(\"name\", usersExist[0].name);\n        //     localStorage.setItem(\"job\", usersExist[0].job);\n        // }\n    }\n\n    return (\n        <div>\n            <StyledModal\n            aria-labelledby=\"unstyled-modal-title\"\n            aria-describedby=\"unstyled-modal-description\"\n            open={open}\n            onClose={() => setOpen(!open)}\n            BackdropComponent={Backdrop}>\n            <Box sx={style}>\n                <div className=\"login-modal__inner\">\n                    <div className=\"modal-top__title\">\n                        <div className=\"login-title\" style={{width:\"95%\"}}>\n                            로그인\n                        </div>\n                        <div style={{width:\"5%\", cursor:\"pointer\"}} onClick={() => setOpen(false)}>\n                            <Close size=\"30\" />\n                        </div>\n                    </div>\n                    <form onSubmit={e => submit(e)} className=\"center\">\n                        <span className=\"login-label\">\n                            Email\n                        </span>\n                        <Input \n                            className=\"login-input\"\n                            placeholder=\"아이디를 입력해주세요.\" \n                            required\n                            value={id}   \n                            onChange={e => setId(e.currentTarget.value)}\n                        />\n                        <span className=\"login-label\">\n                            Password\n                        </span>\n                        <Input  \n                            type=\"password\" \n                            className=\"login-input\"\n                            placeholder=\"비밀번호를 입력해주세요.\" \n                            required\n                            value={password} \n                            onChange={e => setPassword(e.currentTarget.value)}\n                        />\n                        <Input className=\"login-form-button hover-shadow\" type=\"submit\" value=\"로그인\" />\n                    </form>\n                    <button className=\"google-login-button hover-shadow\" name=\"googleLogin\" onClick={e => socialLogin(e)} style={{marginTop:'2%'}}>\n                        <img src={googlelogo} width={20}/>\n                        <span style={{marginLeft:'5%'}}>구글 로그인</span>\n                    </button>\n                    <div style={{padding:'2% 0%', justifyContent:'flex-start', display:'flex', width:'100%'}}>\n                        <a href=\"https://surfee.co.kr/#/customer\" className=\"footer-text-click\">\n                            개인정보 처리방침\n                        </a>\n                        <a href=\"https://surfee.co.kr/#/customer\" className=\"footer-text-click\" style={{marginLeft:'2%'}}>\n                            이용약관\n                        </a>\n                    </div>\n                </div>\n            </Box>\n        </StyledModal>\n        </div>\n    )\n}\n\nexport default LoginModal\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/FeaturesSection.js",["961","962","963"],"import React, {useContext, useEffect, useState, useRef} from 'react'\nimport { motion } from 'framer-motion';\nimport TitleDesc from './components/TitleDesc'\nimport TextAuto from './components/TextAuto'\nimport Element from './components/Element'\n\nfunction FeaturesSection({content, setting}) {\n    const heightRef = useRef(null)\n\n    const returnFeatureCards = content.elements.map((item, index) => {\n        // '1px 1px 3px rgba(0,0,0,0.2)'\n        return(\n            <div key={index} className=\"feature__card\" style={{boxShadow:'', margin:`${ index === 0 ? '0px 15px 0px 0px' : index === content.elements.length - 1 ? '0px 0px 0px 15px' : '0px 15px' }`}}>\n                <Element content={content} item={item} index={index} key={index}/>\n                {\n                    content.elementText.titleUse && \n                    <div className=\"df-margin-big feature-title\" style={{width:'100%'}}>\n                            <TextAuto className=\"text-input\" value={item.title} color = {content.elementText.color} align = {content.elementText.align}\n                            />\n                    </div>\n                }\n                {\n                    content.elementText.descUse && \n                    <div className=\"df-margin\">\n                        <TextAuto small className=\"text-input\"  value={item.desc} color = {content.elementText.color} align = {content.elementText.align}\n                        />\n                    </div>\n                }\n            </div>\n        )\n    })\n\n    return (\n        <>\n            <motion.div className=\"template\"\n                data-aos={content.animation.type} aos-duration=\"2000\" >\n                <TitleDesc setting={setting} content={content} />\n\n                <div className=\"features__container\" ref={heightRef} >\n                    {returnFeatureCards}\n                </div>\n\n            </motion.div>\n        </>\n    )\n}\n\nexport default FeaturesSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/ReviewSection.js",["964","965","966"],"import React, {useContext, useState} from 'react'\nimport Rating from '@mui/material/Rating';\nimport { motion } from 'framer-motion';\nimport TitleDesc from './components/TitleDesc'\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport Element from './components/Element'\n\nfunction ReviewSection({content, setting}) {\n\n    const returnReviewCards = content.elements.map((item, index) => {\n        return(\n            <div key={index} className=\"feature__card\" style={{boxShadow:'', margin:`${ index === 0 ? '0px 15px 0px 0px' : index === content.elements.length - 1 ? '0px 0px 0px 15px' : '0px 15px' }`}}>\n                <Element content={content} item={item} index={index} key={index}/>\n\n                <div className=\"df-margin-big feature-title\" style={{width:'100%'}}>\n                    <div \n                        className=\"text-input-flex\"  \n                        style={{\n                            width:'100%',\n                            resize:'none',\n                            textAlign:`${content.align}`,\n                            fontFamily:`${setting.smallFont}`,\n                            color:`${content.reviewText.color}`,\n                        }}>\n                        {item.title} \n                    </div>\n                </div>\n                {\n                    content.rating.use && \n                    <div className=\"df-margin\">\n                        <div style={{width:'100%', textAlign:`${content.align}`}}>\n                        <Rating\n                            value={item.rating} \n                            precision={0.1}\n                            style={{ fontSize: `${content.rating.size}px`, color:`${content.rating.color}` }}\n                            disabled\n                        />\n                        </div>\n                    </div>\n                }\n                {\n                    content.reviewText.use && \n                    <div className=\"df-margin-big feature-desc\" style={{width:'100%'}}>\n                        <div \n                            className=\"text-input-flex\" \n                            style={{\n                                width:'100%',\n                                resize:'none',\n                                textAlign:`${content.align}`,\n                                fontFamily:`${setting.smallFont}`,\n                                color:`${content.reviewText.color}`,\n                            }}>\n                            {item.desc} \n                        </div>\n                    </div>\n                }\n                {\n                    content.writer.use && \n                    <div className=\"df-margin-big feature-writer\" style={{width:'100%'}}>\n                        <div \n                            className=\"text-input-flex\" \n                            style={{\n                                width:'100%',\n                                resize:'none',\n                                textAlign:`${content.align}`,\n                                color:`${content.writer.color}`,\n                            }}>\n                            {item.writer} \n                        </div>\n                    </div>\n                }\n            </div>\n        )\n    })\n\n    return (\n        <>\n            <motion.div className=\"template\" data-aos={content.animation.type} aos-duration=\"2000\">\n                \n                <TitleDesc setting={setting} content={content} />\n\n                <div className=\"features__container\"> \n                    {returnReviewCards}\n                </div>\n\n            </motion.div>\n        </>\n    )\n}\nexport default ReviewSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/HeroSection.js",["967","968","969","970","971"],"import React, { useContext, useState, useRef } from 'react'\nimport { motion } from 'framer-motion';\n\nimport TitleDesc from './components/TitleDesc'\nimport AutosizeInput from 'react-input-autosize';\nimport ImageOrSlide from './components/ImageOrSlide'\nimport ReturnButton from './components/ReturnButton'\nimport AnimationDiv from './components/AnimationDiv'\n\nfunction HeroSection({content, setting}) {\n    const returnLayout = {\n        flexDirection:`${content.layout === 1 ? 'row' : content.layout === 2 ? 'row-reverse' : content.layout === 3 ? 'column' : 'column-reverse'}`,\n   }\n\n    return (\n        <div style={{ width:'100%', height:'100%'}}>\n            <AnimationDiv content={content} returnLayout={returnLayout}>\n                <div className=\"text__container\" style={{marginTop:`${content.layout === 4 ? '30px' : '0px'}`}}>\n                    <TitleDesc setting={setting} content={content} />\n                    <ReturnButton content={content} setting={setting} />\n                </div>\n                <div className=\"image__container\">\n                    <ImageOrSlide content={content} />\n                </div>\n            </AnimationDiv>\n        </div>\n    )\n}\n\nexport default HeroSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/DetailSection.js",["972","973","974","975"],"import React, { useContext, useEffect, useState, useRef } from 'react'\n\nimport TitleDesc from './components/TitleDesc'\n\nimport ImageOrSlide from './components/ImageOrSlide'\nimport AnimationDiv from './components/AnimationDiv'\n\nfunction DetailSection({content, setting}) {\n\n    const returnLayout = {\n        flexDirection:`${content.layout === 1 ? 'row' : content.layout === 2 ? 'row-reverse' : content.layout === 3 ? 'column' : 'column-reverse'}`,\n    }\n    \n    return (\n        <div style={{ width:'100%', height:'100%'}}>\n            <AnimationDiv content={content} returnLayout={returnLayout}>\n                <div className=\"text__container\" style={{marginTop:`${content.layout === 4 ? '30px' : '0px'}`}}>\n                    <TitleDesc content={content} setting={setting}/>\n                </div>\n                <div className=\"image__container\">\n                    <ImageOrSlide content={content} setting={setting}/>\n                </div>\n            </AnimationDiv>\n        </div>\n    )\n}\n\nexport default DetailSection","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/AnimationDiv.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/Element.js",["976","977"],"import React, {useContext, useState} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport produce from 'immer'\nimport IconTable from '../components/IconTable'\nimport {icons} from '../components/IconTable'\nimport {Upload} from '@styled-icons/bootstrap';\nimport {\n    ChakraProvider,\n    Popover,\n    PopoverTrigger,\n    PopoverContent,\n    PopoverHeader,\n    PopoverBody,\n    PopoverFooter,\n    PopoverArrow,\n  } from '@chakra-ui/react'\n\nfunction Element({content, item, index, gallery}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const [open, setOpen] = useState([false, false, false]);\n    const handleClick = (index) => {\n        setOpen(produce(open, draft => {\n            draft[index] = !open[index];\n        }));\n    };\n  \n    const handleClose = (index) => {\n        setOpen(produce(open, draft => {\n            draft[index] = false;\n        }));\n    };\n\n    const returnIcon = (name) => {\n        return icons.filter(doc => doc.name === name)[0].icon\n    }\n\n    return (\n<ChakraProvider>\n    <div className=\"centeras\" style={{justifyContent: `${content.align}`}}>\n        <div style={{width:`${content.element.size}px`, height:`${content.element.size}px`, position:'relative', cursor:'pointer'}}>\n        {\n        content.element.type === 'image' ? <>\n        { item.attachment ? \n            <img src={item.attachment} style={{width:`${content.element.size}px`, height:`${content.element.size}px`, borderRadius:`${content.element.imageBorder}px`, objectFit:'cover'}}/> \n            :\n            <div className=\"feature-upload-button\" style={{borderRadius:`${content.element.borderRadius}px`, backgroundColor:`${content.element.backgroundColor}`}}>\n                <Upload size=\"25\" />\n            </div>\n        }\n        <input\n            className=\"feature-upload-file\"\n            type=\"file\" \n            accept=\"image/*\" \n            id=\"file\" \n            onChange={ e => {\n                const {target:{files},} = e;\n                const oneFile = files[0];\n                const reader = new FileReader();\n                reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n                    if(oneFile.size > 3000000){\n                        alert(\"파일의 크기가 3MB를 초과합니다.\")\n                        return;\n                    }\n                    const {currentTarget:{result}} = finishedEvent;\n                    action.setContents(produce(state.contents, draft=>{\n                        draft[state.secNum].elements[index].attachment = result;\n                    }))\n                }\n                if(oneFile){\n                    reader.readAsDataURL(oneFile);\n                }\n            } }\n        /> </> : \n        <>\n        <Popover\n            placement='top'\n            closeOnBlur={false}\n            isOpen={open[index]}\n            onClose={() => handleClose(index)}>\n        <PopoverTrigger>\n                <div className=\"feature-upload-button\" style={{borderRadius:`${content.element.iconBorder}px`, backgroundColor:`${content.element.backgroundColor}`}} onClick={() => handleClick(index)}>\n                    {item.icon ? \n                        <>{returnIcon(item.icon)}</> \n                        :\n                        <Upload size=\"25\" />\n                    }\n                </div>\n        </PopoverTrigger>\n        <PopoverContent style={{zIndex:1900}}>\n            <PopoverArrow />\n            <PopoverHeader>아이콘을 선택하세요.</PopoverHeader>\n            <PopoverBody>\n                <IconTable func={ e => action.setContents(produce(state.contents, draft => {\n                    console.log(\"아이콘이 왜 안되지?\", e)\n                    draft[state.secNum].elements[index].icon = e;\n                })) } handleClose={() => handleClose(index)}/>\n            </PopoverBody>\n        </PopoverContent>\n        </Popover>\n            \n        </>\n        }\n    </div> \n</div>\n</ChakraProvider>\n    )\n}\n\nexport default Element\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/TitleDesc.js",["978","979","980"],"import React, {useContext, useEffect, useState, useRef} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport {produce} from 'immer'\nimport './TitleDesc.css'\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\n\nfunction TitleDesc({content}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    return (\n        <div className=\"title-desc__container\" onClick={() => action.setCategory(1)}>\n            {\n                content.title.use &&\n                <div style={{width:'100%'}}>\n                    <TextareaAutosize \n                        className=\"text-input\" \n                        value={content.title.text} \n                        onChange={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].title.text = e.currentTarget.value;\n                        }))}\n                        style={{\n                            fontFamily:`${state.setting.font}`, \n                            color:`${content.title.color}`, \n                            fontSize:`${content.title.size/20}em`, \n                            textAlign:`${state.isPhone ? content.mobile.align : content.title.align}`,\n                            resize:'none'\n                        }}\n                        spellcheck=\"false\"\n                    />\n                </div>\n            }\n            {\n                content.desc.use &&\n                <div style={{width:'100%', marginTop:'10px'}}>\n                    <TextareaAutosize \n                        className=\"text-input\" \n                        value={content.desc.text} \n                        onChange={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].desc.text = e.currentTarget.value;\n                        }))}\n                        style={{\n                            fontFamily:`${state.setting.smallFont}`, \n                            color:`${content.desc.color}`, \n                            fontSize:`${content.desc.size/20}em`, \n                            // boxSizing:`border-box`, \n                            textAlign:`${state.isPhone ? content.mobile.align : content.desc.align}`,\n                            resize:'none'\n                        }}\n                        spellcheck=\"false\"\n                    />\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default TitleDesc\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/BoxCustom.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/SliderCustom.js",["981","982","983","984","985","986","987"],"import React, {useState} from 'react'\nimport './SliderCustom.css'\nimport {\n  Slider,\n  SliderTrack,\n  SliderFilledTrack,\n  SliderThumb,\n  Box,\n  SliderMark,\n  ChakraProvider,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n} from '@chakra-ui/react'\n\nfunction SliderCustom({top, text, func, value, max}) {\n    const [range, setRange] = useState(value);\n\n    const onChange = (e) => {\n        setRange(e.target.value)\n      }\n\n    return (\n      <div className=\"edit-element slider__container\">\n        <div className=\"edit-element__one\" style={{flexDirection: 'column'}}>\n          <div stlye={{display: 'flex', flexDirection: 'row', alignItems: 'start', justifyContent:'start'}}>\n          {\n            top && <div className=\"slider-medium-command\">{top}</div>\n          }\n          </div>\n          <div style={{display: 'flex', flexDirection: 'row', justifyContent:'center', alignItems: 'center', width:'100%', height:'100%'}}>\n            <ChakraProvider>\n                <Slider\n                  step={1}\n                  focusThumbOnChange={false}\n                  min={1}\n                  max={max ? max : 100}\n                  value={range}\n                  onChange={e => {func(e); setRange(e)}}\n                >\n                  <SliderTrack bg='white'>\n                    <Box position='relative' right={10} />\n                    <SliderFilledTrack bg='#A89AFF' />\n                  </SliderTrack>\n                  <SliderThumb bg='linear-gradient(180deg, #9281FF 0%, #6C63FF 100%)' fontSize='sm' boxSize='26px' style={{boxShadow: '4px 4px 15px #D0CDFF'}}/>\n                </Slider>\n                {/* <NumberInput className=\"number-input\" size='md' maxW='50px' step={1} max={max ? max : 100} value={range} onChange={e => {func(e); setRange(e)}}> */}\n                <input className=\"number-input\" type=\"number\" value={range} min={1} max={max ? max : 100} onChange={e => {func(e.currentTarget.value); setRange(e.currentTarget.value)}}/>\n\n            </ChakraProvider>\n          </div>\n            {\n            text && <div className=\"slider-small-command\" style={{marginLeft:'65px'}}>{text}의 세로 길이를 조절해주세요.</div>\n            } \n        </div>\n      </div>\n    )\n}\n\nexport default SliderCustom\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/func/FuncContentVideo.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/func/FuncYoutubeLink.js",["988","989"],"import React, {useRef, useContext} from 'react'\nimport produce from 'immer';\nimport { MyContext } from '../../../../../pages/Make/MakePageV2'\nimport '../Custom/InputCustom.css'\n\nfunction FuncYoutubeLink({content}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const onChangeLink = e => {\n        e.preventDefault()\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].video.link = e.target.value\n        }))\n    }\n    const onYoutube = e => {\n        e.preventDefault()\n        const submitLink = content.video.link.replace('watch?v=', 'embed/');\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].video.youtube = true\n            draft[state.secNum].video.link = submitLink+'?autoplay=1'+'&mute=1'\n            draft[state.secNum].image.slide = false\n            draft[state.secNum].video.use = false\n            draft[state.secNum].image.slide = false\n            draft[state.secNum].image.oneImg = false \n        }))\n    }\n\n    return (\n        <>\n        <form className=\"center-row\">\n           <input\n                className=\"edit-input\"\n                type=\"text\"\n                onChange={e=>onChangeLink(e)}\n                style={{width: '100%'}}\n                placeholder=\"유튜브 링크를 입력해주세요.\"\n                onKeyPress={e => onYoutube(e)}\n           /> \n           {/* <div \n           type=\"submit\" \n           style={{width: '30px', cursor: 'pointer' , border: 'solid 1px'}}\n           onClick = {e => onYoutube(e)}\n           >\n           확인\n        </div> */}\n        </form>\n        <div className=\"mid-command\">입력 후 엔터를 누르세요.</div>\n        </>\n    )\n}\n\nexport default FuncYoutubeLink\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/func/TextSizeCustom.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/AddAppButton.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/Contents.js",["990","991","992","993","994"],"import React,{ useContext } from 'react'\nimport produce from 'immer';\nimport OpenCloseCustom from '../../tools/Custom/OpenCloseCustom'\nimport RadioCustom from '../../tools/Custom/RadioCustom'\nimport { MyContext } from '../../../../../pages/Make/MakePageV2'\nimport AddContentImg from '../../tools/func/FuncContentImg'\nimport AddSlideImg from '../../tools/func/FuncSlideImg'\nimport AddContentVideo from '../../tools/func/FuncContentVideo'\nimport AddYoutubeLink from '../../tools/func/FuncYoutubeLink'\nimport SliderCustom from '../../tools/Custom/SliderCustom'\nimport {CustomSwitch} from '../../tools/Custom/OnOffCustom'\nimport { Select } from '@chakra-ui/react'\nimport './Contents.css'\nimport FuncContentImg from '../../tools/func/FuncContentImg'\nimport { StoreMallDirectoryRounded } from '@mui/icons-material';\n\nconst contentsOptions = [\n    { label:'이미지', value:'image'},\n    { label:'동영상', value:'video'},\n    { label:'목업', value:'mockup'},\n    { label:'슬라이드', value:'slide'},\n]\nconst imageBorderOptions = [\n    { label: '원형', value: 50 },\n    { label: '라운드', value: 7 },\n    { label: '사각형', value: 0 },\n]\nconst imageSizeOptions = [\n    { label: '작게', value: 250 },\n    { label: '보통', value: 400 },\n    { label: '크게', value: 500 },\n]\nconst videoOptions = [\n    { label: '업로드', value: 'base'},\n    { label: '유튜브 링크', value: 'youtube'}\n]\n\n\nfunction Contents({content}) {\n\n    const {state, action} = useContext(MyContext) \n\n    const changeContentOption = e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].contents.type = e;\n        }));\n    }\n    // 콘텐츠 - 이미지 업로드\n    const onChangeContentImage= e => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            if(oneFile.size > 3000000){\n                alert(\"파일의 크기가 3MB를 초과합니다.\")\n                return;\n            }\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].image.attachment = result;             \n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    // 콘텐츠 - 이미지 삭제\n    const RemoveImage = () => {\n        action.setContents(produce(state.contents, draft=>{\n            draft[state.secNum].image.attachment = '';\n        }))\n    }\n\n    // 슬라이드 - 이미지\n    const onChangeSlideImage1= e => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            if(oneFile.size > 3000000){\n                alert(\"파일의 크기가 3MB를 초과합니다.\")\n                return;\n            }\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].slide_img.slide1 = result;\n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    const RemoveSlide1 = () => {\n        action.setContents(produce(state.contents, draft=>{\n            draft[state.secNum].slide_img.slide1 = '';\n        }))\n    }\n    const onChangeSlideImage2= e => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            if(oneFile.size > 3000000){\n                alert(\"파일의 크기가 3MB를 초과합니다.\")\n                return;\n            }\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].slide_img.slide2 = result;\n                draft[state.secNum].image.slide = true\n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    const RemoveSlide2 = () => {\n        action.setContents(produce(state.contents, draft=>{\n            draft[state.secNum].slide_img.slide2 = '';\n        }))\n    }\n    const onChangeSlideImage3= e => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            if(oneFile.size > 3000000){\n                alert(\"파일의 크기가 3MB를 초과합니다.\")\n                return;\n            }\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].slide_img.slide3 = result;\n                draft[state.secNum].image.slide = true\n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    const RemoveSlide3 = () => {\n        action.setContents(produce(state.contents, draft=>{\n            draft[state.secNum].slide_img.slide3 = '';\n        }))\n    }\n\n    const setImgSize = e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].image.size = e\n        }))\n    }\n\n    const setSlideSize = e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].image.size = e\n        }))\n    }\n\n    const setMobileSize = e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].mobile.size = e\n        }))\n    }\n    const setDesktopSize = e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].desktop.size = e\n        }))\n    }\n    const setM2Size =e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].mobile2.size = e\n        }))\n    }\n    const setMSize =e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].deskMobile.size1 = e\n        }))\n    }\n    const setDSize =e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].deskMobile.size2 = e\n        }))\n    }\n\n    // video type\n    const changeVideoOption = e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].video.type = e;\n        }));\n    }\n\n    // video upload - BufferArray를 서버에서 stream으로 처리하는 방식으로 하는게 제일인데.. 포기...\n    const onChangeContentVideo = e => {\n        // let newContents = JSON.parse(JSON.stringify(state.contents))\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            if(oneFile.size > 3000000){\n                alert(\"파일의 크기가 3MB를 초과합니다.\")\n                return;\n            }\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].video.file = result;\n            }))\n            // actionImgCompress(result);\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    // video remove\n    const RemoveVideo = () => {\n        action.setContents(produce(state.contents, draft=>{\n            draft[state.secNum].video.file = '';\n        }))\n    }\n\n    const BaseTrue = () => {\n        action.setContents(produce(state.contents, draft=>{\n            draft[state.secNum].image.oneImg = false   \n            draft[state.secNum].video.use = true\n            draft[state.secNum].image.slide = false\n            draft[state.secNum].video.youtube = false\n            draft[state.secNum].mobile.use = false\n            draft[state.secNum].tablet.use = false\n            draft[state.secNum].desktop.use = false\n            draft[state.secNum].mobile2.use = false\n            draft[state.secNum].deskMobile.use = false\n        }))\n    }\n    const YoutubeTrue = () => {\n        action.setContents(produce(state.contents, draft=>{\n            draft[state.secNum].image.oneImg = false   \n            draft[state.secNum].video.use = false\n            draft[state.secNum].image.slide = false\n            draft[state.secNum].video.youtube = true\n            draft[state.secNum].mobile.use = false\n            draft[state.secNum].tablet.use = false\n            draft[state.secNum].desktop.use = false\n            draft[state.secNum].mobile2.use = false\n            draft[state.secNum].deskMobile.use = false\n            \n        }))\n    }\n    \n    const videoType = () => {\n        switch(content.video.type){\n            case 'base':\n                BaseTrue()\n                return(\n                    <>\n                    <AddContentVideo text=\"동영상\" value={content.video.file} func={e => onChangeContentVideo(e)} removeFunc={e => RemoveVideo(e)}/>\n                    <div style={{marginBottom: '-20px'}} />\n                    <SliderCustom top=\"크기\" text=\"동영상\" value={content.image.size} func={setImgSize} max=\"100\"/>\n                    </>\n                )\n            case 'youtube':\n                YoutubeTrue()\n                return(\n                    <>\n                    <div style={{marginTop: '20px'}} />\n                    <AddYoutubeLink content={content} value={content.video.link} />\n                    <div style={{marginTop: '-20px'}} />\n                    <CustomSwitch text=\"자동 재생\" value={content.video.auto} \n                        onChange={ () => action.setContents(produce(state.contents, draft => {\n                            if (content.video.link.includes('autoplay=1'))\n                                {draft[state.secNum].video.link = content.video.link.replace('autoplay=1', 'autoplay=0');\n                                draft[state.secNum].video.auto = false;}\n                            else\n                                {draft[state.secNum].video.link = content.video.link.replace('autoplay=0', 'autoplay=1');\n                                draft[state.secNum].video.auto = true;}\n                        }))}/>\n                    <div className=\"mid-command\">\n                        유저가 페이지에 들어오면 동영상이 음소거 상태로 자동 재생됩니다.\n                    </div>\n                    <div style={{marginTop: '10px'}} />\n                    <SliderCustom top=\"크기\" text=\"동영상\" value={content.image.size} func={setImgSize} max=\"100\"/>\n                    </>\n                )\n        }\n    }\n\n    // 목업 타입\n    const mockOption = e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].mockup.type = e;\n        }))\n    }\n    // 목업 모바일 이미지 업로드\n    const uploadMobile = e => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].mobile.file = result;               \n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    // 목업 데스크탑 이미지 업로드\n    const uploadDesk= e => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            if(oneFile.size > 3000000){\n                alert(\"파일의 크기가 3MB를 초과합니다.\")\n                return;\n            }\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].desktop.file = result;               \n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    // 목업 모바일 1 이미지 업로드\n    const uploadM1= e => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            if(oneFile.size > 3000000){\n                alert(\"파일의 크기가 3MB를 초과합니다.\")\n                return;\n            }\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].mobile2.file1 = result;               \n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    // 목업 모바일 2 이미지 업로드\n    const uploadM2= e => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            if(oneFile.size > 3000000){\n                alert(\"파일의 크기가 3MB를 초과합니다.\")\n                return;\n            }\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].mobile2.file2 = result;               \n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    // 목업 모바일 이미지 업로드\n    const uploadDM1= e => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            if(oneFile.size > 3000000){\n                alert(\"파일의 크기가 3MB를 초과합니다.\")\n                return;\n            }\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].deskMobile.file1 = result;               \n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    // 목업 데스크탑 이미지 업로드\n    const uploadDM2= e => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            if(oneFile.size > 3000000){\n                alert(\"파일의 크기가 3MB를 초과합니다.\")\n                return;\n            }\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].deskMobile.file2 = result;               \n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    const MobileTrue = () => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].mobile.use = true\n            draft[state.secNum].tablet.use = false\n            draft[state.secNum].desktop.use = false\n            draft[state.secNum].mobile2.use = false\n            draft[state.secNum].deskMobile.use = false\n            draft[state.secNum].image.oneImg = false   \n            draft[state.secNum].video.use = false\n            draft[state.secNum].image.slide = false\n            draft[state.secNum].video.youtube = false\n        }))\n    }\n    const TabletTrue = () => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].mobile.use = false\n            draft[state.secNum].tablet.use = true\n            draft[state.secNum].desktop.use = false\n            draft[state.secNum].mobile2.use = false\n            draft[state.secNum].deskMobile.use = false\n            draft[state.secNum].image.oneImg = false   \n            draft[state.secNum].video.use = false\n            draft[state.secNum].image.slide = false\n            draft[state.secNum].video.youtube = false\n        }))\n    }\n    const DesktopTrue = () => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].mobile.use = false\n            draft[state.secNum].tablet.use = false\n            draft[state.secNum].desktop.use = true\n            draft[state.secNum].mobile2.use = false\n            draft[state.secNum].deskMobile.use = false\n            draft[state.secNum].image.oneImg = false   \n            draft[state.secNum].video.use = false\n            draft[state.secNum].image.slide = false\n            draft[state.secNum].video.youtube = false\n        }))\n    }\n    const Mobile2True = () => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].mobile.use = false\n            draft[state.secNum].tablet.use = false\n            draft[state.secNum].desktop.use = false\n            draft[state.secNum].mobile2.use = true\n            draft[state.secNum].deskMobile.use = false\n            draft[state.secNum].image.oneImg = false   \n            draft[state.secNum].video.use = false\n            draft[state.secNum].image.slide = false\n            draft[state.secNum].video.youtube = false\n        }))\n    }\n    const DeskMobTrue = () => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].mobile.use = false\n            draft[state.secNum].tablet.use = false\n            draft[state.secNum].desktop.use = false\n            draft[state.secNum].mobile2.use = false\n            draft[state.secNum].deskMobile.use = true\n            draft[state.secNum].image.oneImg = false   \n            draft[state.secNum].video.use = false\n            draft[state.secNum].image.slide = false\n            draft[state.secNum].video.youtube = false\n        }))\n    }\n\n    const returnMockup = () => {\n        switch(content.mockup.type){\n            case 'mobile':\n                MobileTrue()\n                return(\n                    <>\n                        <FuncContentImg text='목업' subtext=\"최대 3MB 업로드 가능\" value={content.mobile.file} func={uploadMobile}/>\n                        <SliderCustom top=\"크기\" text=\"목업\" value={content.mobile.size} func={setMobileSize} max=\"100\"/>\n                    </>\n                )\n            case 'tablet':\n                TabletTrue()\n                return(\n                    <>\n                        태블릿\n                    </>\n                )\n            case 'desktop':\n                DesktopTrue()\n                return(\n                    <>\n                        <FuncContentImg text='목업' subtext=\"최대 3MB 업로드 가능\" value={content.desktop.file} func={uploadDesk}/>\n                        <SliderCustom top=\"크기\" text=\"목업\" value={content.desktop.size} func={setDesktopSize} max=\"100\"/>   \n                    </>\n                )\n            case 'mobile2':\n                Mobile2True()\n                return(\n                    <>\n                    <FuncContentImg text='모바일1' subtext=\"최대 3MB 업로드 가능\" value={content.mobile2.file1} func={uploadM1}/>\n                    <FuncContentImg text='모바일2' subtext=\"최대 3MB 업로드 가능\" value={content.mobile2.file2} func={uploadM2}/>\n                    <SliderCustom top=\"크기\" text=\"목업\" value={content.mobile2.size} func={setM2Size} max=\"100\"/>   \n                    </>\n                )\n            case 'desk+mob':\n                DeskMobTrue()\n                return(\n                    <>\n                    <FuncContentImg text='모바일' subtext=\"최대 3MB 업로드 가능\" value={content.deskMobile.file1} func={uploadDM1}/>\n                    <FuncContentImg text='데스크탑' subtext=\"최대 3MB 업로드 가능\" value={content.deskMobile.file2} func={uploadDM2}/>\n                    <SliderCustom top=\"모바일 크기\" text=\"모바일\" value={content.deskMobile.size1} func={setMSize} max=\"100\"/>  \n                    <SliderCustom top=\"데스크탑 크기\" text=\"데스크탑\" value={content.deskMobile.size2} func={setDSize} max=\"100\"/>   \n                    </>\n                )\n            default:\n            return(\n                <>\n                </>\n            )\n        }\n    }\n\n    const ImageTrue = () => {\n        action.setContents(produce(state.contents, draft=>{\n            draft[state.secNum].image.oneImg = true    \n            draft[state.secNum].video.use = false\n            draft[state.secNum].image.slide = false\n            draft[state.secNum].video.youtube = false\n            draft[state.secNum].mobile.use = false\n            draft[state.secNum].tablet.use = false\n            draft[state.secNum].desktop.use = false\n            draft[state.secNum].mobile2.use = false\n            draft[state.secNum].deskMobile.use = false\n        }))\n    }\n    const SlideTrue = () => {\n        action.setContents(produce(state.contents, draft=>{\n            draft[state.secNum].image.oneImg = false    \n            draft[state.secNum].video.use = false\n            draft[state.secNum].image.slide = true\n            draft[state.secNum].video.youtube = false\n            draft[state.secNum].mobile.use = false\n            draft[state.secNum].tablet.use = false\n            draft[state.secNum].desktop.use = false\n            draft[state.secNum].mobile2.use = false\n            draft[state.secNum].deskMobile.use = false\n        }))\n    }\n    const VideoTrue = () => {\n        action.setContents(produce(state.contents, draft=>{\n            draft[state.secNum].image.oneImg = false   \n            draft[state.secNum].video.use = true\n            draft[state.secNum].image.slide = false\n            draft[state.secNum].video.youtube = false\n            draft[state.secNum].mobile.use = false\n            draft[state.secNum].tablet.use = false\n            draft[state.secNum].desktop.use = false\n            draft[state.secNum].mobile2.use = false\n            draft[state.secNum].deskMobile.use = false\n        }))\n    }\n    const MockupTrue = () =>{\n        action.setContents(produce(state.contents, draft=>{\n            draft[state.secNum].image.oneImg = false   \n            draft[state.secNum].video.use = false\n            draft[state.secNum].image.slide = false\n            draft[state.secNum].video.youtube = false\n            draft[state.secNum].mockup.use = true\n            draft[state.secNum].mobile.use = false\n            draft[state.secNum].tablet.use = false\n            draft[state.secNum].desktop.use = false\n            draft[state.secNum].mobile2.use = false\n            draft[state.secNum].deskMobile.use = false\n        }))\n    }\n\n    const returnImageOrVideoAdd = () => {\n        switch(content.contents.type){\n            case 'image':\n                ImageTrue()\n                return(\n                    <div style={{width:'100%'}}>\n                        <AddContentImg text=\"이미지\" subtext=\"최대 3MB 업로드 가능\" value={content.image.attachment} func={e => onChangeContentImage(e)} removeFunc={e => RemoveImage(e)}/>\n                        <div style={{marginTop: '-10px'}}/>\n                        <SliderCustom top=\"크기\" text=\"이미지\" value={content.image.size} func={setImgSize} max=\"100\"/>\n                        <div style={{marginBottom: '20px'}}/>\n                        <RadioCustom text=\"프레임\" options={imageBorderOptions} value={content.image.border} func={e =>  action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].image.border = e;\n                        }))} />\n                        <CustomSwitch text=\"그림자\" value={content.image.shadow} onChange={(e) => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].image.shadow = !content.image.shadow\n                                if (draft[state.secNum].image.shadow)\n                                    draft[state.secNum].image.shadowValue = \"2px 4px 20px #E8F0F9\"\n                                else\n                                draft[state.secNum].image.shadowValue = \"none\"\n                        }))} />\n                        <div style={{marginBottom: \"20px\"}}/>\n                    </div>\n                )\n            case 'slide':\n                SlideTrue()\n                return(\n                    <>\n                    <div style={{display: 'flex', marginTop: '10px'}}>\n                    <AddSlideImg value={content.slide_img.slide1} func={e => onChangeSlideImage1(e)} removeFunc={e => RemoveSlide1(e)}/>\n                    <AddSlideImg value={content.slide_img.slide2} func={e => onChangeSlideImage2(e)} removeFunc={e => RemoveSlide2(e)}/>\n                    <AddSlideImg value={content.slide_img.slide3} func={e => onChangeSlideImage3(e)} removeFunc={e => RemoveSlide3(e)}/>\n                    </div>\n                    <div className=\"small-command\">\n                        최대 3MB까지 가능합니다.\n                    </div>\n                    <SliderCustom top=\"크기\" text=\"이미지\" value={content.image.size} func={setImgSize} max=\"300\"/>\n                    <RadioCustom text=\"프레임\" options={imageBorderOptions} value={content.image.border} func={e =>  action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].image.border = e;\n                    }))} />\n                    <CustomSwitch text=\"그림자\" value={content.image.shadow} onChange={(e) => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].image.shadow = !content.image.shadow\n                                if (draft[state.secNum].image.shadow)\n                                    draft[state.secNum].image.shadowValue = \"2px 4px 20px #E8F0F9\"\n                                else\n                                draft[state.secNum].image.shadowValue = \"none\"\n                        }))} />\n                        <div style={{marginBottom: \"20px\"}}/>\n                    </>\n                )         \n            case 'video':\n                VideoTrue()\n                return(\n                    <>\n                    <div style={{marginTop: '10px'}}/>\n                    <RadioCustom text=\"방식\" options={videoOptions} value={content.video.type} func={e=>changeVideoOption(e)}/>\n                    {videoType()}\n                    </>\n                )\n            case 'mockup':\n                MockupTrue()\n                return(\n                    <>\n                    <div className=\"edit-element\">\n                        <div className=\"func-title\">\n                         디바이스 \n                        </div>\n                    </div> \n                    <div className='mockup-select'>\n                    <Select  \n                    className='select_list'\n                    iconSize='none'\n                    onChange={e=>mockOption(e.target.value)}\n                    bg='white'\n                    borderColor='rgba(0, 0, 0, 0.08)'\n                    color='gray'>\n                    <option value='mobile'>모바일</option>\n                    <option value='tablet'>태블릿</option>\n                    <option value='desktop'>데스크탑</option>\n                    <option value='mobile2'>모바일 2대</option>\n                    <option value='desk+mob'>데스크탑 + 모바일</option>                       \n                </Select>\n                    </div>\n                    {returnMockup()}\n                    </>\n                )\n        }\n    }\n\n\n    return (\n        <OpenCloseCustom title=\"콘텐츠\">\n            <RadioCustom options={contentsOptions} value={content.contents.type} func={e => changeContentOption(e)} />                 \n            {\n                returnImageOrVideoAdd()\n            } \n        </OpenCloseCustom>\n    )\n}\n\nexport default Contents\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/ElementsTable.js",["995","996","997"],"import React, {useContext} from 'react'\nimport { MyContext } from '../../../../../pages/Make/MakePageV2'\nimport {EditCheckbox} from '../../tools/Custom/CheckBoxCustom'\nimport produce from 'immer'\nimport './ElementsTable.css'\n\nfunction ElementsTable({elements, content}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    return (\n        <div className=\"one-element\">\n            <div className=\"edit-element__box\">\n                <div className=\"edit-element__title\">\n                    요소\n                </div>\n                <div>\n                    {elements.map((item,index) => {\n                        return(\n                            <div className=\"element__container\" key={index}>\n                                <EditCheckbox value={item.use} func={item.func} />\n                                <div className=\"element_list_text\">\n                                    {item.title}\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ElementsTable\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/EditDesign.js",["998"],"import React, {useState, useContext} from 'react'\nimport { MyContext } from '../../../../../pages/Make/MakePageV2'\nimport RadioCustom from '../../tools/Custom/RadioCustom'\nimport produce from 'immer';\nimport ColorCustom from '../../tools/Custom/ColorCustom'\nimport TextSizeCustom from '../../tools/func/TextSizeCustom'\nimport OpenCloseCustom from '../../tools/Custom/OpenCloseCustom'\nimport BoxCustom from '../../tools/Custom/BoxCustom'\nimport SliderCustom from '../../tools/Custom/SliderCustom'\nimport OnOffCustom from '../../tools/Custom/OnOffCustom'\nimport FuncContentImg from '../../tools/func/FuncContentImg'\nimport {Phone} from '@styled-icons/bootstrap'\nimport {Desktop} from '@styled-icons/fa-solid'\n\nconst alignOptions = [\n    { label: '왼쪽', value: 'left' },\n    { label: '중앙', value: 'center' },\n]\n\nconst backOptions = [\n    { label: '단색', value: 'color' },\n    { label: '이미지', value: 'image'},\n]\n\nconst shapeOptions = [\n    { label: '사각형', value: 0 },\n    { label: '약간 둥글게', value: 5 },\n    { label: '많이 둥글게', value: 50 },\n]\n\nfunction EditDesign({content}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    // 콘텐츠 - 이미지 업로드\n    const onChangeContentImage= e => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].backgroundImage.attachment = result;             \n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    // 콘텐츠 - 이미지 삭제\n    const RemoveImage = () => {\n        action.setContents(produce(state.contents, draft=>{\n            draft[state.secNum].backgroundImage.attachment = '';\n        }))\n    }\n\n    const backgroundColorOrImage = () => {\n        switch(content.backgroundType){\n            case 'color':\n                return(\n                        <>\n                            <ColorCustom text={\"배경 색상\"} value={content.backgroundColor} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].backgroundColor = e\n                            }))} />\n                        </>\n                )           \n            case 'image':\n                return(\n                    <>\n                        <FuncContentImg text=\"이미지\" subtext=\"최대 5MB 업로드 가능\" value={content.backgroundImage.attachment} func={e => onChangeContentImage(e)} removeFunc={e => RemoveImage(e)}/>\n                        <OnOffCustom value={content.backgroundImage.overlay} text=\"오버레이\" func={e=>action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].backgroundImage.overlay = !content.backgroundImage.overlay;\n                        }))} />\n                        {\n                            content.backgroundImage.overlay && \n                            <ColorCustom text={\"배경 색상\"} value={content.backgroundColor} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].backgroundColor = e\n                            }))} />\n                        }\n                    </>\n                )\n            default:\n                return(<></>)\n        }\n    }\n    \n    return (\n        <div>\n            <OpenCloseCustom title=\"배경\">\n                <RadioCustom options={backOptions} value={content.backgroundType} func={e=>action.setContents(produce(state.contents, draft => {\n                    draft[state.secNum].backgroundType = e;\n                }))} />\n                { \n                    backgroundColorOrImage() \n                }\n            </OpenCloseCustom>\n            <OpenCloseCustom title=\"제목\">\n                <ColorCustom text=\"색상\" value={content.title.color} func={e => action.setContents(produce(state.contents, draft => {\n                    draft[state.secNum].title.color = e;\n                }))} />\n                <RadioCustom text=\"정렬\" options={alignOptions} value={content.title.align} func={e => action.setContents(produce(state.contents, draft => {\n                    draft[state.secNum].title.align = e;\n                }))} />\n                <TextSizeCustom text=\"크기\" value={content.title.size} func={e => action.setContents(produce(state.contents, draft => {\n                    draft[state.secNum].title.size = e;\n                }))} />\n            </OpenCloseCustom>\n            <OpenCloseCustom title=\"본문\">\n                <ColorCustom text=\"색상\" value={content.desc.color} func={e => action.setContents(produce(state.contents, draft => {\n                    draft[state.secNum].desc.color = e;\n                }))} />\n                <RadioCustom text=\"정렬\" options={alignOptions} value={content.desc.align} func={e => action.setContents(produce(state.contents, draft => {\n                    draft[state.secNum].desc.align = e;\n                }))} />\n                <TextSizeCustom text=\"크기\" desc value={content.desc.size} func={e => action.setContents(produce(state.contents, draft => {\n                    draft[state.secNum].desc.size = e;\n                }))} />\n            </OpenCloseCustom>\n            <OpenCloseCustom title=\"여백\">\n                <SliderCustom top=\"상단 여백\" value={content.padding.top} max={40} func={e => action.setContents(produce(state.contents, draft => {\n                    draft[state.secNum].padding.top = e;\n                }))}/>\n                <SliderCustom top=\"하단 여백\" value={content.padding.bottom} max={40} func={e => action.setContents(produce(state.contents, draft => {\n                    draft[state.secNum].padding.bottom = e;\n                }))}/>\n            </OpenCloseCustom> \n            <OpenCloseCustom title=\"박스\">\n                <OnOffCustom text=\"박스 사용\" value={content.box.use} func={(e) => action.setContents(produce(state.contents, draft => {\n                    draft[state.secNum].box.use = !content.box.use;\n                }))} />\n                {\n                    content.box.use && <>\n                        <ColorCustom text=\"색상\" value={content.box.backgroundColor} func={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].box.backgroundColor = e;\n                        }))} />\n                        <RadioCustom text=\"테두리\" options={shapeOptions} value={content.box.borderRadius} func={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].box.borderRadius = e;\n                        }))} />\n                    </>\n                }\n            </OpenCloseCustom>\n            <BoxCustom title=\"반응형\">\n                <div className=\"edit-element\">\n                    <div className=\"edit-element__one\" style={{flexDirection: 'column'}}>\n                        <div className=\"edit-element__left\">반응형</div> \n                        <div className=\"radio-container\" style={{justifyContent:'center'}}>\n                            <div className={content.responsive.pc ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].responsive.pc = !content.responsive.pc\n                            }))}>\n                                <Desktop size=\"30\"/>\n                                <div className=\"radio-shape-text\">\n                                    PC\n                                </div>\n                            </div>\n                            <div className={content.responsive.mobile ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].responsive.mobile = !content.responsive.mobile\n                            }))}>\n                                <Phone size=\"30\"/>\n                                <div className=\"radio-shape-text\">\n                                    모바일\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{marginTop:'8px'}}>\n                            {\n                                !content.responsive.pc && !content.responsive.mobile ? \n                                <div>\n                                    이 섹션은 유저에게 보이지 않습니다.\n                                </div>\n                                :\n                                !content.responsive.pc ?\n                                <div>\n                                    이 섹션은 PC에서는 보이지 않습니다.\n                                </div>\n                                :\n                                !content.responsive.mobile ?\n                                <div>\n                                    이 섹션은 모바일에서는 보이지 않습니다.\n                                </div>\n                                :<></>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </BoxCustom>   \n        </div>\n    )\n}\n\nexport default EditDesign\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/Layout.js",["999"],"import React, {useContext} from 'react'\nimport { MyContext } from '../../../../../pages/Make/MakePageV2'\nimport produce from 'immer';\nimport OpenCloseCustom from '../../tools/Custom/OpenCloseCustom'\nimport RadioCustom from '../../tools/Custom/RadioCustom'\n\nconst layout3Options = [\n    {label: '1', value: 1},\n    {label: '2', value: 2},\n    {label: '3', value: 3},\n]\nconst layout4Options = [\n    {label: '1', value: 1},\n    {label: '2', value: 2},\n    {label: '3', value: 3},\n    {label: '4', value: 4},\n]\n\nconst alignOptions = [\n    { label: '왼쪽', value: 'left' },\n    { label: '중앙', value: 'center' },\n    { label: '오른쪽', value: 'right' },\n]\n\nfunction Layout({content, version, foot, setFoot}) {\n\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const ReturnLayout = () => {\n        switch(version){\n            case 'main':\n                return(\n                    <>\n                    {\n                        state.isPhone ? \n                        <>\n                            <RadioCustom layout='on' version='two' options={layout4Options} value={content.mobile.layout} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].mobile.layout = e;\n                            }))} />\n                            <RadioCustom text=\"정렬\" options={alignOptions} value={content.mobile.align} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].mobile.align = e;\n                            }))} />\n                        </>\n                        :\n                        <RadioCustom layout='on' version='main' options={layout4Options} value={content.layout} func={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].layout = e;\n                        }))} />\n                    }\n                    </>\n                )\n            case 'detail':\n                return(\n                    <>\n                    {\n                        state.isPhone ? \n                        <>\n                            <RadioCustom layout='on' version='two' options={layout4Options} value={content.mobile.layout} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].mobile.layout = e;\n                            }))} />\n                            <RadioCustom text=\"정렬\" options={alignOptions} value={content.mobile.align} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].mobile.align = e;\n                            }))} />\n                        </>\n                        :\n                        <RadioCustom layout='on' version='main' options={layout4Options} value={content.layout} func={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].layout = e;\n                        }))} />\n                    }\n                    </>\n                )\n            case 'cta':\n                return(\n                    <>\n                    {\n                        state.isPhone ? \n                        <>\n                            <RadioCustom layout='on' version='two' options={layout4Options} value={content.mobile.layout} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].mobile.layout = e;\n                            }))} />\n                            <RadioCustom text=\"정렬\" options={alignOptions} value={content.mobile.align} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].mobile.align = e;\n                            }))} />\n                        </>\n                        :\n                        <RadioCustom layout='on' version='cta' options={layout4Options} value={content.layout} func={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].layout = e;\n                        }))} />\n                    }\n                    </>\n                )\n            case 'apply':\n                return(\n                    <RadioCustom layout='on' version='cta' options={layout3Options} value={content.layout} func={e => action.setContents(produce(state.contents, draft => {\n                        draft[state.secNum].layout = e;\n                    }))} />\n                )\n            case 'app':\n                return(\n                    <RadioCustom layout='on' version='cta' options={layout3Options} value={content.layout} func={e => action.setContents(produce(state.contents, draft => {\n                        draft[state.secNum].layout = e;\n                    }))} />\n                )\n            case 'text': \n                return(\n                    <RadioCustom layout='on' version='text' options={layout3Options} value={content.layout} func={e => action.setContents(produce(state.contents, draft => {\n                        draft[state.secNum].layout = e;\n                    }))} />\n                )\n            case 'footer':\n                return(\n                    <>\n                    <RadioCustom layout='on' version='footer' options={layout3Options} value={foot.layout} func={e => {setFoot(produce(foot, draft => {\n                            draft.layout = e;\n                        }))}} />\n                    </>\n                )\n        }\n    }\n\n    return (\n        <OpenCloseCustom title=\"레이아웃\" subtext={state.isPhone ? '모바일' : 'PC'}>\n            {ReturnLayout()}\n        </OpenCloseCustom>\n    )\n}\n\nexport default Layout\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/Element.js",["1000","1001","1002"],"import React, {useContext, useState} from 'react'\nimport {Upload} from '@styled-icons/bootstrap';\n\nfunction Element({content, item, index, gallery}) {\n\n    return (\n        <>\n            <div className=\"centeras\" style={{justifyContent: `${content.align}`}}>\n                <div style={{width:`${content.element.size}px`, height:`${content.element.size}px`, position:'relative', cursor:'pointer'}}>\n                {\n                content.element.type === 'image' ? <>\n                { item.attachment ? \n                    <img src={item.attachment} style={{width:`${content.element.size}px`, height:`${content.element.size}px`, borderRadius:`${content.element.borderRadius}px`}}/> \n                    :\n                    <div className=\"feature-upload-button\" style={{borderRadius:`${content.element.borderRadius}px`, backgroundColor:`${content.element.backgroundColor}`}}>\n                        <Upload size=\"25\" />\n                    </div>\n                }</> : \n                <>\n                <div className=\"feature-upload-button\" style={{borderRadius:`${content.element.borderRadius}px`, backgroundColor:`${content.element.backgroundColor}`}}>\n                    {item.icon ? \n                        <>{item.icon}</> \n                        :\n                        <Upload size=\"25\" />\n                    }\n                </div>\n                </>\n                }\n            </div> \n        </div>\n        </>\n    )\n}\n\nexport default Element\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/TitleDesc.js",["1003","1004","1005","1006"],"import React, {useContext, useEffect, useState, useRef} from 'react'\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\n\nfunction TitleDesc({content, setting}) {\n\n    return (\n        <div className=\"title-desc__container\">\n            {\n                content.title.use &&\n                <div style={{width:'100%'}}>\n                    <TextareaAutosize \n                        className=\"text-no-input\" \n                        style={{\n                            fontFamily:`${setting.font}`, \n                            color:`${content.title.color}`, \n                            fontSize:`${content.title.size/20}em`, \n                            textAlign:`${content.title.align}`,\n                        }}\n                        value = {content.title.text}\n                        />\n                </div>\n            }\n            {\n                content.desc.use &&\n                <div style={{width:'100%', marginTop:'10px'}}>\n                    <TextareaAutosize \n                        className=\"text-no-input\" \n                        style={{\n                            fontFamily:`${setting.smallFont}`, \n                            color:`${content.desc.color}`, \n                            fontSize:`${content.desc.size/20}em`, \n                            // boxSizing:`border-box`, \n                            textAlign:`${content.desc.align}`,\n                        }}\n                        value = {content.desc.text}\n                        />\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default TitleDesc\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/AnimationDiv.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/TextAuto.js",["1007","1008"],"import React, {useContext} from 'react'\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport { UserContext } from '../../../../pages/UserLanding/UserLandingPage'\n\nfunction TextAuto({small, value, color, align, setting}) {\n    const {state, action} = useContext(UserContext)\n    \n    return (\n        <>\n        {\n            small ?\n            <div \n                className=\"text-no-input feature-desc\" \n                style={{\n                    fontFamily:`${state.setting.smallFont}`, \n                    color:`${color}`, \n                    textAlign:`${align}`,\n                }}>\n                    {value}\n                </div>\n            :\n            <div \n                className=\"text-no-input feature-title\" \n                style={{\n                    fontFamily:`${state.setting.font}`, \n                    color:`${color}`, \n                    textAlign:`${align}`,\n                }}>\n                    {value}\n                </div>\n        }\n        </>\n    )\n}\n\nexport default TextAuto\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/QnaOpenClose.js",["1009","1010","1011","1012"],"import React, { useContext, useState, useRef } from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport { styled } from '@mui/material/styles';\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\nimport MuiAccordion from '@mui/material/Accordion';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport TextAuto from './TextAuto'\nimport produce from 'immer'\nimport { ChakraProvider } from '@chakra-ui/react'\n\nconst Accordion = styled((props) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n    border: '1px solid rgba(0,0,0,0.2)',\n    width:'90%',\n    borderRadius:10,\n    backgroundColor:\n      theme.palette.mode === 'dark'\n        ? 'rgba(255, 255, 255, .05)'\n        : 'rgba(0, 0, 0, 0)',\n}));\n\nconst AccordionSummary = styled((props) => (\n  <MuiAccordionSummary\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\n    {...props}\n  />\n))(({ theme }) => ({\n  flexDirection: 'row-reverse',\n  '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n    transform: 'rotate(180deg)',\n  },\n  '& .MuiAccordionSummary-content': {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\n  padding: theme.spacing(0.3),\n}));\n\n// 아래는 열고 닫히는 애니메이션 효과까지 적용\nexport const AccordionCustom = (props) => {\n  return (\n    <div className=\"centera\">\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n            <div>\n                {props.title}\n            </div>\n        </AccordionSummary>\n        <AccordionDetails>\n            <div>\n                {props.children}\n            </div>\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n}\n\nconst OpenCloseCustom = (props) => {\n  /**\n   * title, tooltip, preseen 설정 가능\n   */\n  const [open, setOpen] = useState(props.open)\n  const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n  return (\n    <div className=\"one-element\">\n      <div className={props.type === 'card' ? 'accordion__card' : 'accordion__plain'}>\n        <div className=\"accordion__header-qna\" onClick={() => setOpen(!open)}>\n          <div className=\"edit-element\">\n            <ChakraProvider>\n            <div className=\"accordion__title\">\n              <div className=\"title_text qna__question\" style={{color:`${props.color}`, width:'100%'}}>\n              <span className=\"qna__word\">Q.</span>\n                <div style={{width:'100%'}}>\n                  <TextAuto \n                  value={props.title} \n                  color={props.color} align=\"start\" />\n                  </div>\n              </div> \n            </div>\n            </ChakraProvider>\n            <div className=\"centera\" style={{justifyContent: 'end', width:'20%'}}>\n              { open ? <ExpandMoreIcon style={{transform:'rotate(180deg)'}} /> : <ExpandMoreIcon />}\n            </div>\n          </div>\n        </div>\n        <div className=\"accordion__body\" style={{display:`${open ? 'flex' : 'none'}`, flexDirection:'row', justifyContent:'start'}}>\n         {props.children}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OpenCloseCustom\n\n\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/ReturnButton.js",["1013","1014","1015","1016","1017","1018"],"import React, { useContext, useState, useRef } from 'react'\nimport AutosizeInput from 'react-input-autosize';\nimport appstorebutton from '../../../../tools/img/appstorebutton.png'\nimport playstorebutton from '../../../../tools/img/playstorebutton.png'\nimport {dbService} from '../../../../tools/fbase'\nimport produce from 'immer'\n\nfunction ReturnButton({content, setting}){\n    const [values, setValues] = useState(['', '', '', '', ''])\n\n    const moveToPage = async () => {\n        // 파이어베이스에 기록\n        await dbService.collection('datas').add({\n            urlId:setting.urlId,\n            type:'click',\n            from:content.name,\n            created:Date.now(),\n        })\n    }\n\n    const apply = async () => {\n        // 파이어베이스에 기록\n        await dbService.collection('datas').add({\n            urlId:setting.urlId,\n            type:'apply',\n            values:values,\n            from:content.name,\n            created:Date.now(),\n        })\n        alert(\"완료되었습니다.\");\n        setValues(['','','','',''])\n    }\n\n    const CustomCtaButton = () => {\n        return (\n        <div className=\"cta-button-made\" style={{\n            marginTop:`${content.ctaApplyInputs.length > 1 ? '8px' : '0px'}`,\n            borderRadius:`${setting.cta.borderRadius}px`,\n            backgroundColor:`${setting.cta.backgroundColor}`,\n            color:`${setting.cta.color}`,\n            boxShadow:`${setting.cta.shadow ? '1px 2px 4px rgba(0,0,0,0.2)' : 'none'}`,\n            border:`${setting.cta.border ? `1px solid ${setting.cta.borderColor}` : 'none'}`\n        }} onClick={() => {\n            if(content.button.ctaOption === 'link'){\n                moveToPage()\n                window.open(\n                    content.button.ctaLink,\n                    '_blank' // <- This is what makes it open in a new window.\n                );\n            }else{\n                apply()\n            }\n        }}>\n        <div className=\"text-input-flex pointer\" \n            style={{fontFamily:`${setting.smallFont}`, borderRadius:`${setting.cta.borderRadius}px`, backgroundColor:`${setting.cta.backgroundColor}`,}}>\n                {content.button.ctaText}\n            </div>\n    </div>)}\n\n    const CustomGhostButton = () => {\n        return (\n        <div className=\"cta-button-made\" style={{\n            marginTop:`${content.ctaApplyInputs.length > 1 ? '8px' : '0px'}`,\n            marginLeft:`${ content.button.ctaUse ? '5px' : '0px'}`,\n            borderRadius:`${setting.ghost.borderRadius}px`,\n            backgroundColor:`${setting.ghost.backgroundColor}`,\n            color:`${setting.ghost.color}`,\n            boxShadow:`${setting.ghost.shadow ? '1px 2px 4px rgba(0,0,0,0.2)' : 'none'}`,\n            border:`${setting.ghost.border ? `1px solid ${setting.ghost.borderColor}` : 'none'}`\n        }} onClick={() => {\n                if(content.button.ghostOption === 'link'){\n                    moveToPage()\n                    window.open(\n                        content.button.ghostLink,\n                        '_blank' // <- This is what makes it open in a new window.\n                    );\n                }else{\n                    apply()\n                }\n            }}>\n        <div className=\"text-input-flex pointer\" \n            inputStyle={{fontFamily:`${setting.smallFont}`, borderRadius:`${setting.ghost.borderRadius}px`,  backgroundColor:`${setting.ghost.backgroundColor}`}}>\n                { content.button.ghostText } \n            </div>\n    </div>)}\n\n    const returnCtaInputs = () => {\n        return(\n            <div className=\"centera\" style={{flexDirection:`${content.ctaApplyInputs.length > 1 ? 'column' : 'row'}`}}>\n                {content.ctaApplyInputs.map((item, index) => {\n                    return(\n                        <input className=\"input-placeholder\" value={values[index]} placeholder={item} key={index} \n                        style={{marginTop:`${content.ctaApplyInputs.length > 1 ? '8px' : '0px'}`}}\n                        onChange={e => setValues(produce(values, draft => {\n                            draft[index] = e.currentTarget.value\n                        }))} />\n                    )\n                })}\n                {CustomCtaButton()}\n            </div>\n        )\n    }\n\n    const returnGhostInputs = () => {\n        return(\n            <div className=\"centera\" style={{flexDirection:`${content.ghostApplyInputs.length > 1 ? 'column' : 'row'}`}}>\n                {content.ghostApplyInputs.map((item, index) => {\n                    return(\n                        <input className=\"input-placeholder\" value={values[index]} placeholder={item} key={index} \n                        style={{marginTop:`${content.ghostApplyInputs.length > 1 ? '8px' : '0px'}`}}\n                        onChange={e => setValues(produce(values, draft => {\n                            draft[index] = e.currentTarget.value\n                        }))} />\n                    )\n                })}\n                {CustomGhostButton()}\n            </div>\n        )\n    }\n\n    if(content.button.use){\n        // ctaOption === 'link' => 버튼 클릭 시 링크 이동\n        // ctaOption === 'apply' => 신청\n\n        {/* <CustomCtaButton className=\"action-button\" onClick={() => {window.open(`${content.button.ctaLink}`)}}> */}\n        return(\n            <div style={{width:'100%'}}>\n                <div className=\"button__container\" style={{justifyContent:`${content.button.align}`}}>\n                    {\n                        content.button.ctaUse && \n                            ( content.button.ctaOption === 'link' ? CustomCtaButton() : returnCtaInputs() )\n                    }\n                    {/* onClick={() => {window.open(`${content.button.ghostLink}`)}} */}\n                    {\n                        content.button.ghostUse && \n                            ( content.button.ghostOption === 'link' ? CustomGhostButton() : returnGhostInputs() )\n                    }\n                </div>\n                {\n                    content.appButton.use && \n                    <div className=\"button__container\" style={{justifyContent:`${content.button.align}`}}>\n                        {\n                            content.appButton.google.length > 0 && \n                                <img src={playstorebutton} className=\"store-button\" onClick={e => {\n                                    window.open(\n                                        content.appButton.google,\n                                        '_blank' // <- This is what makes it open in a new window.\n                                      )\n                                      moveToPage()\n                                    }}/>\n                        }\n                        {/* onClick={() => {window.open(`${content.button.ghostLink}`)}} */}\n                        {\n                            content.appButton.apple.length > 0 && \n                                <img src={appstorebutton} className=\"store-button\" onClick={e => {\n                                    window.open(\n                                        content.appButton.google,\n                                        '_blank' // <- This is what makes it open in a new window.\n                                      )\n                                      moveToPage()\n                                    }}/>\n                        }\n                    </div>\n                }\n            </div>\n        )\n    }else{\n        return(<></>)\n    }\n}\n\nexport default ReturnButton","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/ImageOrSlide.js",["1019","1020","1021"],"import React, {useRef} from 'react';\nimport ImageCarousel from './FuncImageCarousel'\n\nimport Phone from '../../../../tools/img/phone.png'\nimport ourA from '../../../../tools/img/005.png'\n\nfunction ImageOrSlide({content}){\n    const imgRef=useRef(null)\n    if(content.contents.use){\n    // 동영상 - 유튜브 링크\n    if(content.video.type==='youtube' && content.contents.type === 'video') {\n        return(\n            <div ref={imgRef} className=\"video-area\" style={{ width:`${content.image.size}%`, height:`${imgRef.current.scrollWidth * 0.56}px` }}>\n                <iframe className=\"video-content\" src={`${content.video.link}`} frameborder=\"0\" allow='autoplay' allowfullscreen/>\n            </div>\n        )}\n    // 동영상 - 비디오 업로드\n    if(content.video.type==='base' && content.contents.type === 'video')\n        return(\n            <video \n            className=\"video\"\n            src={`${content.video.file}`} \n            type=\"video/mp4\" \n            autoPlay\n            muted\n            loop\n            style={{borderRadius:`${content.image.border}%`, width:`${content.image.size}%`, height:'auto'}}\n            >\n            </video>\n        )\n    // 슬라이드\n    if(content.image.slide  && content.contents.type === 'slide')\n        return(\n            <div className=\"slide-box\">\n                <ImageCarousel content={content}/>\n            </div>\n        )\n    // 이미지\n    if(content.image.oneImg  && content.contents.type === 'image')\n        return (\n            <img \n                src={`${content.image.attachment === '' ? ourA : content.image.attachment}`} \n                className=\"image\" \n                style={{borderRadius:`${content.image.border}px`, width:`${content.image.size}%`, boxShadow: `${content.image.shadowValue}`}}\n                />\n        )\n    // 목업\n    if(content.mockup.use  && content.contents.type === 'mockup')\n        return(\n            <div className=\"mobile-container\">\n                {/* <img className=\"mobile-ex\" src={Phone} alt=\"목업틀\"\n                    style={{width: `${content.image.size}%`}}\n                />\n                {content.mockup.file === '' ?  \n                    <></>\n                    : \n                    <img \n                        className=\"upload-mobile\" \n                        src={`${content.mockup.file}`} \n                        style={{ width:`${content.image.size}px`}}\n                    />\n                } */}\n            </div>\n        )\n    }else{\n        return(<></>)\n    }\n}\n\nexport default ImageOrSlide","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/IconTable.js",["1022"],"import * as bi from '@styled-icons/boxicons-logos'\nimport * as bs from '@styled-icons/bootstrap'\nimport OverflowScrolling from 'react-overflow-scrolling';\n\nimport React, {useState} from 'react'\n\nconst ICONSIZE = 30;\n\nexport const icons = [\n    {\n        icon:<bs.StarFill size={ICONSIZE} />,\n        name: \"StarFill\"\n    },\n    {\n        icon:<bs.BookmarkStarFill size={ICONSIZE} />,\n        name: \"BookmarkStarFill\"\n    },\n    {\n        icon:<bs.BookFill size={ICONSIZE} />,\n        name: \"BookFill\"\n    },\n    {\n        icon:<bs.CardImage size={ICONSIZE}/>,\n        name:'CardImage'\n    },\n    {\n        icon:<bs.AlarmFill size={ICONSIZE}/>,\n        name:'AlarmFill'\n    },\n    {\n        icon:<bs.BagFill size={ICONSIZE}/>,\n        name:'BagFill'\n    },\n    {\n        icon:<bs.BasketFill size={ICONSIZE}/>,\n        name:'BasketFill'\n    },\n    {\n        icon:<bs.Basket3Fill size={ICONSIZE}/>,\n        name:'Basket3Fill'\n    },\n    {\n        icon:<bs.BellFill size={ICONSIZE}/>,\n        name:'BellFill'\n    },\n    {\n        icon:<bs.BoxSeam size={ICONSIZE}/>,\n        name:'BoxSeam'\n    },\n    {\n        icon:<bs.CalculatorFill size={ICONSIZE}/>,\n        name:'CalculatorFill'\n    },\n    {\n        icon:<bs.CalendarEventFill size={ICONSIZE}/>,\n        name:'CalendarEventFill'\n    },\n    {\n        icon:<bs.CameraFill size={ICONSIZE}/>,\n        name:'CameraFill'\n    },\n    {\n        icon:<bs.CameraVideoFill size={ICONSIZE}/>,\n        name:'CameraVideoFill'\n    },\n    {\n        icon:<bs.CapslockFill size={ICONSIZE}/>,\n        name:'CapslockFill'\n    },\n    {\n        icon:<bs.CartFill size={ICONSIZE}/>,\n        name:'CartFill'\n    },\n    {\n        icon:<bs.ChatLeftTextFill size={ICONSIZE}/>,\n        name:'ChatLeftTextFill'\n    },\n    {\n        icon:<bs.ChatDotsFill size={ICONSIZE}/>,\n        name:'ChatDotsFill'\n    },\n    {\n        icon:<bs.Check2All size={ICONSIZE}/>,\n        name:'Check2All'\n    },\n    {\n        icon:<bs.Check2Circle size={ICONSIZE}/>,\n        name:'Check2Circle'\n    },\n    {\n        icon:<bs.Dice5Fill size={ICONSIZE}/>,\n        name:'Dice5Fill'\n    },\n    {\n        icon:<bs.DisplayFill size={ICONSIZE}/>,\n        name:'DisplayFill'\n    },\n    {\n        icon:<bs.EmojiSmileFill size={ICONSIZE}/>,\n        name:'EmojiSmileFill'\n    },\n    {\n        icon:<bs.FileEarmarkArrowDownFill size={ICONSIZE}/>,\n        name:'FileEarmarkArrowDownFill'\n    },\n    {\n        icon:<bs.FlagFill size={ICONSIZE}/>,\n        name:'FlagFill'\n    },\n    {\n        icon:<bs.Front size={ICONSIZE}/>,\n        name:'Front'\n    },\n    {\n        icon:<bs.GearFill size={ICONSIZE}/>,\n        name:'GearFill'\n    },\n    {\n        icon:<bs.GeoAltFill size={ICONSIZE}/>,\n        name:'GeoAltFill'\n    },\n    {\n        icon:<bs.GiftFill size={ICONSIZE}/>,\n        name:'GiftFill'\n    },\n    {\n        icon:<bs.HandThumbsUpFill size={ICONSIZE}/>,\n        name:'HandThumbsUpFill'\n    },\n    {\n        icon:<bs.HeartFill size={ICONSIZE}/>,\n        name:'HeartFill'\n    },\n    {\n        icon:<bs.HouseDoorFill size={ICONSIZE}/>,\n        name:'HouseDoorFill'\n    },\n    {\n        icon:<bs.InfoCircleFill size={ICONSIZE}/>,\n        name:'InfoCircleFill'\n    },\n    {\n        icon:<bs.LayersFill size={ICONSIZE}/>,\n        name:'LayersFill'\n    },\n    {\n        icon:<bs.PaletteFill size={ICONSIZE}/>,\n        name:'PaletteFill'\n    },\n    {\n        icon:<bs.PlayBtnFill size={ICONSIZE}/>,\n        name:'PlayBtnFill'\n    },\n    {\n        icon:<bs.Printer size={ICONSIZE}/>,\n        name:'Printer siz'\n    },\n    {\n        icon:<bs.TelephoneFill size={ICONSIZE}/>,\n        name:'TelephoneFill'\n    },\n    {\n        icon:<bs.TrashFill size={ICONSIZE}/>,\n        name:'TrashFill'\n    },\n    {\n        icon:<bs.VolumeUpFill size={ICONSIZE}/>,\n        name:'VolumeUpFill'\n    },\n    {\n        icons:<bi.Android size={ICONSIZE} />,\n        name:'Android',\n    },\n    {\n        icons:<bi.Apple size={ICONSIZE} />,\n        name:'Apple',\n    },\n    {\n        icons:<bi.Airbnb size={ICONSIZE} />,\n        name:'Airbnb',\n    },\n    {\n        icons:<bi.FacebookCircle size={ICONSIZE} />,\n        name:'FacebookCircle',\n    },\n    {\n        icons:<bi.PlayStore size={ICONSIZE} />,\n        name:'PlayStore',\n    },\n]\n\nfunction IconTable({func, handleClose}) {\n\n    return(\n        <div style={{height:'200px'}}>\n            <OverflowScrolling className='overflow-scrolling2'>\n            <div className=\"icon-select__container\">\n            {\n                icons.map((item, i) => {\n                    return(\n                        <div className=\"one-icon-select\" onClick={() => {\n                            func(item.name)\n                            handleClose()\n                        }} key={i}>\n                            {item.icon}\n                        </div>\n                    )\n                })\n            }\n            </div>\n            </OverflowScrolling>\n        </div>\n    )\n}\n\nexport default IconTable\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/CheckBoxCustom.js",["1023"],"import React from 'react'\nimport Checkbox from '@mui/material/Checkbox';\nimport {Check} from '@styled-icons/bootstrap';\n\nexport const EditCheckbox = ({value, func}) => {\n    return(\n        <>\n        {/* <Checkbox\n            checked={value || false}\n            value={value || false}\n            onClick={func}\n            inputProps={{ 'aria-label': 'controlled' }}\n        /> */}\n        <div className={value ? 'custom-check' : 'custom-check cc-unclicked'} onClick={func}>\n            <Check color='white' />\n        </div>\n        </>\n    )\n}\n\nfunction CheckboxCustom({text, value, func}) {\n    return(\n        <div className=\"edit-element\">\n            <div className=\"edit-element__one\">\n                <div className=\"edit-element__left\">\n                    {text}\n                </div>\n                <div className=\"edit-element__right\">\n                    <EditCheckbox\n                        value={value || false}\n                        func={func}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CheckboxCustom\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/FuncImageCarousel.js",["1024","1025","1026","1027","1028"],"import React, {useRef, useEffect} from 'react'\nimport Slider from \"react-slick\"\nimport styled from 'styled-components'\n// import prevButton from '../../../../../tools/img/prevButton.png'\n// import nextButton from '../../../../../tools/img/nextButton.png'\n\nconst Prev = styled.img`\nwidth: 50px;\nheight: 50px;\nz-index: 5;\nmargin-left: -40px;\nmargin-top: -30px;\n`\n\nconst Next = styled.img`\nwidth: 50px;\nheight: 50px;\nz-index: 5;\nmargin-right: -40px;\nmargin-top: -30px;\n`\n\n\nfunction FuncImageCarousel({content}) {\n    useEffect(() => {\n        console.log(content.image.border)\n    })\n\n    const imgRef = useRef(null)\n\n    // const PrevArrow=({currentSlide,slideCount,...props})=>(\n    //     <Prev {...props} src={prevButton} className=\"slick-prev\" /> \n    // )\n\n    // const NextArrow=({currentSlide,slideCount,...props})=>(\n    //     <Next {...props} src={nextButton} className=\"slick-next\" /> \n    // )\n\n    const settings = {\n        dots: false, // 캐러셀이미지가 몇번째인지 알려주는 점을 보여줄지 정한다.\n        speed: 500, // 애미메이션의 속도, 단위는 milliseconds\n        slidesToShow: 1, // 한번에 몇개의 슬라이드를 보여줄 지\n        slidesToScroll: 1, // 한번 스크롤시 몇장의 슬라이드를 넘길지\n        // nextArrow: <NextArrow />,\n        // prevArrow: <PrevArrow />,\n        autoplay: true,\n        autoPlaySpeed: 5000,\t\n      };\n\n    return (\n        <div className=\"slide-box\" style={{width:`${content.image.size}px`,borderRadius:`${content.image.border}%`, boxShadow: `${content.image.shadowValue}`}}>\n            <Slider {...settings}> \n            {\n                (content.slide_img.slide1) &&\n                    <img className=\"image\" ref={imgRef} src={`${content.slide_img.slide1}`} style={{width:`${content.image.size}px`,borderRadius:`${content.image.border}%`, boxShadow: `${content.image.shadowValue}`}}/>\n            }\n            {\n                (content.slide_img.slide2) &&\n                    <img className=\"image\" ref={imgRef} src={`${content.slide_img.slide2}`} style={{width:`${content.image.size}px`,borderRadius:`${content.image.border}%`, boxShadow: `${content.image.shadowValue}`}}/>\n            }\n            {\n                (content.slide_img.slide3) &&\n                    <img className=\"image\" ref={imgRef} src={`${content.slide_img.slide3}`} style={{width:`${content.image.size}px`,borderRadius:`${content.image.border}%`, boxShadow: `${content.image.shadowValue}`}}/>\n            }\n            </Slider>\n        </div>\n    )\n\n}\n\nexport default FuncImageCarousel","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/func/FuncSlideImg.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/EditNotice.js",["1029"],"import React, { useContext } from 'react'\nimport { MyContext } from '../../../../../pages/Make/MakePageV2'\nimport produce from 'immer'\nimport OpenCloseCustom from '../../tools/Custom/OpenCloseCustom'\nimport ColorCustom from '../../tools/Custom/ColorCustom'\nimport TextSizeCustom from '../../tools/func/TextSizeCustom'\nimport RadioCustom from '../../tools/Custom/RadioCustom'\n\nconst alignOptions = [\n    { label: '왼쪽', value: 'left' },\n    { label: '중앙', value: 'center' },\n]\n\nconst sizeOptions = [\n    { label: 'small', value: 50 },\n    { label: 'medium', value: 75 },\n    { label: 'large', value: 100 },\n]\n\n\nfunction EditNotice({content}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    return (\n        <OpenCloseCustom title=\"유의 사항 안내\u001d\">\n           <>\n            <ColorCustom text=\"색상\" value={content.caution.color} func={e => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].caution.color = e;\n            }))} />\n            <RadioCustom text=\"정렬\" options={alignOptions} value={content.caution.align} func={e => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].caution.align = e;\n            }))} />\n            <TextSizeCustom text=\"크기\" value={content.caution.size} func={e => action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].caution.size = e;\n            }))} />\n            </>\n        </OpenCloseCustom>\n    )\n}\n\nexport default EditNotice\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/AddGhostButton.js",["1030"],"import React, {useContext} from 'react'\nimport produce from 'immer';\nimport { MyContext } from '../../../../../pages/Make/MakePageV2'\nimport {CustomSwitch} from '../../tools/Custom/OnOffCustom'\nimport RadioCustom from '../../tools/Custom/RadioCustom'\nimport InputCustom from '../../tools/Custom/InputCustom'\nimport ApplyInputCustom from '../../tools/Custom/ApplyInputCustom'\n\nconst buttonOptions = [\n    {label: '링크 연결', value: 'link'},\n    {label: '신청', value: 'apply'},\n]\n\nfunction AddGhostButton({content, num}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const ghostOpen = () => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].button.ghostUse = !content.button.ghostUse}))\n    }\n\n    const changeGhostOption = () => {\n        action.setContents(produce(state.contents, draft => {\n            if (draft[state.secNum].button.ghostOption == 'link')\n                draft[state.secNum].button.ghostOption = 'apply'\n            else\n                draft[state.secNum].button.ghostOption = 'link'\n        }))\n    }\n\n    const returnGhostOptions = () => {\n        switch(content.button.ghostOption){\n            case 'link':\n                return(\n                    <InputCustom placeholder=\"연결하고 싶은 URL을 선택해주세요\" value={content.button.ghostLink} func = {(e) => action.setContents(produce(state.contents, draft => {\n                        draft[state.secNum].button.ghostLink = e\n                    }))} />\n                )\n            case 'apply':\n                return(\n                    <>\n                    {\n                        content.ghostApplyInputs.length > num ?  \n                        <ApplyInputCustom disabled /> \n                        :\n                        <ApplyInputCustom func={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].ghostApplyInputs.push(e)\n                        }))} /> \n                    }\n                    \n                    { content.ghostApplyInputs.length > 0 && \n                    <>\n                        { content.ghostApplyInputs.map((item, index) => {\n                                return(\n                                    <ApplyInputCustom made value={item} func={e => action.setContents(produce(state.contents, draft => {\n                                        if(index === 0 ){\n                                            draft[state.secNum].ghostApplyInputs.shift()\n                                        }else{\n                                            draft[state.secNum].ghostApplyInputs.splice(index, index)\n                                        }\n                                    }))} key={index}/>\n                                )\n                            })\n                        } \n                    </> }\n                    <div className=\"mid-command-light\"> 최대 {num}개의 신청 박스만 생성 가능합니다. \n                    </div>\n                    </>\n                )\n            default:\n                return(\n                <> </>\n                )\n        }\n    }\n\n    return (\n        <>\n        <CustomSwitch text=\"고스트 버튼\" value={content.button.ghostUse} onChange = {e => ghostOpen(e)}/>\n            { content.button.ghostUse && (\n                <>\n                    <RadioCustom options={buttonOptions} value={content.button.ghostOption} func={e => changeGhostOption(e)}/>\n                    {returnGhostOptions()}\n                </>\n            )}\n        </>\n    )\n}\n\nexport default AddGhostButton\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/AddCtaButton.js",["1031","1032"],"import React, {useContext} from 'react'\nimport produce from 'immer';\nimport { MyContext } from '../../../../../pages/Make/MakePageV2'\nimport {CustomSwitch} from '../../tools/Custom/OnOffCustom'\nimport RadioCustom from '../../tools/Custom/RadioCustom'\nimport InputCustom from '../../tools/Custom/InputCustom'\nimport ApplyInputCustom from '../../tools/Custom/ApplyInputCustom'\n\nconst buttonOptions = [\n    {label: '링크 연결', value: 'link'},\n    {label: '신청', value: 'apply'},\n]\n\nfunction AddCtaButton({content, num}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const ctaOpen = () => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].button.ctaUse = !content.button.ctaUse}))\n    }\n\n    const changeCtaOption = () => {\n        action.setContents(produce(state.contents, draft => {\n            if (draft[state.secNum].button.ctaOption == 'link')\n                draft[state.secNum].button.ctaOption = 'apply'\n            else\n                draft[state.secNum].button.ctaOption = 'link'\n        }))\n    }\n\n    const returnCtaOptions = () => {\n        switch(content.button.ctaOption){\n            case 'link':\n                return(\n                    <InputCustom placeholder=\"연결하고 싶은 URL을 선택해주세요\" value={content.button.ctaLink} func = {(e) => action.setContents(produce(state.contents, draft => {\n                        draft[state.secNum].button.ctaLink = e\n                    }))} />\n                )\n            case 'apply':\n                return(\n                    <>\n                    {\n                        content.ctaApplyInputs.length == num ?  \n                        <ApplyInputCustom disabled /> \n                        :\n                        <ApplyInputCustom func={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].ctaApplyInputs.push(e)\n                        }))} /> \n                    }\n                    \n                    { content.ctaApplyInputs.length > 0 && \n                    <>\n                        { content.ctaApplyInputs.map((item, index) => {\n                                return(\n                                    <ApplyInputCustom made value={item} func={e => action.setContents(produce(state.contents, draft => {\n                                        if(index === 0 ){\n                                            draft[state.secNum].ctaApplyInputs.shift()\n                                        }else{\n                                            draft[state.secNum].ctaApplyInputs.splice(index, index)\n                                        }\n                                    }))} key={index}/>\n                                )\n                            })\n                        } \n                    </> }\n                    <div className=\"mid-command-light\"> 최대 {num}개의 신청 박스만 생성 가능합니다. \n                    </div>\n                    </>\n                )\n            default:\n                return(\n                <> </>\n                )\n        }\n    }\n\n    return (\n        <>\n        <CustomSwitch text=\"CTA 버튼\" value={content.button.ctaUse} onChange = {e => ctaOpen(e)}/>\n            { content.button.ctaUse && (\n                <>\n                    <RadioCustom options={buttonOptions} value={content.button.ctaOption} func={e => changeCtaOption(e)}/>\n                    {returnCtaOptions()}\n                </>\n            )}\n        </>\n    )\n}\n\nexport default AddCtaButton\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/ApplyInputCustom.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/InnerTemplates.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/AddMockup.js",["1033","1034","1035","1036","1037"],"import React,{ useContext } from 'react'\nimport produce from 'immer';\nimport RadioCustom from '../../tools/Custom/RadioCustom'\nimport { MyContext } from '../../../../../pages/Make/MakePageV2'\nimport AddContentImg from '../../tools/func/FuncContentImg'\nimport {CustomSwitch} from '../../tools/Custom/OnOffCustom'\nimport { Select } from '@chakra-ui/react'\nimport './Contents.css'\nimport SliderCustom from '../../tools/Custom/SliderCustom'\nimport FuncContentImg from '../../tools/func/FuncContentImg'\n\nfunction AddMockup({content}){\n\n    const {state, action} = useContext(MyContext) \n\n    // 타입 관리\n    const mockOption = e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].mockup.type = e;\n        }))\n    }\n\n    // 업로드 관리\n    // 목업 모바일 이미지 업로드\n    const uploadMobile = e => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].mobile.file = result;               \n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    // 목업 데스크탑 이미지 업로드\n    const uploadDesk= e => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].desktop.file = result;               \n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    // 목업 모바일 1 이미지 업로드\n    const uploadM1= e => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].mobile2.file1 = result;               \n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    // 목업 모바일 2 이미지 업로드\n    const uploadM2= e => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].mobile2.file2 = result;               \n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    // 목업 모바일 이미지 업로드\n    const uploadDM1= e => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].deskMobile.file1 = result;               \n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    // 목업 데스크탑 이미지 업로드\n    const uploadDM2= e => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].deskMobile.file2 = result;               \n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    const setMobileSize = e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].mobile.size = e\n        }))\n    }\n\n    // 사이즈 관리\n    const setDesktopSize = e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].desktop.size = e\n        }))\n    }\n    const setM2Size =e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].mobile2.size = e\n        }))\n    }\n    const setMSize =e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].deskMobile.size1 = e\n        }))\n    }\n    const setDSize =e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].deskMobile.size2 = e\n        }))\n    }\n\n    // 설정 관리\n    const MobileTrue = () => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].mobile.use = true\n            draft[state.secNum].tablet.use = false\n            draft[state.secNum].desktop.use = false\n            draft[state.secNum].mobile2.use = false\n            draft[state.secNum].deskMobile.use = false\n        }))\n    }\n    const TabletTrue = () => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].mobile.use = false\n            draft[state.secNum].tablet.use = true\n            draft[state.secNum].desktop.use = false\n            draft[state.secNum].mobile2.use = false\n            draft[state.secNum].deskMobile.use = false\n        }))\n    }\n    const DesktopTrue = () => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].mobile.use = false\n            draft[state.secNum].tablet.use = false\n            draft[state.secNum].desktop.use = true\n            draft[state.secNum].mobile2.use = false\n            draft[state.secNum].deskMobile.use = false\n        }))\n    }\n    const Mobile2True = () => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].mobile.use = false\n            draft[state.secNum].tablet.use = false\n            draft[state.secNum].desktop.use = false\n            draft[state.secNum].mobile2.use = true\n            draft[state.secNum].deskMobile.use = false\n        }))\n    }\n    const DeskMobTrue = () => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].mobile.use = false\n            draft[state.secNum].tablet.use = false\n            draft[state.secNum].desktop.use = false\n            draft[state.secNum].mobile2.use = false\n            draft[state.secNum].deskMobile.use = true\n        }))\n    }\n\n    const returnMockup = () => {\n        switch(content.mockup.type){\n            case 'mobile':\n                MobileTrue()\n                return(\n                    <>\n                        <FuncContentImg text='목업' subtext=\"최대 10MB 업로드 가능\" value={content.mobile.file} func={uploadMobile}/>\n                        <SliderCustom top=\"크기\" text=\"목업\" value={content.mobile.size} func={setMobileSize} max=\"100\"/>\n                    </>\n                )\n            case 'tablet':\n                TabletTrue()\n                return(\n                    <>\n                        태블릿\n                    </>\n                )\n            case 'desktop':\n                DesktopTrue()\n                return(\n                    <>\n                        <FuncContentImg text='목업' subtext=\"최대 10MB 업로드 가능\" value={content.desktop.file} func={uploadDesk}/>\n                        <SliderCustom top=\"크기\" text=\"목업\" value={content.desktop.size} func={setDesktopSize} max=\"100\"/>   \n                    </>\n                )\n            case 'mobile2':\n                Mobile2True()\n                return(\n                    <>\n                    <FuncContentImg text='모바일1' subtext=\"최대 10MB 업로드 가능\" value={content.mobile2.file1} func={uploadM1}/>\n                    <FuncContentImg text='모바일2' subtext=\"최대 10MB 업로드 가능\" value={content.mobile2.file2} func={uploadM2}/>\n                    <SliderCustom top=\"크기\" text=\"목업\" value={content.mobile2.size} func={setM2Size} max=\"100\"/>   \n                    </>\n                )\n            case 'desk+mob':\n                DeskMobTrue()\n                return(\n                    <>\n                    <FuncContentImg text='모바일' subtext=\"최대 10MB 업로드 가능\" value={content.deskMobile.file1} func={uploadDM1}/>\n                    <FuncContentImg text='데스크탑' subtext=\"최대 10MB 업로드 가능\" value={content.deskMobile.file2} func={uploadDM2}/>\n                    <SliderCustom top=\"모바일 크기\" text=\"모바일\" value={content.deskMobile.size1} func={setMSize} max=\"100\"/>  \n                    <SliderCustom top=\"데스크탑 크기\" text=\"데스크탑\" value={content.deskMobile.size2} func={setDSize} max=\"100\"/>   \n                    </>\n                )\n            default:\n            return(\n                <>\n                </>\n            )\n        }\n    }\n    return(\n        <>\n        {returnMockup()}\n        </>\n    )\n}\n\nexport default AddMockup","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Modal/AddingSection.js",["1038","1039"],"import React, {useState, useContext} from 'react'\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\nimport {base} from '../SectionTypes/baseTypes'\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport { Close } from '@styled-icons/evaicons-solid';\nimport './AddingSection.css'\n\nimport hero from '../../../tools/img/addSection/01hero.png'\nimport detail from '../../../tools/img/addSection/02detail.png'\nimport cta from '../../../tools/img/addSection/03cta.png'\nimport apply from '../../../tools/img/addSection/04apply.png'\nimport appDownload from '../../../tools/img/addSection/05appDownload.png'\nimport feature from '../../../tools/img/addSection/06feature.png'\nimport review from '../../../tools/img/addSection/07review.png'\nimport qna from '../../../tools/img/addSection/08qna.png'\nimport text from '../../../tools/img/addSection/09text.png'\nimport gallery from '../../../tools/img/addSection/10gallery.png'\nimport video from '../../../tools/img/addSection/11video.png'\nimport mockup from '../../../tools/img/addSection/12mockup.png'\n\nconst IMGS = [\n    hero, detail, cta, apply, appDownload, feature, review, qna, text, gallery, video, mockup\n]\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Backdrop = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.1);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: 800,\n  height: 500,\n  bgcolor: 'rgba(255,255,255,1)',\n  borderRadius:2,\n  p: 2,\n  px: 4,\n  pb: 3,\n};\n\nfunction AddingSection({open, setOpen}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const addSection = (typeName) => {\n        // 아래는 state.contents에 섹션 하나를 추가하는 것.\n        let body = JSON.parse(JSON.stringify(base.filter((item, index) => item.sectionTypeName === typeName)[0]))\n\n        action.setContents([\n            ...state.contents.slice(0, state.contents.length),\n            body,\n        ])\n        action.setSecNum(state.contents.length)\n        action.setCategory(0);\n    }\n\n    return (\n        <div>\n            <StyledModal\n                aria-labelledby=\"unstyled-modal-title\"\n                aria-describedby=\"unstyled-modal-description\"\n                open={open}\n                onClose={() => setOpen(!open)}\n                BackdropComponent={Backdrop}\n            >\n                <Box sx={style}>\n                    <div className=\"modal-top__title\">\n                        <div className=\"centera\" style={{width:\"95%\"}}>\n                            원하는 섹션을 추가하세요\n                        </div>\n                        <div style={{width:\"5%\", cursor:\"pointer\"}} onClick={() => setOpen(false)}>\n                            <Close size=\"30\" />\n                        </div>\n                    </div>\n                    <div className=\"section-modal__container\">\n                        {base.map((item,index) => {\n                            return(\n                                <div className=\"section-modal__button\" key={index} onClick={() => addSection(item.sectionTypeName)}>\n                                    <img src={IMGS[index]} width={90} />\n                                    {item.name}\n                                </div>\n                            )\n                        })} \n                    </div>\n                </Box>\n            </StyledModal>\n        </div>\n    )\n}\n\nexport default AddingSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/ResponsiveCustom.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/ReturnButton.js",["1040","1041","1042","1043","1044"],"import React, { useContext, useState, useRef } from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport AutosizeInput from 'react-input-autosize';\nimport appstorebutton from '../../../../tools/img/appstorebutton.png'\nimport playstorebutton from '../../../../tools/img/playstorebutton.png'\nimport produce from 'immer';\n\nfunction ReturnButton({content}){\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const CustomCtaButton = () => {return (<div className=\"cta-button-made\" style={{\n        marginTop:`${content.ctaApplyInputs.length > 1 ? '8px' : '0px'}`,\n        borderRadius:`${state.setting.cta.borderRadius}px`,\n        backgroundColor:`${state.setting.cta.backgroundColor}`,\n        color:`${state.setting.cta.color}`,\n        boxShadow:`${state.setting.cta.shadow ? '1px 2px 4px rgba(0,0,0,0.2)' : 'none'}`,\n        border:`${state.setting.cta.border ? `1px solid ${state.setting.cta.borderColor}` : 'none'}`\n    }}>\n        <AutosizeInput className=\"text-input-flex ti\" value={ content.button.ctaText} onChange={(e) => action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].button.ctaText = e.currentTarget.value;\n        }))} inputStyle={{fontFamily:`${state.setting.smallFont}`, borderRadius:`${state.setting.cta.borderRadius}px`, backgroundColor:`${state.setting.cta.backgroundColor}`,}}/>\n    </div>)}\n\n    const CustomGhostButton = () => {return (<div className=\"cta-button-made\" style={{\n        marginTop:`${content.ghostApplyInputs.length > 1 ? '8px' : '0px'}`,\n        marginLeft:`${ content.button.ctaUse ? '5px' : '0px'}`,\n        borderRadius:`${state.setting.ghost.borderRadius}px`,\n        backgroundColor:`${state.setting.ghost.backgroundColor}`,\n        color:`${state.setting.ghost.color}`,\n        boxShadow:`${state.setting.ghost.shadow ? '1px 2px 4px rgba(0,0,0,0.2)' : 'none'}`,\n        border:`${state.setting.ghost.border ? `1px solid ${state.setting.ghost.borderColor}` : 'none'}`\n    }} onClick={() => {}}>\n        <AutosizeInput className=\"text-input-flex ti\" value={ content.button.ghostText } onChange={(e) => action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].button.ghostText = e.currentTarget.value;\n        }))} inputStyle={{fontFamily:`${state.setting.smallFont}`, borderRadius:`${state.setting.ghost.borderRadius}px`,  backgroundColor:`${state.setting.ghost.backgroundColor}`}}/>\n    </div>)}\n\n    const returnCtaInputs = () => {\n        return(\n            <div className=\"centera\" style={{flexDirection:`${content.ctaApplyInputs.length > 1 ? 'column' : 'row'}`, justifyContent:`${state.isPhone ? content.mobile.align : content.button.align}`}}>\n                {content.ctaApplyInputs.map((item, index) => {\n                    return(\n                        <input className=\"input-placeholder\" placeholder={item} key={index} style={{marginTop:`${content.ctaApplyInputs.length > 1 ? '8px' : '0px'}`}}/>\n                    )\n                })}\n                {CustomCtaButton()}\n            </div>\n        )\n    }\n\n    const returnGhostInputs = () => {\n        return(\n            <div className=\"centera\" style={{flexDirection:`${content.ghostApplyInputs.length > 1 ? 'column' : 'row'}`, justifyContent:`${state.isPhone ? content.mobile.align : content.button.align}`}}>\n                {content.ghostApplyInputs.map((item, index) => {\n                    return(\n                        <input className=\"input-placeholder\" placeholder={item} key={index} style={{marginTop:`${content.ghostApplyInputs.length > 1 ? '8px' : '0px'}`}}/>\n                    )\n                })}\n                {CustomGhostButton()}\n            </div>\n        )\n    }\n\n    if(content.button.use){\n        // ctaOption === 'link' => 버튼 클릭 시 링크 이동\n        // ctaOption === 'apply' => 신청\n\n        {/* <CustomCtaButton className=\"action-button\" onClick={() => {window.open(`${content.button.ctaLink}`)}}> */}\n        return(\n            <div style={{width:'100%'}}>\n                <div className=\"button__container\" style={{justifyContent:`${state.isPhone ? content.mobile.align : content.button.align}`}}>\n                    {\n                        content.button.ctaUse && \n                            ( content.button.ctaOption === 'link' ? CustomCtaButton() : returnCtaInputs() )\n                    }\n                    {/* onClick={() => {window.open(`${content.button.ghostLink}`)}} */}\n                    {\n                        content.button.ghostUse && \n                            ( content.button.ghostOption === 'link' ? CustomGhostButton() : returnGhostInputs() )\n                    }\n                </div>\n                {\n                    content.appButton.use && \n                    <div className=\"button__container\" style={{justifyContent:`${state.isPhone ? content.mobile.align : content.button.align}`}}>\n                        {\n                            content.appButton.google.length > 0 && \n                                <img src={playstorebutton} className=\"store-button\" />\n                        }\n                        {/* onClick={() => {window.open(`${content.button.ghostLink}`)}} */}\n                        {\n                            content.appButton.apple.length > 0 && \n                                <img src={appstorebutton} className=\"store-button\" />\n                        }\n                    </div>\n                }\n            </div>\n        )\n    }else{\n        return(<></>)\n    }\n}\n\nexport default ReturnButton","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/ImageOrSlide.js",["1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055"],"import React, {useRef, useState, useContext} from 'react';\nimport ImageCarousel from '../../Edit/tools/func/FuncImageCarousel'\nimport produce from 'immer';\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport Phone from '../../../../tools/img/mockup/mobile.png'\nimport Desktop from '../../../../tools/img/mockup/desktop.png'\nimport ourA from '../../../../tools/img/005.png'\n\nfunction ImageOrSlide({content}){\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const imgRef=useRef(null)\n    const [imageShow, setImageShow] = useState(null);\n    if (content.contents.use) {\n        // 동영상 - 유튜브 링크\n        if(content.video.youtube) \n            return(\n                <div>\n                    <iframe style={{ zIndex: 1, width:`${content.image.size}%`, height:`${content.image.size}%` }} id=\"video-content\" src={`${content.video.link}`} frameborder=\"0\" allow='autoplay' allowfullscreen/>\n                </div>\n            )\n        // 동영상 - 비디오 업로드\n        if(content.video.use)\n            return(\n                <video \n                className=\"video\"\n                src={`${content.video.file}`} \n                type=\"video/mp4\" \n                autoPlay\n                muted\n                loop\n                style={{borderRadius:`${content.image.border}%`, width:`${content.image.size}%`}}\n                >\n                </video>\n            )\n        // 슬라이드\n        if(content.image.slide)\n            return(\n                <div>\n                    <ImageCarousel content={content}/>\n                </div>\n            )\n        // 이미지\n        if(content.image.oneImg)\n            return (\n                // <div style={{width:'100%'}}>\n                <img \n                    ref={imgRef} \n                    src={`${content.image.attachment === '' ? ourA : content.image.attachment}`} \n                    className=\"image\" \n                    onClick={(e) => setImageShow(e.currentTarget)} \n                    style={{\n                        borderRadius:`${content.image.border}px`,\n                        width:`${state.isPhone ? content.image.size/2.7 + 60 : content.image.size}%`, \n                        boxShadow: `${content.image.shadowValue}`\n                    }}\n                    />\n                // </div>\n            )\n        // 목업 - 모바일\n        if(content.mobile.use)\n            return(\n                <div className=\"mobile-container\">\n                    <img className=\"mobile-ex\" src={Phone} alt=\"목업틀\"\n                        style={{width: `${content.mobile.size}%`}}\n                    />\n                    {content.mobile.file === '' ?  \n                        <></>\n                        : \n                        <img \n                        className=\"upload-mobile\" \n                        ref={imgRef} \n                        src={`${content.mobile.file}`} \n                        onClick={(e) => setImageShow(e.currentTarget)} \n                        style={{ width:`${content.mobile.size}%`}}\n                        />\n                    }\n                </div>\n            )\n        // 목업 - 태블릿\n        if(content.tablet.use)\n            return(\n                <div className=\"mobile-container\">\n                   tablet\n                </div>\n            )\n        // 목업 - 데스크탑\n        if(content.desktop.use)\n            return(\n                <div className=\"desk-container\">\n                    <img className=\"mobile-ex\" src={Desktop} alt=\"목업틀\"\n                        style={{width: `${content.desktop.size}px`}}\n                    />\n                    {content.desktop.file === '' ?  \n                        <></>\n                        : \n                        <img \n                        className=\"upload-desk\" \n                        ref={imgRef} \n                        src={`${content.desktop.file}`} \n                        onClick={(e) => setImageShow(e.currentTarget)} \n                        // style={{ width:`${content.desktop.size}px`}}\n                        />\n                    }\n                </div>\n            )\n        // 목업 - 모바일 2개\n        if(content.mobile2.use)\n        return(\n            <>\n            <div className=\"desk-container\">\n                    <img className=\"mobile-ex\" src={Phone} alt=\"목업틀\"\n                        style={{width: `${content.mobile2.size}px`}}\n                    />\n                    {content.mobile2.file1 === '' ?  \n                        <></>\n                        : \n                        <img \n                        className=\"upload-mobile\" \n                        ref={imgRef} \n                        src={`${content.mobile2.file1}`} \n                        onClick={(e) => setImageShow(e.currentTarget)} \n                        style={{ width:`${content.mobile2.size}px`}}\n                        />\n                    }\n            </div>\n            <div className=\"desk-container\">\n                    <img className=\"mobile-ex\" src={Phone} alt=\"목업틀\"\n                        style={{width: `${content.mobile2.size}px`}}\n                    />\n                    {content.mobile2.file2 === '' ?  \n                        <></>\n                        : \n                        <img \n                        className=\"upload-mobile\" \n                        ref={imgRef} \n                        src={`${content.mobile2.file2}`} \n                        onClick={(e) => setImageShow(e.currentTarget)} \n                        style={{ width:`${content.mobile2.size}px`}}\n                        />\n                    }\n            </div>\n            </>\n        )\n        // 목업 - desk + mobile\n        if(content.deskMobile.use)\n        return(\n            <>\n            <div className=\"mobile-container\">\n                    <img className=\"mobile-ex\" src={Phone} alt=\"목업틀\"\n                        style={{width: `${content.deskMobile.size1}px`}}\n                    />\n                    {content.deskMobile.file1 === '' ?  \n                        <></>\n                        : \n                        <img \n                        className=\"upload-mobile\" \n                        ref={imgRef} \n                        src={`${content.deskMobile.file1}`} \n                        onClick={(e) => setImageShow(e.currentTarget)} \n                        style={{ width:`${content.deskMobile.size1}px`}}\n                        />\n                    }\n            </div>\n            <div className=\"desk-container\">\n                    <img className=\"mobile-ex\" src={Desktop} alt=\"목업틀\"\n                        style={{width: `${content.deskMobile.size2}px`}}\n                    />\n                    {content.deskMobile.file2 === '' ?  \n                        <></>\n                        : \n                        <img \n                        className=\"upload-desk\" \n                        ref={imgRef} \n                        src={`${content.deskMobile.file2}`} \n                        onClick={(e) => setImageShow(e.currentTarget)} \n                        />\n                    }\n            </div>\n            </>\n        )\n    }\n    else{\n        return(<>\n        </>)\n    }\n}\n\nexport default ImageOrSlide","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/QnaOpenClose.js",["1056","1057"],"import React, { useContext, useState, useRef, useEffect } from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport { styled } from '@mui/material/styles';\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\nimport MuiAccordion from '@mui/material/Accordion';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport TextAuto from './TextAuto'\nimport produce from 'immer'\nimport { ChakraProvider } from '@chakra-ui/react'\nimport './QnaOpenClose.css'\n\nconst Accordion = styled((props) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n    border: '1px solid rgba(0,0,0,0.2)',\n    width:'90%',\n    borderRadius:10,\n    backgroundColor:\n      theme.palette.mode === 'dark'\n        ? 'rgba(255, 255, 255, .05)'\n        : 'rgba(0, 0, 0, 0)',\n}));\n\nconst AccordionSummary = styled((props) => (\n  <MuiAccordionSummary\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\n    {...props}\n  />\n))(({ theme }) => ({\n  flexDirection: 'row-reverse',\n  '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n    transform: 'rotate(180deg)',\n  },\n  '& .MuiAccordionSummary-content': {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\n  padding: theme.spacing(0.3),\n}));\n\n// 아래는 열고 닫히는 애니메이션 효과까지 적용\nexport const AccordionCustom = (props) => {\n  return (\n    <div className=\"centera\">\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n            <div>\n                {props.title}\n            </div>\n        </AccordionSummary>\n        <AccordionDetails>\n            <div>\n                {props.children}\n            </div>\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n}\n\nconst OpenCloseCustom = (props) => {\n  /**\n   * title, tooltip, preseen 설정 가능\n   */\n  const isopen = props.content.qna.shape\n  const [open, setOpen] = useState(props.open)\n  const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n  return (\n    <div className=\"one-element\" >\n      <div className={props.type === 'card' ? 'accordion__card' : 'accordion__plain'}>\n        <div className=\"accordion__header-qna\" onClick={() => setOpen(!open)}>\n          <div className=\"edit-element\">\n            <ChakraProvider>\n            <div className=\"accordion__title\">\n              <div className=\"title_text\" style={{color:`${props.color}`, width:'100%'}}>\n                <span className=\"qna__word\">Q.</span>\n                <div style={{width:'100%'}}>\n                  <TextAuto \n                    value={props.title} \n                    onChange={e => action.setContents(produce(state.contents, draft => {\n                        draft[state.secNum].qnas[props.index].question = e.currentTarget.value;\n                    }))}\n                    color={props.color} align=\"start\" />\n                  </div>\n              </div> \n            </div>\n            </ChakraProvider>\n            <div className=\"centera\" style={{justifyContent: 'end', width:'20%'}}>\n              { open ? <ExpandMoreIcon style={{transform:'rotate(180deg)'}} /> : <ExpandMoreIcon />}\n            </div>\n          </div>\n        </div>\n        {isopen === 'open' ? \n          (<div className=\"accordion__body\" style={{display:`${!open ? 'flex' : 'none'}`, flexDirection:'row', justifyContent:'start'}}>\n          {props.children}\n          </div>):\n          (<div className=\"accordion__body\" style={{display:`${open ? 'flex' : 'none'}`, flexDirection:'row', justifyContent:'start'}}>\n          {props.children}\n          </div>)\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default OpenCloseCustom\n\n\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/func/FuncImageCarousel.js",["1058","1059","1060","1061","1062","1063","1064","1065"],"import React, {useRef, useEffect} from 'react'\nimport Slider from \"react-slick\"\nimport \"slick-carousel/slick/slick.css\"\nimport \"slick-carousel/slick/slick-theme.css\"\nimport styled from 'styled-components'\nimport prevButton from '../../../../../tools/img/prevButton.png'\nimport nextButton from '../../../../../tools/img/nextButton.png'\n\nconst Prev = styled.img`\nwidth: 50px;\nheight: 50px;\nz-index: 5;\nmargin-left: -40px;\nmargin-top: -30px;\n`\n\nconst Next = styled.img`\nwidth: 50px;\nheight: 50px;\nz-index: 5;\nmargin-right: -40px;\nmargin-top: -30px;\n`\n\n\nfunction FuncImageCarousel({content}) {\n\n    const imgRef = useRef(null)\n\n    // const PrevArrow=({currentSlide,slideCount,...props})=>(\n    //     <Prev {...props} src={prevButton} className=\"slick-prev\" /> \n    // )\n\n    // const NextArrow=({currentSlide,slideCount,...props})=>(\n    //     <Next {...props} src={nextButton} className=\"slick-next\" /> \n    // )\n\n    const settings = {\n        dots: false, // 캐러셀이미지가 몇번째인지 알려주는 점을 보여줄지 정한다.\n        speed: 500, // 애미메이션의 속도, 단위는 milliseconds\n        slidesToShow: 1, // 한번에 몇개의 슬라이드를 보여줄 지\n        slidesToScroll: 1, // 한번 스크롤시 몇장의 슬라이드를 넘길지\n        // nextArrow: <NextArrow />,\n        // prevArrow: <PrevArrow />,\n        autoplay: true,\n        autoPlaySpeed: 5000,\t\n      };\n\n    return (\n        <div className=\"slide-box\" style={{borderRadius: `${content.image.border}%`, width:`${content.image.size}px`,height:`${content.image.size}px`}}>\n            <Slider {...settings}> \n            {\n                (content.slide_img.slide1) &&\n                    <img ref={imgRef} src={`${content.slide_img.slide1}`} style={{width:`${content.image.size}px`,height:`${content.image.size}px`,boxShadow: `${content.image.shadowValue}`}}/>\n            }\n            {\n                (content.slide_img.slide2) &&\n                    <img ref={imgRef} src={`${content.slide_img.slide2}`} style={{ width:`${content.image.size}px`,height:`${content.image.size}px`,boxShadow: `${content.image.shadowValue}`}}/>\n            }\n            {\n                (content.slide_img.slide3) &&\n                    <img ref={imgRef} src={`${content.slide_img.slide3}`} style={{ width:`${content.image.size}px`,height:`${content.image.size}px`,boxShadow: `${content.image.shadowValue}`}}/>\n            }\n            </Slider>\n        </div>\n    )\n\n}\n\nexport default FuncImageCarousel","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/LayoutRFG.js",[],{"ruleId":"1066","replacedBy":"1067"},{"ruleId":"1068","replacedBy":"1069"},{"ruleId":"1070","severity":1,"message":"1071","line":1,"column":8,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":12},{"ruleId":"1070","severity":1,"message":"1074","line":5,"column":8,"nodeType":"1072","messageId":"1073","endLine":5,"endColumn":16},{"ruleId":"1075","severity":1,"message":"1076","line":15,"column":3,"nodeType":"1072","endLine":15,"endColumn":12,"suggestions":"1077"},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":16,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":24},{"ruleId":"1070","severity":1,"message":"1079","line":1,"column":26,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":35},{"ruleId":"1070","severity":1,"message":"1080","line":8,"column":8,"nodeType":"1072","messageId":"1073","endLine":8,"endColumn":16},{"ruleId":"1070","severity":1,"message":"1074","line":10,"column":8,"nodeType":"1072","messageId":"1073","endLine":10,"endColumn":16},{"ruleId":"1070","severity":1,"message":"1081","line":3,"column":10,"nodeType":"1072","messageId":"1073","endLine":3,"endColumn":23},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":16,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":24},{"ruleId":"1070","severity":1,"message":"1079","line":1,"column":26,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":35},{"ruleId":"1070","severity":1,"message":"1082","line":8,"column":8,"nodeType":"1072","messageId":"1073","endLine":8,"endColumn":19},{"ruleId":"1075","severity":1,"message":"1083","line":34,"column":8,"nodeType":"1084","endLine":34,"endColumn":17,"suggestions":"1085"},{"ruleId":"1070","severity":1,"message":"1086","line":1,"column":45,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":58},{"ruleId":"1070","severity":1,"message":"1087","line":9,"column":9,"nodeType":"1072","messageId":"1073","endLine":9,"endColumn":13},{"ruleId":"1070","severity":1,"message":"1088","line":19,"column":23,"nodeType":"1072","messageId":"1073","endLine":19,"endColumn":32},{"ruleId":"1070","severity":1,"message":"1089","line":22,"column":8,"nodeType":"1072","messageId":"1073","endLine":22,"endColumn":15},{"ruleId":"1070","severity":1,"message":"1090","line":26,"column":9,"nodeType":"1072","messageId":"1073","endLine":26,"endColumn":23},{"ruleId":"1070","severity":1,"message":"1091","line":47,"column":22,"nodeType":"1072","messageId":"1073","endLine":47,"endColumn":33},{"ruleId":"1070","severity":1,"message":"1092","line":48,"column":12,"nodeType":"1072","messageId":"1073","endLine":48,"endColumn":16},{"ruleId":"1075","severity":1,"message":"1093","line":133,"column":7,"nodeType":"1084","endLine":133,"endColumn":9,"suggestions":"1094"},{"ruleId":"1095","severity":2,"message":"1096","line":241,"column":22,"nodeType":"1072","messageId":"1097","endLine":241,"endColumn":27},{"ruleId":"1098","severity":1,"message":"1099","line":355,"column":37,"nodeType":"1100","endLine":355,"endColumn":104},{"ruleId":"1070","severity":1,"message":"1079","line":1,"column":16,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":25},{"ruleId":"1070","severity":1,"message":"1101","line":7,"column":8,"nodeType":"1072","messageId":"1073","endLine":7,"endColumn":24},{"ruleId":"1070","severity":1,"message":"1102","line":10,"column":8,"nodeType":"1072","messageId":"1073","endLine":10,"endColumn":13},{"ruleId":"1070","severity":1,"message":"1103","line":60,"column":12,"nodeType":"1072","messageId":"1073","endLine":60,"endColumn":17},{"ruleId":"1070","severity":1,"message":"1104","line":60,"column":18,"nodeType":"1072","messageId":"1073","endLine":60,"endColumn":26},{"ruleId":"1098","severity":1,"message":"1099","line":154,"column":21,"nodeType":"1100","endLine":154,"endColumn":82},{"ruleId":"1070","severity":1,"message":"1089","line":4,"column":8,"nodeType":"1072","messageId":"1073","endLine":4,"endColumn":15},{"ruleId":"1070","severity":1,"message":"1087","line":12,"column":9,"nodeType":"1072","messageId":"1073","endLine":12,"endColumn":13},{"ruleId":"1070","severity":1,"message":"1105","line":13,"column":8,"nodeType":"1072","messageId":"1073","endLine":13,"endColumn":14},{"ruleId":"1070","severity":1,"message":"1106","line":14,"column":10,"nodeType":"1072","messageId":"1073","endLine":14,"endColumn":17},{"ruleId":"1070","severity":1,"message":"1107","line":15,"column":10,"nodeType":"1072","messageId":"1073","endLine":15,"endColumn":27},{"ruleId":"1070","severity":1,"message":"1108","line":26,"column":18,"nodeType":"1072","messageId":"1073","endLine":26,"endColumn":25},{"ruleId":"1075","severity":1,"message":"1109","line":35,"column":7,"nodeType":"1084","endLine":35,"endColumn":24,"suggestions":"1110"},{"ruleId":"1111","severity":1,"message":"1112","line":53,"column":31,"nodeType":"1113","messageId":"1114","endLine":53,"endColumn":33},{"ruleId":"1111","severity":1,"message":"1112","line":112,"column":36,"nodeType":"1113","messageId":"1114","endLine":112,"endColumn":38},{"ruleId":"1070","severity":1,"message":"1089","line":6,"column":8,"nodeType":"1072","messageId":"1073","endLine":6,"endColumn":15},{"ruleId":"1070","severity":1,"message":"1115","line":13,"column":19,"nodeType":"1072","messageId":"1073","endLine":13,"endColumn":27},{"ruleId":"1111","severity":1,"message":"1116","line":21,"column":47,"nodeType":"1113","messageId":"1117","endLine":21,"endColumn":49},{"ruleId":"1118","severity":1,"message":"1119","line":25,"column":17,"nodeType":"1120","messageId":"1121","endLine":25,"endColumn":19},{"ruleId":"1122","severity":1,"message":"1123","line":31,"column":9,"nodeType":"1124","messageId":"1125","endLine":46,"endColumn":10},{"ruleId":"1122","severity":1,"message":"1123","line":50,"column":9,"nodeType":"1124","messageId":"1125","endLine":63,"endColumn":10},{"ruleId":"1070","severity":1,"message":"1087","line":3,"column":9,"nodeType":"1072","messageId":"1073","endLine":3,"endColumn":13},{"ruleId":"1098","severity":1,"message":"1099","line":67,"column":21,"nodeType":"1100","endLine":67,"endColumn":78},{"ruleId":"1098","severity":1,"message":"1099","line":83,"column":21,"nodeType":"1100","endLine":83,"endColumn":72},{"ruleId":"1098","severity":1,"message":"1099","line":88,"column":21,"nodeType":"1100","endLine":88,"endColumn":72},{"ruleId":"1070","severity":1,"message":"1079","line":1,"column":26,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":35},{"ruleId":"1098","severity":1,"message":"1099","line":151,"column":25,"nodeType":"1100","endLine":151,"endColumn":59},{"ruleId":"1098","severity":1,"message":"1099","line":165,"column":17,"nodeType":"1100","endLine":165,"endColumn":45},{"ruleId":"1070","severity":1,"message":"1079","line":1,"column":26,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":35},{"ruleId":"1070","severity":1,"message":"1126","line":20,"column":24,"nodeType":"1072","messageId":"1073","endLine":20,"endColumn":28},{"ruleId":"1098","severity":1,"message":"1099","line":120,"column":25,"nodeType":"1100","endLine":120,"endColumn":59},{"ruleId":"1098","severity":1,"message":"1099","line":134,"column":17,"nodeType":"1100","endLine":134,"endColumn":45},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":16,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":24},{"ruleId":"1070","severity":1,"message":"1127","line":7,"column":8,"nodeType":"1072","messageId":"1073","endLine":7,"endColumn":20},{"ruleId":"1070","severity":1,"message":"1128","line":8,"column":8,"nodeType":"1072","messageId":"1073","endLine":8,"endColumn":26},{"ruleId":"1070","severity":1,"message":"1129","line":15,"column":9,"nodeType":"1072","messageId":"1073","endLine":15,"endColumn":19},{"ruleId":"1070","severity":1,"message":"1130","line":18,"column":10,"nodeType":"1072","messageId":"1073","endLine":18,"endColumn":16},{"ruleId":"1070","severity":1,"message":"1131","line":19,"column":9,"nodeType":"1072","messageId":"1073","endLine":19,"endColumn":15},{"ruleId":"1070","severity":1,"message":"1132","line":19,"column":17,"nodeType":"1072","messageId":"1073","endLine":19,"endColumn":24},{"ruleId":"1070","severity":1,"message":"1133","line":20,"column":8,"nodeType":"1072","messageId":"1073","endLine":20,"endColumn":15},{"ruleId":"1134","severity":1,"message":"1135","line":164,"column":1,"nodeType":"1136","messageId":"1137","endLine":182,"endColumn":4},{"ruleId":"1070","severity":1,"message":"1079","line":1,"column":26,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":35},{"ruleId":"1070","severity":1,"message":"1138","line":13,"column":8,"nodeType":"1072","messageId":"1073","endLine":13,"endColumn":12},{"ruleId":"1139","severity":1,"message":"1140","line":154,"column":19,"nodeType":"1084","messageId":"1141","endLine":179,"endColumn":2},{"ruleId":"1070","severity":1,"message":"1142","line":185,"column":12,"nodeType":"1072","messageId":"1073","endLine":185,"endColumn":23},{"ruleId":"1070","severity":1,"message":"1143","line":185,"column":25,"nodeType":"1072","messageId":"1073","endLine":185,"endColumn":39},{"ruleId":"1070","severity":1,"message":"1144","line":189,"column":12,"nodeType":"1072","messageId":"1073","endLine":189,"endColumn":17},{"ruleId":"1070","severity":1,"message":"1145","line":189,"column":19,"nodeType":"1072","messageId":"1073","endLine":189,"endColumn":25},{"ruleId":"1070","severity":1,"message":"1146","line":191,"column":11,"nodeType":"1072","messageId":"1073","endLine":191,"endColumn":21},{"ruleId":"1070","severity":1,"message":"1147","line":201,"column":11,"nodeType":"1072","messageId":"1073","endLine":201,"endColumn":24},{"ruleId":"1122","severity":1,"message":"1123","line":293,"column":9,"nodeType":"1124","messageId":"1125","endLine":483,"endColumn":10},{"ruleId":"1148","severity":1,"message":"1149","line":323,"column":17,"nodeType":"1150","messageId":"1151","endLine":323,"endColumn":23},{"ruleId":"1148","severity":1,"message":"1149","line":358,"column":17,"nodeType":"1150","messageId":"1151","endLine":358,"endColumn":23},{"ruleId":"1148","severity":1,"message":"1149","line":455,"column":17,"nodeType":"1150","messageId":"1151","endLine":455,"endColumn":23},{"ruleId":"1148","severity":1,"message":"1149","line":482,"column":17,"nodeType":"1150","messageId":"1151","endLine":482,"endColumn":23},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":16,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":24},{"ruleId":"1152","severity":1,"message":"1153","line":31,"column":3,"nodeType":"1154","messageId":"1121","endLine":31,"endColumn":8},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":16,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":24},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":16,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":24},{"ruleId":"1070","severity":1,"message":"1155","line":1,"column":25,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":35},{"ruleId":"1070","severity":1,"message":"1156","line":2,"column":8,"nodeType":"1072","messageId":"1073","endLine":2,"endColumn":21},{"ruleId":"1098","severity":1,"message":"1099","line":30,"column":29,"nodeType":"1100","endLine":30,"endColumn":99},{"ruleId":"1070","severity":1,"message":"1157","line":14,"column":5,"nodeType":"1072","messageId":"1073","endLine":14,"endColumn":18},{"ruleId":"1070","severity":1,"message":"1158","line":16,"column":5,"nodeType":"1072","messageId":"1073","endLine":16,"endColumn":18},{"ruleId":"1070","severity":1,"message":"1159","line":18,"column":5,"nodeType":"1072","messageId":"1073","endLine":18,"endColumn":23},{"ruleId":"1070","severity":1,"message":"1160","line":19,"column":5,"nodeType":"1072","messageId":"1073","endLine":19,"endColumn":18},{"ruleId":"1070","severity":1,"message":"1161","line":20,"column":5,"nodeType":"1072","messageId":"1073","endLine":20,"endColumn":16},{"ruleId":"1070","severity":1,"message":"1162","line":21,"column":5,"nodeType":"1072","messageId":"1073","endLine":21,"endColumn":11},{"ruleId":"1070","severity":1,"message":"1163","line":7,"column":8,"nodeType":"1072","messageId":"1073","endLine":7,"endColumn":20},{"ruleId":"1070","severity":1,"message":"1160","line":28,"column":5,"nodeType":"1072","messageId":"1073","endLine":28,"endColumn":18},{"ruleId":"1070","severity":1,"message":"1162","line":30,"column":5,"nodeType":"1072","messageId":"1073","endLine":30,"endColumn":11},{"ruleId":"1070","severity":1,"message":"1164","line":31,"column":5,"nodeType":"1072","messageId":"1073","endLine":31,"endColumn":11},{"ruleId":"1070","severity":1,"message":"1144","line":67,"column":12,"nodeType":"1072","messageId":"1073","endLine":67,"endColumn":17},{"ruleId":"1070","severity":1,"message":"1145","line":67,"column":19,"nodeType":"1072","messageId":"1073","endLine":67,"endColumn":25},{"ruleId":"1122","severity":1,"message":"1123","line":227,"column":9,"nodeType":"1124","messageId":"1125","endLine":401,"endColumn":10},{"ruleId":"1070","severity":1,"message":"1131","line":4,"column":9,"nodeType":"1072","messageId":"1073","endLine":4,"endColumn":15},{"ruleId":"1070","severity":1,"message":"1132","line":4,"column":17,"nodeType":"1072","messageId":"1073","endLine":4,"endColumn":24},{"ruleId":"1070","severity":1,"message":"1144","line":8,"column":12,"nodeType":"1072","messageId":"1073","endLine":8,"endColumn":17},{"ruleId":"1070","severity":1,"message":"1079","line":1,"column":26,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":35},{"ruleId":"1070","severity":1,"message":"1165","line":9,"column":8,"nodeType":"1072","messageId":"1073","endLine":9,"endColumn":30},{"ruleId":"1070","severity":1,"message":"1166","line":10,"column":8,"nodeType":"1072","messageId":"1073","endLine":10,"endColumn":24},{"ruleId":"1098","severity":1,"message":"1099","line":142,"column":33,"nodeType":"1100","endLine":142,"endColumn":57},{"ruleId":"1098","severity":1,"message":"1099","line":160,"column":29,"nodeType":"1100","endLine":160,"endColumn":53},{"ruleId":"1098","severity":1,"message":"1099","line":177,"column":29,"nodeType":"1100","endLine":177,"endColumn":53},{"ruleId":"1098","severity":1,"message":"1099","line":200,"column":29,"nodeType":"1100","endLine":200,"endColumn":53},{"ruleId":"1070","severity":1,"message":"1131","line":4,"column":9,"nodeType":"1072","messageId":"1073","endLine":4,"endColumn":15},{"ruleId":"1070","severity":1,"message":"1132","line":4,"column":17,"nodeType":"1072","messageId":"1073","endLine":4,"endColumn":24},{"ruleId":"1070","severity":1,"message":"1130","line":5,"column":10,"nodeType":"1072","messageId":"1073","endLine":5,"endColumn":16},{"ruleId":"1152","severity":1,"message":"1167","line":506,"column":9,"nodeType":"1154","messageId":"1121","endLine":506,"endColumn":13},{"ruleId":"1070","severity":1,"message":"1133","line":4,"column":8,"nodeType":"1072","messageId":"1073","endLine":4,"endColumn":15},{"ruleId":"1070","severity":1,"message":"1145","line":7,"column":19,"nodeType":"1072","messageId":"1073","endLine":7,"endColumn":25},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":16,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":24},{"ruleId":"1070","severity":1,"message":"1155","line":1,"column":26,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":36},{"ruleId":"1070","severity":1,"message":"1168","line":4,"column":20,"nodeType":"1072","messageId":"1073","endLine":4,"endColumn":29},{"ruleId":"1070","severity":1,"message":"1169","line":6,"column":9,"nodeType":"1072","messageId":"1073","endLine":6,"endColumn":13},{"ruleId":"1070","severity":1,"message":"1170","line":13,"column":13,"nodeType":"1072","messageId":"1073","endLine":13,"endColumn":25},{"ruleId":"1070","severity":1,"message":"1171","line":19,"column":13,"nodeType":"1072","messageId":"1073","endLine":19,"endColumn":29},{"ruleId":"1070","severity":1,"message":"1172","line":25,"column":15,"nodeType":"1072","messageId":"1073","endLine":25,"endColumn":24},{"ruleId":"1070","severity":1,"message":"1173","line":31,"column":15,"nodeType":"1072","messageId":"1073","endLine":31,"endColumn":20},{"ruleId":"1070","severity":1,"message":"1105","line":3,"column":8,"nodeType":"1072","messageId":"1073","endLine":3,"endColumn":14},{"ruleId":"1098","severity":1,"message":"1099","line":16,"column":25,"nodeType":"1100","endLine":16,"endColumn":78},{"ruleId":"1098","severity":1,"message":"1099","line":18,"column":25,"nodeType":"1100","endLine":18,"endColumn":101},{"ruleId":"1111","severity":1,"message":"1116","line":30,"column":54,"nodeType":"1113","messageId":"1117","endLine":30,"endColumn":56},{"ruleId":"1070","severity":1,"message":"1087","line":3,"column":9,"nodeType":"1072","messageId":"1073","endLine":3,"endColumn":13},{"ruleId":"1075","severity":1,"message":"1174","line":14,"column":5,"nodeType":"1072","endLine":14,"endColumn":14,"suggestions":"1175"},{"ruleId":"1070","severity":1,"message":"1079","line":1,"column":28,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":37},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":39,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":47},{"ruleId":"1070","severity":1,"message":"1176","line":1,"column":49,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":55},{"ruleId":"1070","severity":1,"message":"1177","line":9,"column":8,"nodeType":"1072","messageId":"1073","endLine":9,"endColumn":24},{"ruleId":"1111","severity":1,"message":"1116","line":14,"column":67,"nodeType":"1113","messageId":"1117","endLine":14,"endColumn":69},{"ruleId":"1070","severity":1,"message":"1079","line":1,"column":29,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":38},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":40,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":48},{"ruleId":"1070","severity":1,"message":"1176","line":1,"column":50,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":56},{"ruleId":"1070","severity":1,"message":"1145","line":12,"column":19,"nodeType":"1072","messageId":"1073","endLine":12,"endColumn":25},{"ruleId":"1070","severity":1,"message":"1087","line":2,"column":10,"nodeType":"1072","messageId":"1073","endLine":2,"endColumn":14},{"ruleId":"1070","severity":1,"message":"1178","line":66,"column":11,"nodeType":"1072","messageId":"1073","endLine":66,"endColumn":23},{"ruleId":"1134","severity":1,"message":"1179","line":70,"column":9,"nodeType":"1136","messageId":"1180","endLine":70,"endColumn":119},{"ruleId":"1098","severity":1,"message":"1099","line":87,"column":29,"nodeType":"1100","endLine":87,"endColumn":83},{"ruleId":"1098","severity":1,"message":"1099","line":92,"column":29,"nodeType":"1100","endLine":92,"endColumn":82},{"ruleId":"1111","severity":1,"message":"1116","line":14,"column":66,"nodeType":"1113","messageId":"1117","endLine":14,"endColumn":68},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":28,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":36},{"ruleId":"1070","severity":1,"message":"1130","line":2,"column":10,"nodeType":"1072","messageId":"1073","endLine":2,"endColumn":16},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":28,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":36},{"ruleId":"1070","severity":1,"message":"1177","line":8,"column":8,"nodeType":"1072","messageId":"1073","endLine":8,"endColumn":24},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":28,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":36},{"ruleId":"1070","severity":1,"message":"1181","line":8,"column":8,"nodeType":"1072","messageId":"1073","endLine":8,"endColumn":20},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":28,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":36},{"ruleId":"1070","severity":1,"message":"1177","line":8,"column":8,"nodeType":"1072","messageId":"1073","endLine":8,"endColumn":24},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":28,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":36},{"ruleId":"1070","severity":1,"message":"1130","line":2,"column":10,"nodeType":"1072","messageId":"1073","endLine":2,"endColumn":16},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":28,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":36},{"ruleId":"1070","severity":1,"message":"1176","line":1,"column":38,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":44},{"ruleId":"1111","severity":1,"message":"1116","line":12,"column":68,"nodeType":"1113","messageId":"1117","endLine":12,"endColumn":70},{"ruleId":"1098","severity":1,"message":"1099","line":30,"column":29,"nodeType":"1100","endLine":37,"endColumn":37},{"ruleId":"1070","severity":1,"message":"1133","line":4,"column":9,"nodeType":"1072","messageId":"1073","endLine":4,"endColumn":16},{"ruleId":"1070","severity":1,"message":"1182","line":8,"column":8,"nodeType":"1072","messageId":"1073","endLine":8,"endColumn":12},{"ruleId":"1070","severity":1,"message":"1144","line":11,"column":12,"nodeType":"1072","messageId":"1073","endLine":11,"endColumn":17},{"ruleId":"1070","severity":1,"message":"1145","line":11,"column":19,"nodeType":"1072","messageId":"1073","endLine":11,"endColumn":25},{"ruleId":"1070","severity":1,"message":"1183","line":13,"column":12,"nodeType":"1072","messageId":"1073","endLine":13,"endColumn":21},{"ruleId":"1098","severity":1,"message":"1099","line":25,"column":25,"nodeType":"1100","endLine":31,"endColumn":27},{"ruleId":"1098","severity":1,"message":"1099","line":52,"column":25,"nodeType":"1100","endLine":58,"endColumn":27},{"ruleId":"1098","severity":1,"message":"1099","line":73,"column":25,"nodeType":"1100","endLine":79,"endColumn":27},{"ruleId":"1098","severity":1,"message":"1099","line":89,"column":25,"nodeType":"1100","endLine":95,"endColumn":27},{"ruleId":"1098","severity":1,"message":"1099","line":111,"column":25,"nodeType":"1100","endLine":117,"endColumn":27},{"ruleId":"1098","severity":1,"message":"1099","line":127,"column":25,"nodeType":"1100","endLine":132,"endColumn":27},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":28,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":36},{"ruleId":"1070","severity":1,"message":"1079","line":1,"column":38,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":47},{"ruleId":"1070","severity":1,"message":"1133","line":4,"column":9,"nodeType":"1072","messageId":"1073","endLine":4,"endColumn":16},{"ruleId":"1070","severity":1,"message":"1144","line":9,"column":12,"nodeType":"1072","messageId":"1073","endLine":9,"endColumn":17},{"ruleId":"1070","severity":1,"message":"1145","line":9,"column":19,"nodeType":"1072","messageId":"1073","endLine":9,"endColumn":25},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":16,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":24},{"ruleId":"1070","severity":1,"message":"1184","line":5,"column":8,"nodeType":"1072","messageId":"1073","endLine":5,"endColumn":19},{"ruleId":"1070","severity":1,"message":"1185","line":7,"column":8,"nodeType":"1072","messageId":"1073","endLine":7,"endColumn":24},{"ruleId":"1070","severity":1,"message":"1186","line":8,"column":8,"nodeType":"1072","messageId":"1073","endLine":8,"endColumn":25},{"ruleId":"1070","severity":1,"message":"1187","line":12,"column":8,"nodeType":"1072","messageId":"1073","endLine":12,"endColumn":17},{"ruleId":"1070","severity":1,"message":"1188","line":16,"column":10,"nodeType":"1072","messageId":"1073","endLine":16,"endColumn":21},{"ruleId":"1070","severity":1,"message":"1189","line":16,"column":23,"nodeType":"1072","messageId":"1073","endLine":16,"endColumn":31},{"ruleId":"1070","severity":1,"message":"1190","line":16,"column":33,"nodeType":"1072","messageId":"1073","endLine":16,"endColumn":43},{"ruleId":"1070","severity":1,"message":"1191","line":28,"column":7,"nodeType":"1072","messageId":"1073","endLine":28,"endColumn":20},{"ruleId":"1070","severity":1,"message":"1192","line":34,"column":7,"nodeType":"1072","messageId":"1073","endLine":34,"endColumn":23},{"ruleId":"1070","severity":1,"message":"1193","line":39,"column":7,"nodeType":"1072","messageId":"1073","endLine":39,"endColumn":21},{"ruleId":"1070","severity":1,"message":"1194","line":6,"column":8,"nodeType":"1072","messageId":"1073","endLine":6,"endColumn":16},{"ruleId":"1070","severity":1,"message":"1145","line":9,"column":19,"nodeType":"1072","messageId":"1073","endLine":9,"endColumn":25},{"ruleId":"1098","severity":1,"message":"1099","line":17,"column":25,"nodeType":"1100","endLine":17,"endColumn":95},{"ruleId":"1070","severity":1,"message":"1195","line":16,"column":7,"nodeType":"1072","messageId":"1073","endLine":16,"endColumn":18},{"ruleId":"1070","severity":1,"message":"1196","line":32,"column":12,"nodeType":"1072","messageId":"1073","endLine":32,"endColumn":16},{"ruleId":"1070","severity":1,"message":"1197","line":32,"column":18,"nodeType":"1072","messageId":"1073","endLine":32,"endColumn":25},{"ruleId":"1070","severity":1,"message":"1198","line":33,"column":12,"nodeType":"1072","messageId":"1073","endLine":33,"endColumn":21},{"ruleId":"1070","severity":1,"message":"1199","line":33,"column":23,"nodeType":"1072","messageId":"1073","endLine":33,"endColumn":35},{"ruleId":"1070","severity":1,"message":"1200","line":34,"column":12,"nodeType":"1072","messageId":"1073","endLine":34,"endColumn":22},{"ruleId":"1070","severity":1,"message":"1201","line":34,"column":24,"nodeType":"1072","messageId":"1073","endLine":34,"endColumn":37},{"ruleId":"1070","severity":1,"message":"1202","line":35,"column":12,"nodeType":"1072","messageId":"1073","endLine":35,"endColumn":26},{"ruleId":"1070","severity":1,"message":"1203","line":35,"column":28,"nodeType":"1072","messageId":"1073","endLine":35,"endColumn":45},{"ruleId":"1070","severity":1,"message":"1204","line":5,"column":8,"nodeType":"1072","messageId":"1073","endLine":5,"endColumn":21},{"ruleId":"1070","severity":1,"message":"1205","line":9,"column":8,"nodeType":"1072","messageId":"1073","endLine":9,"endColumn":18},{"ruleId":"1070","severity":1,"message":"1206","line":10,"column":9,"nodeType":"1072","messageId":"1073","endLine":10,"endColumn":22},{"ruleId":"1070","severity":1,"message":"1207","line":31,"column":12,"nodeType":"1072","messageId":"1073","endLine":31,"endColumn":22},{"ruleId":"1070","severity":1,"message":"1208","line":31,"column":24,"nodeType":"1072","messageId":"1073","endLine":31,"endColumn":37},{"ruleId":"1122","severity":1,"message":"1123","line":37,"column":9,"nodeType":"1124","messageId":"1125","endLine":54,"endColumn":10},{"ruleId":"1122","severity":1,"message":"1123","line":63,"column":9,"nodeType":"1124","messageId":"1125","endLine":90,"endColumn":10},{"ruleId":"1122","severity":1,"message":"1123","line":125,"column":9,"nodeType":"1124","messageId":"1125","endLine":152,"endColumn":10},{"ruleId":"1122","severity":1,"message":"1123","line":29,"column":9,"nodeType":"1124","messageId":"1125","endLine":44,"endColumn":10},{"ruleId":"1070","severity":1,"message":"1191","line":13,"column":7,"nodeType":"1072","messageId":"1073","endLine":13,"endColumn":20},{"ruleId":"1070","severity":1,"message":"1209","line":29,"column":7,"nodeType":"1072","messageId":"1073","endLine":29,"endColumn":19},{"ruleId":"1122","severity":1,"message":"1123","line":77,"column":9,"nodeType":"1124","messageId":"1125","endLine":113,"endColumn":10},{"ruleId":"1122","severity":1,"message":"1123","line":46,"column":9,"nodeType":"1124","messageId":"1125","endLine":63,"endColumn":10},{"ruleId":"1122","severity":1,"message":"1123","line":53,"column":9,"nodeType":"1124","messageId":"1125","endLine":83,"endColumn":10},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":16,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":24},{"ruleId":"1070","severity":1,"message":"1210","line":7,"column":9,"nodeType":"1072","messageId":"1073","endLine":7,"endColumn":21},{"ruleId":"1070","severity":1,"message":"1186","line":9,"column":8,"nodeType":"1072","messageId":"1073","endLine":9,"endColumn":25},{"ruleId":"1070","severity":1,"message":"1209","line":19,"column":7,"nodeType":"1072","messageId":"1073","endLine":19,"endColumn":19},{"ruleId":"1070","severity":1,"message":"1211","line":29,"column":7,"nodeType":"1072","messageId":"1073","endLine":29,"endColumn":20},{"ruleId":"1070","severity":1,"message":"1191","line":34,"column":7,"nodeType":"1072","messageId":"1073","endLine":34,"endColumn":20},{"ruleId":"1070","severity":1,"message":"1212","line":81,"column":11,"nodeType":"1072","messageId":"1073","endLine":81,"endColumn":28},{"ruleId":"1118","severity":1,"message":"1119","line":83,"column":50,"nodeType":"1120","messageId":"1121","endLine":83,"endColumn":52},{"ruleId":"1070","severity":1,"message":"1213","line":96,"column":11,"nodeType":"1072","messageId":"1073","endLine":96,"endColumn":29},{"ruleId":"1070","severity":1,"message":"1214","line":103,"column":11,"nodeType":"1072","messageId":"1073","endLine":103,"endColumn":18},{"ruleId":"1070","severity":1,"message":"1215","line":108,"column":11,"nodeType":"1072","messageId":"1073","endLine":108,"endColumn":26},{"ruleId":"1118","severity":1,"message":"1119","line":110,"column":54,"nodeType":"1120","messageId":"1121","endLine":110,"endColumn":56},{"ruleId":"1070","severity":1,"message":"1216","line":118,"column":11,"nodeType":"1072","messageId":"1073","endLine":118,"endColumn":27},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":16,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":24},{"ruleId":"1070","severity":1,"message":"1217","line":3,"column":10,"nodeType":"1072","messageId":"1073","endLine":3,"endColumn":35},{"ruleId":"1070","severity":1,"message":"1218","line":16,"column":11,"nodeType":"1072","messageId":"1073","endLine":16,"endColumn":29},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":16,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":24},{"ruleId":"1070","severity":1,"message":"1219","line":6,"column":8,"nodeType":"1072","messageId":"1073","endLine":6,"endColumn":24},{"ruleId":"1070","severity":1,"message":"1220","line":10,"column":8,"nodeType":"1072","messageId":"1073","endLine":10,"endColumn":19},{"ruleId":"1122","severity":1,"message":"1123","line":70,"column":9,"nodeType":"1124","messageId":"1125","endLine":98,"endColumn":10},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":16,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":24},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":16,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":24},{"ruleId":"1070","severity":1,"message":"1219","line":7,"column":8,"nodeType":"1072","messageId":"1073","endLine":7,"endColumn":24},{"ruleId":"1122","severity":1,"message":"1123","line":49,"column":9,"nodeType":"1124","messageId":"1125","endLine":69,"endColumn":10},{"ruleId":"1070","severity":1,"message":"1221","line":4,"column":25,"nodeType":"1072","messageId":"1073","endLine":4,"endColumn":39},{"ruleId":"1070","severity":1,"message":"1145","line":10,"column":19,"nodeType":"1072","messageId":"1073","endLine":10,"endColumn":25},{"ruleId":"1070","severity":1,"message":"1222","line":3,"column":10,"nodeType":"1072","messageId":"1073","endLine":3,"endColumn":18},{"ruleId":"1070","severity":1,"message":"1223","line":4,"column":10,"nodeType":"1072","messageId":"1073","endLine":4,"endColumn":24},{"ruleId":"1070","severity":1,"message":"1144","line":8,"column":12,"nodeType":"1072","messageId":"1073","endLine":8,"endColumn":17},{"ruleId":"1070","severity":1,"message":"1145","line":8,"column":19,"nodeType":"1072","messageId":"1073","endLine":8,"endColumn":25},{"ruleId":"1070","severity":1,"message":"1224","line":8,"column":7,"nodeType":"1072","messageId":"1073","endLine":8,"endColumn":12},{"ruleId":"1066","replacedBy":"1225"},{"ruleId":"1068","replacedBy":"1226"},{"ruleId":"1070","severity":1,"message":"1155","line":1,"column":16,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":26},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":28,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":36},{"ruleId":"1070","severity":1,"message":"1177","line":6,"column":8,"nodeType":"1072","messageId":"1073","endLine":6,"endColumn":24},{"ruleId":"1070","severity":1,"message":"1079","line":1,"column":26,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":35},{"ruleId":"1070","severity":1,"message":"1227","line":7,"column":8,"nodeType":"1072","messageId":"1073","endLine":7,"endColumn":18},{"ruleId":"1070","severity":1,"message":"1228","line":69,"column":7,"nodeType":"1072","messageId":"1073","endLine":69,"endColumn":19},{"ruleId":"1070","severity":1,"message":"1155","line":1,"column":16,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":26},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":28,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":36},{"ruleId":"1070","severity":1,"message":"1133","line":3,"column":9,"nodeType":"1072","messageId":"1073","endLine":3,"endColumn":16},{"ruleId":"1098","severity":1,"message":"1099","line":27,"column":25,"nodeType":"1100","endLine":27,"endColumn":44},{"ruleId":"1098","severity":1,"message":"1099","line":37,"column":25,"nodeType":"1100","endLine":37,"endColumn":44},{"ruleId":"1098","severity":1,"message":"1099","line":51,"column":25,"nodeType":"1100","endLine":51,"endColumn":44},{"ruleId":"1098","severity":1,"message":"1099","line":61,"column":25,"nodeType":"1100","endLine":61,"endColumn":44},{"ruleId":"1070","severity":1,"message":"1229","line":2,"column":10,"nodeType":"1072","messageId":"1073","endLine":2,"endColumn":16},{"ruleId":"1070","severity":1,"message":"1230","line":3,"column":8,"nodeType":"1072","messageId":"1073","endLine":3,"endColumn":14},{"ruleId":"1070","severity":1,"message":"1231","line":2,"column":9,"nodeType":"1072","messageId":"1073","endLine":2,"endColumn":18},{"ruleId":"1070","severity":1,"message":"1232","line":5,"column":10,"nodeType":"1072","messageId":"1073","endLine":5,"endColumn":19},{"ruleId":"1070","severity":1,"message":"1157","line":13,"column":5,"nodeType":"1072","messageId":"1073","endLine":13,"endColumn":18},{"ruleId":"1070","severity":1,"message":"1158","line":15,"column":5,"nodeType":"1072","messageId":"1073","endLine":15,"endColumn":18},{"ruleId":"1070","severity":1,"message":"1144","line":20,"column":12,"nodeType":"1072","messageId":"1073","endLine":20,"endColumn":17},{"ruleId":"1070","severity":1,"message":"1145","line":20,"column":19,"nodeType":"1072","messageId":"1073","endLine":20,"endColumn":25},{"ruleId":"1070","severity":1,"message":"1233","line":24,"column":11,"nodeType":"1072","messageId":"1073","endLine":24,"endColumn":18},{"ruleId":"1070","severity":1,"message":"1155","line":1,"column":16,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":26},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":28,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":36},{"ruleId":"1070","severity":1,"message":"1133","line":3,"column":9,"nodeType":"1072","messageId":"1073","endLine":3,"endColumn":16},{"ruleId":"1122","severity":1,"message":"1123","line":43,"column":5,"nodeType":"1124","messageId":"1125","endLine":174,"endColumn":6},{"ruleId":"1098","severity":1,"message":"1099","line":49,"column":29,"nodeType":"1100","endLine":49,"endColumn":49},{"ruleId":"1098","severity":1,"message":"1099","line":51,"column":29,"nodeType":"1100","endLine":51,"endColumn":49},{"ruleId":"1098","severity":1,"message":"1099","line":56,"column":29,"nodeType":"1100","endLine":56,"endColumn":49},{"ruleId":"1098","severity":1,"message":"1099","line":58,"column":29,"nodeType":"1100","endLine":58,"endColumn":49},{"ruleId":"1098","severity":1,"message":"1099","line":63,"column":29,"nodeType":"1100","endLine":63,"endColumn":49},{"ruleId":"1098","severity":1,"message":"1099","line":65,"column":29,"nodeType":"1100","endLine":65,"endColumn":49},{"ruleId":"1098","severity":1,"message":"1099","line":70,"column":29,"nodeType":"1100","endLine":70,"endColumn":49},{"ruleId":"1098","severity":1,"message":"1099","line":72,"column":29,"nodeType":"1100","endLine":72,"endColumn":49},{"ruleId":"1098","severity":1,"message":"1099","line":82,"column":29,"nodeType":"1100","endLine":82,"endColumn":49},{"ruleId":"1098","severity":1,"message":"1099","line":84,"column":29,"nodeType":"1100","endLine":84,"endColumn":49},{"ruleId":"1098","severity":1,"message":"1099","line":89,"column":29,"nodeType":"1100","endLine":89,"endColumn":49},{"ruleId":"1098","severity":1,"message":"1099","line":91,"column":29,"nodeType":"1100","endLine":91,"endColumn":49},{"ruleId":"1098","severity":1,"message":"1099","line":96,"column":29,"nodeType":"1100","endLine":96,"endColumn":49},{"ruleId":"1098","severity":1,"message":"1099","line":98,"column":29,"nodeType":"1100","endLine":98,"endColumn":49},{"ruleId":"1098","severity":1,"message":"1099","line":108,"column":29,"nodeType":"1100","endLine":108,"endColumn":49},{"ruleId":"1098","severity":1,"message":"1099","line":110,"column":29,"nodeType":"1100","endLine":110,"endColumn":49},{"ruleId":"1098","severity":1,"message":"1099","line":115,"column":29,"nodeType":"1100","endLine":115,"endColumn":49},{"ruleId":"1098","severity":1,"message":"1099","line":117,"column":29,"nodeType":"1100","endLine":117,"endColumn":49},{"ruleId":"1098","severity":1,"message":"1099","line":127,"column":29,"nodeType":"1100","endLine":127,"endColumn":49},{"ruleId":"1098","severity":1,"message":"1099","line":129,"column":29,"nodeType":"1100","endLine":129,"endColumn":49},{"ruleId":"1098","severity":1,"message":"1099","line":134,"column":29,"nodeType":"1100","endLine":134,"endColumn":75},{"ruleId":"1098","severity":1,"message":"1099","line":136,"column":29,"nodeType":"1100","endLine":136,"endColumn":75},{"ruleId":"1098","severity":1,"message":"1099","line":141,"column":29,"nodeType":"1100","endLine":141,"endColumn":75},{"ruleId":"1098","severity":1,"message":"1099","line":143,"column":29,"nodeType":"1100","endLine":143,"endColumn":75},{"ruleId":"1098","severity":1,"message":"1099","line":153,"column":29,"nodeType":"1100","endLine":153,"endColumn":49},{"ruleId":"1098","severity":1,"message":"1099","line":155,"column":29,"nodeType":"1100","endLine":155,"endColumn":49},{"ruleId":"1098","severity":1,"message":"1099","line":160,"column":29,"nodeType":"1100","endLine":160,"endColumn":49},{"ruleId":"1098","severity":1,"message":"1099","line":162,"column":29,"nodeType":"1100","endLine":162,"endColumn":49},{"ruleId":"1098","severity":1,"message":"1099","line":167,"column":29,"nodeType":"1100","endLine":167,"endColumn":49},{"ruleId":"1098","severity":1,"message":"1099","line":169,"column":29,"nodeType":"1100","endLine":169,"endColumn":49},{"ruleId":"1070","severity":1,"message":"1176","line":1,"column":38,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":44},{"ruleId":"1070","severity":1,"message":"1158","line":15,"column":5,"nodeType":"1072","messageId":"1073","endLine":15,"endColumn":18},{"ruleId":"1070","severity":1,"message":"1145","line":21,"column":19,"nodeType":"1072","messageId":"1073","endLine":21,"endColumn":25},{"ruleId":"1070","severity":1,"message":"1155","line":1,"column":16,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":26},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":28,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":36},{"ruleId":"1070","severity":1,"message":"1234","line":6,"column":8,"nodeType":"1072","messageId":"1073","endLine":6,"endColumn":15},{"ruleId":"1098","severity":1,"message":"1099","line":17,"column":25,"nodeType":"1100","endLine":17,"endColumn":147},{"ruleId":"1070","severity":1,"message":"1155","line":1,"column":16,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":26},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":28,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":36},{"ruleId":"1070","severity":1,"message":"1177","line":6,"column":8,"nodeType":"1072","messageId":"1073","endLine":6,"endColumn":24},{"ruleId":"1070","severity":1,"message":"1155","line":1,"column":16,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":26},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":28,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":36},{"ruleId":"1070","severity":1,"message":"1130","line":2,"column":10,"nodeType":"1072","messageId":"1073","endLine":2,"endColumn":16},{"ruleId":"1070","severity":1,"message":"1155","line":1,"column":26,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":36},{"ruleId":"1070","severity":1,"message":"1087","line":5,"column":9,"nodeType":"1072","messageId":"1073","endLine":5,"endColumn":13},{"ruleId":"1070","severity":1,"message":"1235","line":49,"column":12,"nodeType":"1072","messageId":"1073","endLine":49,"endColumn":16},{"ruleId":"1070","severity":1,"message":"1236","line":49,"column":18,"nodeType":"1072","messageId":"1073","endLine":49,"endColumn":25},{"ruleId":"1070","severity":1,"message":"1126","line":53,"column":24,"nodeType":"1072","messageId":"1073","endLine":53,"endColumn":28},{"ruleId":"1098","severity":1,"message":"1099","line":147,"column":25,"nodeType":"1100","endLine":147,"endColumn":59},{"ruleId":"1070","severity":1,"message":"1155","line":1,"column":16,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":26},{"ruleId":"1070","severity":1,"message":"1079","line":1,"column":28,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":37},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":39,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":47},{"ruleId":"1070","severity":1,"message":"1155","line":1,"column":16,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":26},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":28,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":36},{"ruleId":"1070","severity":1,"message":"1177","line":5,"column":8,"nodeType":"1072","messageId":"1073","endLine":5,"endColumn":24},{"ruleId":"1070","severity":1,"message":"1155","line":1,"column":17,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":27},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":29,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":37},{"ruleId":"1070","severity":1,"message":"1176","line":1,"column":39,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":45},{"ruleId":"1070","severity":1,"message":"1130","line":2,"column":10,"nodeType":"1072","messageId":"1073","endLine":2,"endColumn":16},{"ruleId":"1070","severity":1,"message":"1156","line":5,"column":8,"nodeType":"1072","messageId":"1073","endLine":5,"endColumn":21},{"ruleId":"1070","severity":1,"message":"1155","line":1,"column":17,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":27},{"ruleId":"1070","severity":1,"message":"1079","line":1,"column":29,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":38},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":40,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":48},{"ruleId":"1070","severity":1,"message":"1176","line":1,"column":50,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":56},{"ruleId":"1070","severity":1,"message":"1158","line":14,"column":5,"nodeType":"1072","messageId":"1073","endLine":14,"endColumn":18},{"ruleId":"1098","severity":1,"message":"1099","line":44,"column":13,"nodeType":"1100","endLine":44,"endColumn":189},{"ruleId":"1070","severity":1,"message":"1079","line":1,"column":28,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":37},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":39,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":47},{"ruleId":"1070","severity":1,"message":"1176","line":1,"column":49,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":55},{"ruleId":"1070","severity":1,"message":"1237","line":9,"column":3,"nodeType":"1072","messageId":"1073","endLine":9,"endColumn":13},{"ruleId":"1070","severity":1,"message":"1238","line":11,"column":3,"nodeType":"1072","messageId":"1073","endLine":11,"endColumn":14},{"ruleId":"1070","severity":1,"message":"1239","line":12,"column":3,"nodeType":"1072","messageId":"1073","endLine":12,"endColumn":19},{"ruleId":"1070","severity":1,"message":"1240","line":13,"column":3,"nodeType":"1072","messageId":"1073","endLine":13,"endColumn":21},{"ruleId":"1070","severity":1,"message":"1241","line":14,"column":3,"nodeType":"1072","messageId":"1073","endLine":14,"endColumn":25},{"ruleId":"1070","severity":1,"message":"1242","line":15,"column":3,"nodeType":"1072","messageId":"1073","endLine":15,"endColumn":25},{"ruleId":"1070","severity":1,"message":"1243","line":21,"column":11,"nodeType":"1072","messageId":"1073","endLine":21,"endColumn":19},{"ruleId":"1070","severity":1,"message":"1176","line":1,"column":16,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":22},{"ruleId":"1244","severity":1,"message":"1245","line":20,"column":70,"nodeType":"1120","messageId":"1246","endLine":20,"endColumn":71},{"ruleId":"1070","severity":1,"message":"1247","line":15,"column":10,"nodeType":"1072","messageId":"1073","endLine":15,"endColumn":35},{"ruleId":"1070","severity":1,"message":"1248","line":28,"column":7,"nodeType":"1072","messageId":"1073","endLine":28,"endColumn":23},{"ruleId":"1070","severity":1,"message":"1249","line":153,"column":11,"nodeType":"1072","messageId":"1073","endLine":153,"endColumn":23},{"ruleId":"1122","severity":1,"message":"1123","line":249,"column":9,"nodeType":"1124","messageId":"1125","endLine":282,"endColumn":10},{"ruleId":"1122","severity":1,"message":"1123","line":574,"column":9,"nodeType":"1124","messageId":"1125","endLine":658,"endColumn":10},{"ruleId":"1070","severity":1,"message":"1133","line":4,"column":8,"nodeType":"1072","messageId":"1073","endLine":4,"endColumn":15},{"ruleId":"1070","severity":1,"message":"1144","line":8,"column":12,"nodeType":"1072","messageId":"1073","endLine":8,"endColumn":17},{"ruleId":"1070","severity":1,"message":"1145","line":8,"column":19,"nodeType":"1072","messageId":"1073","endLine":8,"endColumn":25},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":16,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":24},{"ruleId":"1122","severity":1,"message":"1123","line":30,"column":9,"nodeType":"1124","messageId":"1125","endLine":117,"endColumn":10},{"ruleId":"1070","severity":1,"message":"1155","line":1,"column":16,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":26},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":28,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":36},{"ruleId":"1098","severity":1,"message":"1099","line":13,"column":21,"nodeType":"1100","endLine":13,"endColumn":179},{"ruleId":"1070","severity":1,"message":"1155","line":1,"column":16,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":26},{"ruleId":"1070","severity":1,"message":"1079","line":1,"column":28,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":37},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":39,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":47},{"ruleId":"1070","severity":1,"message":"1176","line":1,"column":49,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":55},{"ruleId":"1070","severity":1,"message":"1177","line":2,"column":8,"nodeType":"1072","messageId":"1073","endLine":2,"endColumn":24},{"ruleId":"1070","severity":1,"message":"1145","line":6,"column":19,"nodeType":"1072","messageId":"1073","endLine":6,"endColumn":25},{"ruleId":"1070","severity":1,"message":"1176","line":1,"column":39,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":45},{"ruleId":"1070","severity":1,"message":"1133","line":10,"column":8,"nodeType":"1072","messageId":"1073","endLine":10,"endColumn":15},{"ruleId":"1070","severity":1,"message":"1144","line":73,"column":10,"nodeType":"1072","messageId":"1073","endLine":73,"endColumn":15},{"ruleId":"1070","severity":1,"message":"1145","line":73,"column":17,"nodeType":"1072","messageId":"1073","endLine":73,"endColumn":23},{"ruleId":"1070","severity":1,"message":"1155","line":1,"column":17,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":27},{"ruleId":"1070","severity":1,"message":"1176","line":1,"column":39,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":45},{"ruleId":"1070","severity":1,"message":"1156","line":2,"column":8,"nodeType":"1072","messageId":"1073","endLine":2,"endColumn":21},{"ruleId":"1134","severity":1,"message":"1179","line":125,"column":9,"nodeType":"1136","messageId":"1180","endLine":125,"endColumn":119},{"ruleId":"1098","severity":1,"message":"1099","line":144,"column":33,"nodeType":"1100","endLine":150,"endColumn":41},{"ruleId":"1098","severity":1,"message":"1099","line":155,"column":33,"nodeType":"1100","endLine":161,"endColumn":41},{"ruleId":"1070","severity":1,"message":"1250","line":4,"column":8,"nodeType":"1072","messageId":"1073","endLine":4,"endColumn":13},{"ruleId":"1251","severity":1,"message":"1252","line":14,"column":17,"nodeType":"1100","endLine":14,"endColumn":131},{"ruleId":"1098","severity":1,"message":"1099","line":41,"column":13,"nodeType":"1100","endLine":45,"endColumn":19},{"ruleId":"1070","severity":1,"message":"1078","line":5,"column":16,"nodeType":"1072","messageId":"1073","endLine":5,"endColumn":24},{"ruleId":"1070","severity":1,"message":"1253","line":2,"column":8,"nodeType":"1072","messageId":"1073","endLine":2,"endColumn":16},{"ruleId":"1070","severity":1,"message":"1254","line":7,"column":7,"nodeType":"1072","messageId":"1073","endLine":7,"endColumn":11},{"ruleId":"1070","severity":1,"message":"1255","line":15,"column":7,"nodeType":"1072","messageId":"1073","endLine":15,"endColumn":11},{"ruleId":"1098","severity":1,"message":"1099","line":55,"column":21,"nodeType":"1100","endLine":55,"endColumn":219},{"ruleId":"1098","severity":1,"message":"1099","line":59,"column":21,"nodeType":"1100","endLine":59,"endColumn":219},{"ruleId":"1098","severity":1,"message":"1099","line":63,"column":21,"nodeType":"1100","endLine":63,"endColumn":219},{"ruleId":"1070","severity":1,"message":"1256","line":14,"column":7,"nodeType":"1072","messageId":"1073","endLine":14,"endColumn":18},{"ruleId":"1118","severity":1,"message":"1119","line":24,"column":56,"nodeType":"1120","messageId":"1121","endLine":24,"endColumn":58},{"ruleId":"1118","severity":1,"message":"1119","line":24,"column":54,"nodeType":"1120","messageId":"1121","endLine":24,"endColumn":56},{"ruleId":"1118","severity":1,"message":"1119","line":43,"column":55,"nodeType":"1120","messageId":"1121","endLine":43,"endColumn":57},{"ruleId":"1070","severity":1,"message":"1257","line":3,"column":8,"nodeType":"1072","messageId":"1073","endLine":3,"endColumn":19},{"ruleId":"1070","severity":1,"message":"1258","line":5,"column":8,"nodeType":"1072","messageId":"1073","endLine":5,"endColumn":21},{"ruleId":"1070","severity":1,"message":"1210","line":6,"column":9,"nodeType":"1072","messageId":"1073","endLine":6,"endColumn":21},{"ruleId":"1070","severity":1,"message":"1259","line":7,"column":10,"nodeType":"1072","messageId":"1073","endLine":7,"endColumn":16},{"ruleId":"1070","severity":1,"message":"1260","line":17,"column":11,"nodeType":"1072","messageId":"1073","endLine":17,"endColumn":21},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":16,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":24},{"ruleId":"1098","severity":1,"message":"1099","line":96,"column":37,"nodeType":"1100","endLine":96,"endColumn":73},{"ruleId":"1070","severity":1,"message":"1078","line":1,"column":29,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":37},{"ruleId":"1070","severity":1,"message":"1176","line":1,"column":39,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":45},{"ruleId":"1134","severity":1,"message":"1179","line":68,"column":9,"nodeType":"1136","messageId":"1180","endLine":68,"endColumn":119},{"ruleId":"1098","severity":1,"message":"1099","line":87,"column":33,"nodeType":"1100","endLine":87,"endColumn":87},{"ruleId":"1098","severity":1,"message":"1099","line":92,"column":33,"nodeType":"1100","endLine":92,"endColumn":86},{"ruleId":"1070","severity":1,"message":"1133","line":3,"column":8,"nodeType":"1072","messageId":"1073","endLine":3,"endColumn":15},{"ruleId":"1070","severity":1,"message":"1145","line":10,"column":19,"nodeType":"1072","messageId":"1073","endLine":10,"endColumn":25},{"ruleId":"1070","severity":1,"message":"1183","line":12,"column":12,"nodeType":"1072","messageId":"1073","endLine":12,"endColumn":21},{"ruleId":"1251","severity":1,"message":"1252","line":18,"column":21,"nodeType":"1100","endLine":18,"endColumn":215},{"ruleId":"1098","severity":1,"message":"1099","line":46,"column":17,"nodeType":"1100","endLine":56,"endColumn":23},{"ruleId":"1098","severity":1,"message":"1099","line":69,"column":25,"nodeType":"1100","endLine":75,"endColumn":27},{"ruleId":"1098","severity":1,"message":"1099","line":96,"column":25,"nodeType":"1100","endLine":102,"endColumn":27},{"ruleId":"1098","severity":1,"message":"1099","line":117,"column":25,"nodeType":"1100","endLine":123,"endColumn":27},{"ruleId":"1098","severity":1,"message":"1099","line":133,"column":25,"nodeType":"1100","endLine":139,"endColumn":27},{"ruleId":"1098","severity":1,"message":"1099","line":155,"column":25,"nodeType":"1100","endLine":161,"endColumn":27},{"ruleId":"1098","severity":1,"message":"1099","line":171,"column":25,"nodeType":"1100","endLine":176,"endColumn":27},{"ruleId":"1070","severity":1,"message":"1176","line":1,"column":39,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":45},{"ruleId":"1070","severity":1,"message":"1079","line":1,"column":47,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":56},{"ruleId":"1070","severity":1,"message":"1079","line":1,"column":24,"nodeType":"1072","messageId":"1073","endLine":1,"endColumn":33},{"ruleId":"1070","severity":1,"message":"1261","line":6,"column":8,"nodeType":"1072","messageId":"1073","endLine":6,"endColumn":18},{"ruleId":"1070","severity":1,"message":"1262","line":7,"column":8,"nodeType":"1072","messageId":"1073","endLine":7,"endColumn":18},{"ruleId":"1070","severity":1,"message":"1254","line":9,"column":7,"nodeType":"1072","messageId":"1073","endLine":9,"endColumn":11},{"ruleId":"1070","severity":1,"message":"1255","line":17,"column":7,"nodeType":"1072","messageId":"1073","endLine":17,"endColumn":11},{"ruleId":"1098","severity":1,"message":"1099","line":54,"column":21,"nodeType":"1100","endLine":54,"endColumn":193},{"ruleId":"1098","severity":1,"message":"1099","line":58,"column":21,"nodeType":"1100","endLine":58,"endColumn":194},{"ruleId":"1098","severity":1,"message":"1099","line":62,"column":21,"nodeType":"1100","endLine":62,"endColumn":194},"no-native-reassign",["1263"],"no-negated-in-lhs",["1264"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'NavBarV2' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setInit'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["1265"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'MakePage' is defined but never used.","'initializeApp' is defined but never used.","'UserSection' is defined but never used.","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.","ArrayExpression",["1266"],"'createContext' is defined but never used.","'Link' is defined but never used.","'useParams' is defined but never used.","'ReactGa' is defined but never used.","'ChakraProvider' is defined but never used.","'setNowState' is assigned a value but never used.","'load' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'location.state' and 'saveLocalStorage'. Either include them or remove the dependency array.",["1267"],"no-undef","'naviF' is not defined.","undef","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'AccessAlarmsIcon' is defined but never used.","'Icons' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'gadata' is defined but never used.","'Tooltip' is defined but never used.","'InformationCircle' is defined but never used.","'setPart' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getThisUserDatas'. Either include it or remove the dependency array.",["1268"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setCnums' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'name' is assigned a value but never used.","'ApplySection' is defined but never used.","'AppDownloadSection' is defined but never used.","'animations' is defined but never used.","'motion' is defined but never used.","'Delete' is defined but never used.","'Options' is defined but never used.","'produce' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'good' is defined but never used.","no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","'templateNum' is assigned a value but never used.","'setTemplateNum' is assigned a value but never used.","'state' is assigned a value but never used.","'action' is assigned a value but never used.","'handleOpen' is assigned a value but never used.","'onChangeTitle' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-dupe-keys","Duplicate key 'width'.","ObjectExpression","'useContext' is defined but never used.","'AutosizeInput' is defined but never used.","'PopoverHeader' is defined but never used.","'PopoverFooter' is defined but never used.","'PopoverCloseButton' is defined but never used.","'PopoverAnchor' is defined but never used.","'ButtonGroup' is defined but never used.","'Portal' is defined but never used.","'SelectCustom' is defined but never used.","'Button' is defined but never used.","'EditAppDownloadSection' is defined but never used.","'EditApplySection' is defined but never used.","Duplicate key 'text'.","'stService' is defined but never used.","'Copy' is defined but never used.","'saved_delete' is assigned a value but never used.","'published_delete' is assigned a value but never used.","'urlStores' is assigned a value but never used.","'datas' is assigned a value but never used.","React Hook useEffect contains a call to 'setBack'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [scrollPosition] as a second argument to the useEffect Hook.",["1269"],"'useRef' is defined but never used.","'TextareaAutosize' is defined but never used.","'returnButton' is assigned a value but never used.","Nested block is redundant.","redundantNestedBlock","'AnimationDiv' is defined but never used.","'ourA' is defined but never used.","'imageShow' is assigned a value but never used.","'OnOffCustom' is defined but never used.","'ResponsiveCustom' is defined but never used.","'CheckBoxContainer' is defined but never used.","'BoxCustom' is defined but never used.","'AlignCenter' is defined but never used.","'AlignEnd' is defined but never used.","'AlignStart' is defined but never used.","'layoutOptions' is assigned a value but never used.","'iconColorOptions' is assigned a value but never used.","'paddingOptions' is assigned a value but never used.","'TextAuto' is defined but never used.","'logoOptions' is assigned a value but never used.","'logo' is assigned a value but never used.","'setLogo' is assigned a value but never used.","'buttonUse' is assigned a value but never used.","'setButtonUse' is assigned a value but never used.","'buttonFunc' is assigned a value but never used.","'setButtonFunc' is assigned a value but never used.","'buttonTemplate' is assigned a value but never used.","'setButtonTemplate' is assigned a value but never used.","'ConfirmCustom' is defined but never used.","'FontFamily' is defined but never used.","'DragIndicator' is defined but never used.","'deleteopen' is assigned a value but never used.","'setDeleteOpen' is assigned a value but never used.","'alignOptions' is assigned a value but never used.","'CustomSwitch' is defined but never used.","'buttonOptions' is assigned a value but never used.","'changeAlignOption' is assigned a value but never used.","'changeLayoutOption' is assigned a value but never used.","'ctaOpen' is assigned a value but never used.","'changeCtaOption' is assigned a value but never used.","'returnCtaOptions' is assigned a value but never used.","'detailSectionTemplateList' is defined but never used.","'onChangeButtonLink' is assigned a value but never used.","'ApplyInputCustom' is defined but never used.","'InputCustom' is defined but never used.","'FacebookSquare' is defined but never used.","'Template' is defined but never used.","'DesignServices' is defined but never used.","'label' is assigned a value but never used.",["1263"],["1264"],"'Typography' is defined but never used.","'CustomSwitch' is assigned a value but never used.","'styled' is defined but never used.","'Switch' is defined but never used.","'Link45deg' is defined but never used.","'EditInput' is defined but never used.","'popover' is assigned a value but never used.","'Element' is defined but never used.","'done' is assigned a value but never used.","'setDone' is assigned a value but never used.","'SliderMark' is defined but never used.","'NumberInput' is defined but never used.","'NumberInputField' is defined but never used.","'NumberInputStepper' is defined but never used.","'NumberIncrementStepper' is defined but never used.","'NumberDecrementStepper' is defined but never used.","'onChange' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'StoreMallDirectoryRounded' is defined but never used.","'imageSizeOptions' is assigned a value but never used.","'setSlideSize' is assigned a value but never used.","'Phone' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'Checkbox' is defined but never used.","'Prev' is assigned a value but never used.","'Next' is assigned a value but never used.","'sizeOptions' is assigned a value but never used.","'RadioCustom' is defined but never used.","'AddContentImg' is defined but never used.","'Select' is defined but never used.","'mockOption' is assigned a value but never used.","'prevButton' is defined but never used.","'nextButton' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1270","fix":"1271"},{"desc":"1272","fix":"1273"},{"desc":"1274","fix":"1275"},{"desc":"1276","fix":"1277"},{"desc":"1278","fix":"1279"},"Add dependencies array: []",{"range":"1280","text":"1281"},"Update the dependencies array to be: [loadData, loading]",{"range":"1282","text":"1283"},"Update the dependencies array to be: [location.state, saveLocalStorage]",{"range":"1284","text":"1285"},"Update the dependencies array to be: [getThisUserDatas, loading, update]",{"range":"1286","text":"1287"},"Add dependencies array: [scrollPosition]",{"range":"1288","text":"1289"},[1004,1004],", []",[1141,1150],"[loadData, loading]",[4954,4956],"[location.state, saveLocalStorage]",[1505,1522],"[getThisUserDatas, loading, update]",[583,583],", [scrollPosition]"]