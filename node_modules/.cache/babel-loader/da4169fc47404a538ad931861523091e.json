{"ast":null,"code":"var _jsxFileName = \"/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/EditTemplates/EditHero/Background.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { MyContext } from '../../../../../pages/Make/MakePageV2';\nimport produce from 'immer';\nimport CheckBoxContainer from '../../tools/CheckBoxContainer';\nimport ImageAddEdit from '../../tools/ImageAddEdit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Background({\n  content\n}) {\n  _s();\n\n  const {\n    state,\n    action\n  } = useContext(MyContext); // 템플릿 2 이미지의 경우에는\n\n  const onChangeBackgroundImage = e => {\n    let newContents = JSON.parse(JSON.stringify(state.contents));\n    const {\n      target: {\n        files\n      }\n    } = e;\n    const oneFile = files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = finishedEvent => {\n      // 로딩이 끝날 때 실행한다는 뜻.\n      const {\n        currentTarget: {\n          result\n        }\n      } = finishedEvent; // newContents = state.contents.map((item, index) => index === state.secNum ? {...item, image: {...item.image, attachment : result}} : item)\n\n      newContents[state.secNum].backgroundImage.attachment = result;\n    };\n\n    reader.readAsDataURL(oneFile);\n    action.setContents(newContents);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EditColorContainer, {\n      text: \"배경 색상\",\n      value: content.backgroundColor,\n      func: e => action.setContents(produce(state.contents, draft => {\n        draft[state.secNum].backgroundColor = e;\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-element\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-element__one\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-element__left\",\n          children: \"\\uBC30\\uACBD \\uC0C9\\uC0C1 \\uD22C\\uBA85\\uB3C4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-element__right\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => action.setContents(produce(state.contents, draft => {\n              draft[state.secNum].backgroundOpacity = e.currentTarget.value;\n              draft[state.secNum].backgroundImage.use = 'hidden';\n            })),\n            value: content.backgroundOpacity,\n            type: \"number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CheckBoxContainer, {\n      text: \"\\uBC30\\uACBD\\uC5D0 \\uC774\\uBBF8\\uC9C0 \\uC0BD\\uC785\",\n      value: content.backgroundImage.use,\n      func: () => action.setContents(produce(state.contents, draft => {\n        draft[state.secNum].backgroundImage.use = !content.backgroundImage.use;\n        draft[state.secNum].backgroundColor = 'transparent';\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), content.backgroundImage.use && /*#__PURE__*/_jsxDEV(ImageAddEdit, {\n      text: \"\\uBC30\\uACBD\\uC5D0 \\uC774\\uBBF8\\uC9C0 \\uC0BD\\uC785\",\n      value: content.backgroundImage.attachment,\n      func: e => onChangeBackgroundImage(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Background, \"m30+qoRVjXR493qus6DIhG1YP+M=\");\n\n_c = Background;\nexport default Background;\n\nvar _c;\n\n$RefreshReg$(_c, \"Background\");","map":{"version":3,"sources":["/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/EditTemplates/EditHero/Background.js"],"names":["React","useState","MyContext","produce","CheckBoxContainer","ImageAddEdit","Background","content","state","action","useContext","onChangeBackgroundImage","e","newContents","JSON","parse","stringify","contents","target","files","oneFile","reader","FileReader","onloadend","finishedEvent","currentTarget","result","secNum","backgroundImage","attachment","readAsDataURL","setContents","backgroundColor","draft","backgroundOpacity","value","use"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { MyContext } from '../../../../../pages/Make/MakePageV2'\nimport produce from 'immer';\nimport CheckBoxContainer from '../../tools/CheckBoxContainer'\nimport ImageAddEdit from '../../tools/ImageAddEdit'\n\nfunction Background({content}){\n    const { state, action } = useContext(MyContext)\n\n     // 템플릿 2 이미지의 경우에는\n     const onChangeBackgroundImage = e => {\n        let newContents = JSON.parse(JSON.stringify(state.contents))\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            const {currentTarget:{result}} = finishedEvent;\n            // newContents = state.contents.map((item, index) => index === state.secNum ? {...item, image: {...item.image, attachment : result}} : item)\n            newContents[state.secNum].backgroundImage.attachment = result;\n        }\n        reader.readAsDataURL(oneFile);\n        action.setContents(newContents);\n    }\n\n    return(\n        <>\n        <EditColorContainer text={\"배경 색상\"} value={content.backgroundColor} func={e => action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].backgroundColor = e\n        }))} />\n        <div className=\"edit-element\">\n            <div className=\"edit-element__one\">\n                <div className=\"edit-element__left\">배경 색상 투명도</div>\n                <div className=\"edit-element__right\">\n                    <input onChange={(e) => action.setContents(produce(state.contents, draft => {\n                        draft[state.secNum].backgroundOpacity = e.currentTarget.value\n                        draft[state.secNum].backgroundImage.use = 'hidden'\n                    }))} value={content.backgroundOpacity} type=\"number\" />\n                </div>\n            </div>\n        </div>\n        <CheckBoxContainer text=\"배경에 이미지 삽입\" value={content.backgroundImage.use} func={ () => action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].backgroundImage.use = !content.backgroundImage.use;\n            draft[state.secNum].backgroundColor= 'transparent';\n        }))} />\n        {\n            content.backgroundImage.use && \n                <ImageAddEdit text=\"배경에 이미지 삽입\" value={content.backgroundImage.attachment} func={e => onChangeBackgroundImage(e)} />\n        }\n        </>\n    )\n}\n\nexport default Background\n"]},"metadata":{},"sourceType":"module"}