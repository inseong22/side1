{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/undoui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport undoIcon from '../theme/icons/undo.svg';\nimport redoIcon from '../theme/icons/redo.svg';\n/**\n * The undo UI feature. It introduces the `'undo'` and `'redo'` buttons to the editor.\n *\n * @extends module:core/plugin~Plugin\n */\n\nexport default class UndoUI extends Plugin {\n  /**\n   * @inheritDoc\n   */\n  static get pluginName() {\n    return 'UndoUI';\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  init() {\n    const editor = this.editor;\n    const locale = editor.locale;\n    const t = editor.t;\n    const localizedUndoIcon = locale.uiLanguageDirection == 'ltr' ? undoIcon : redoIcon;\n    const localizedRedoIcon = locale.uiLanguageDirection == 'ltr' ? redoIcon : undoIcon;\n\n    this._addButton('undo', t('Undo'), 'CTRL+Z', localizedUndoIcon);\n\n    this._addButton('redo', t('Redo'), 'CTRL+Y', localizedRedoIcon);\n  }\n  /**\n   * Creates a button for the specified command.\n   *\n   * @private\n   * @param {String} name Command name.\n   * @param {String} label Button label.\n   * @param {String} keystroke Command keystroke.\n   * @param {String} Icon Source of the icon.\n   */\n\n\n  _addButton(name, label, keystroke, Icon) {\n    const editor = this.editor;\n    editor.ui.componentFactory.add(name, locale => {\n      const command = editor.commands.get(name);\n      const view = new ButtonView(locale);\n      view.set({\n        label,\n        icon: Icon,\n        keystroke,\n        tooltip: true\n      });\n      view.bind('isEnabled').to(command, 'isEnabled');\n      this.listenTo(view, 'execute', () => {\n        editor.execute(name);\n        editor.editing.view.focus();\n      });\n      return view;\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/oyejin/Surfee/kiwi/node_modules/@ckeditor/ckeditor5-undo/src/undoui.js"],"names":["Plugin","ButtonView","undoIcon","redoIcon","UndoUI","pluginName","init","editor","locale","t","localizedUndoIcon","uiLanguageDirection","localizedRedoIcon","_addButton","name","label","keystroke","Icon","ui","componentFactory","add","command","commands","get","view","set","icon","tooltip","bind","to","listenTo","execute","editing","focus"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,OAAOA,MAAP,MAAmB,qCAAnB;AACA,OAAOC,UAAP,MAAuB,8CAAvB;AAEA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,MAAN,SAAqBJ,MAArB,CAA4B;AAC1C;AACD;AACA;AACsB,aAAVK,UAAU,GAAG;AACvB,WAAO,QAAP;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,IAAI,GAAG;AACN,UAAMC,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMC,MAAM,GAAGD,MAAM,CAACC,MAAtB;AACA,UAAMC,CAAC,GAAGF,MAAM,CAACE,CAAjB;AAEA,UAAMC,iBAAiB,GAAGF,MAAM,CAACG,mBAAP,IAA8B,KAA9B,GAAsCT,QAAtC,GAAiDC,QAA3E;AACA,UAAMS,iBAAiB,GAAGJ,MAAM,CAACG,mBAAP,IAA8B,KAA9B,GAAsCR,QAAtC,GAAiDD,QAA3E;;AAEA,SAAKW,UAAL,CAAiB,MAAjB,EAAyBJ,CAAC,CAAE,MAAF,CAA1B,EAAsC,QAAtC,EAAgDC,iBAAhD;;AACA,SAAKG,UAAL,CAAiB,MAAjB,EAAyBJ,CAAC,CAAE,MAAF,CAA1B,EAAsC,QAAtC,EAAgDG,iBAAhD;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACCC,EAAAA,UAAU,CAAEC,IAAF,EAAQC,KAAR,EAAeC,SAAf,EAA0BC,IAA1B,EAAiC;AAC1C,UAAMV,MAAM,GAAG,KAAKA,MAApB;AAEAA,IAAAA,MAAM,CAACW,EAAP,CAAUC,gBAAV,CAA2BC,GAA3B,CAAgCN,IAAhC,EAAsCN,MAAM,IAAI;AAC/C,YAAMa,OAAO,GAAGd,MAAM,CAACe,QAAP,CAAgBC,GAAhB,CAAqBT,IAArB,CAAhB;AACA,YAAMU,IAAI,GAAG,IAAIvB,UAAJ,CAAgBO,MAAhB,CAAb;AAEAgB,MAAAA,IAAI,CAACC,GAAL,CAAU;AACTV,QAAAA,KADS;AAETW,QAAAA,IAAI,EAAET,IAFG;AAGTD,QAAAA,SAHS;AAITW,QAAAA,OAAO,EAAE;AAJA,OAAV;AAOAH,MAAAA,IAAI,CAACI,IAAL,CAAW,WAAX,EAAyBC,EAAzB,CAA6BR,OAA7B,EAAsC,WAAtC;AAEA,WAAKS,QAAL,CAAeN,IAAf,EAAqB,SAArB,EAAgC,MAAM;AACrCjB,QAAAA,MAAM,CAACwB,OAAP,CAAgBjB,IAAhB;AACAP,QAAAA,MAAM,CAACyB,OAAP,CAAeR,IAAf,CAAoBS,KAApB;AACA,OAHD;AAKA,aAAOT,IAAP;AACA,KAnBD;AAoBA;;AAvDyC","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/undoui\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\n\nimport undoIcon from '../theme/icons/undo.svg';\nimport redoIcon from '../theme/icons/redo.svg';\n\n/**\n * The undo UI feature. It introduces the `'undo'` and `'redo'` buttons to the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class UndoUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'UndoUI';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst locale = editor.locale;\n\t\tconst t = editor.t;\n\n\t\tconst localizedUndoIcon = locale.uiLanguageDirection == 'ltr' ? undoIcon : redoIcon;\n\t\tconst localizedRedoIcon = locale.uiLanguageDirection == 'ltr' ? redoIcon : undoIcon;\n\n\t\tthis._addButton( 'undo', t( 'Undo' ), 'CTRL+Z', localizedUndoIcon );\n\t\tthis._addButton( 'redo', t( 'Redo' ), 'CTRL+Y', localizedRedoIcon );\n\t}\n\n\t/**\n\t * Creates a button for the specified command.\n\t *\n\t * @private\n\t * @param {String} name Command name.\n\t * @param {String} label Button label.\n\t * @param {String} keystroke Command keystroke.\n\t * @param {String} Icon Source of the icon.\n\t */\n\t_addButton( name, label, keystroke, Icon ) {\n\t\tconst editor = this.editor;\n\n\t\teditor.ui.componentFactory.add( name, locale => {\n\t\t\tconst command = editor.commands.get( name );\n\t\t\tconst view = new ButtonView( locale );\n\n\t\t\tview.set( {\n\t\t\t\tlabel,\n\t\t\t\ticon: Icon,\n\t\t\t\tkeystroke,\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tview.bind( 'isEnabled' ).to( command, 'isEnabled' );\n\n\t\t\tthis.listenTo( view, 'execute', () => {\n\t\t\t\teditor.execute( name );\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\treturn view;\n\t\t} );\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}