{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"prefixCls\", \"hsva\", \"placement\", \"rProps\", \"gProps\", \"bProps\", \"aProps\", \"className\", \"style\", \"onChange\"];\nimport React from 'react';\nimport EditableInput from '@uiw/react-color-editable-input';\nimport { color as handleColor, hsvaToRgba, rgbaToHsva } from '@uiw/color-convert';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar EditableInputRGBA = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n    prefixCls = 'w-color-editable-input-rgba',\n    hsva,\n    placement = 'bottom',\n    rProps = {},\n    gProps = {},\n    bProps = {},\n    aProps = {},\n    className,\n    style,\n    onChange\n  } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var rgba = hsva ? hsvaToRgba(hsva) : {};\n\n  function handleBlur(evn) {\n    var value = Number(evn.target.value);\n\n    if (value && value > 255) {\n      evn.target.value = '255';\n    }\n\n    if (value && value < 0) {\n      evn.target.value = '0';\n    }\n  }\n\n  var handleChange = (value, type, evn) => {\n    if (typeof value === 'number') {\n      if (type === 'a') {\n        if (value < 0) value = 0;\n        if (value > 100) value = 100;\n        onChange && onChange(handleColor(rgbaToHsva(_extends({}, rgba, {\n          a: value / 100\n        }))));\n      }\n\n      if (value > 255) {\n        value = 255;\n        evn.target.value = '255';\n      }\n\n      if (value < 0) {\n        value = 0;\n        evn.target.value = '0';\n      }\n\n      if (type === 'r') {\n        onChange && onChange(handleColor(rgbaToHsva(_extends({}, rgba, {\n          r: value\n        }))));\n      }\n\n      if (type === 'g') {\n        onChange && onChange(handleColor(rgbaToHsva(_extends({}, rgba, {\n          g: value\n        }))));\n      }\n\n      if (type === 'b') {\n        onChange && onChange(handleColor(rgbaToHsva(_extends({}, rgba, {\n          b: value\n        }))));\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref,\n    className: [prefixCls, className || ''].filter(Boolean).join(' ')\n  }, other, {\n    style: _extends({\n      fontSize: 11,\n      display: 'flex'\n    }, style),\n    children: [/*#__PURE__*/_jsx(EditableInput, _extends({\n      label: \"R\",\n      value: rgba.r || 0,\n      onBlur: handleBlur,\n      placement: placement,\n      onChange: (evn, val) => handleChange(val, 'r', evn)\n    }, rProps, {\n      style: _extends({}, rProps.style)\n    })), /*#__PURE__*/_jsx(EditableInput, _extends({\n      label: \"G\",\n      value: rgba.g || 0,\n      onBlur: handleBlur,\n      placement: placement,\n      onChange: (evn, val) => handleChange(val, 'g', evn)\n    }, gProps, {\n      style: _extends({\n        marginLeft: 5\n      }, rProps.style)\n    })), /*#__PURE__*/_jsx(EditableInput, _extends({\n      label: \"B\",\n      value: rgba.b || 0,\n      onBlur: handleBlur,\n      placement: placement,\n      onChange: (evn, val) => handleChange(val, 'b', evn)\n    }, bProps, {\n      style: _extends({\n        marginLeft: 5\n      }, bProps.style)\n    })), aProps && /*#__PURE__*/_jsx(EditableInput, _extends({\n      label: \"A\",\n      value: rgba.a ? parseInt(String(rgba.a * 100), 10) : 0,\n      onBlur: handleBlur,\n      placement: placement,\n      onChange: (evn, val) => handleChange(val, 'a', evn)\n    }, aProps, {\n      style: _extends({\n        marginLeft: 5\n      }, aProps.style)\n    }))]\n  }));\n});\nEditableInputRGBA.displayName = 'EditableInputRGBA';\nexport default EditableInputRGBA;","map":{"version":3,"sources":["../src/index.tsx"],"names":["color","EditableInputRGBA","prefixCls","placement","rProps","gProps","bProps","aProps","onChange","other","rgba","hsva","hsvaToRgba","value","Number","evn","handleChange","type","handleColor","rgbaToHsva","a","r","g","b","className","fontSize","display","marginLeft","parseInt","String"],"mappings":"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","sourcesContent":["import React from 'react';\nimport EditableInput, { EditableInputProps } from '@uiw/react-color-editable-input';\nimport { HsvaColor, color as handleColor, RgbaColor, ColorResult, hsvaToRgba, rgbaToHsva } from '@uiw/color-convert';\n\nexport interface EditableInputRGBAProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange'> {\n  prefixCls?: string;\n  hsva: HsvaColor;\n  placement?: 'top' | 'left' | 'bottom' | 'right';\n  rProps?: EditableInputProps;\n  gProps?: EditableInputProps;\n  bProps?: EditableInputProps;\n  aProps?: false | EditableInputProps;\n  onChange?: (color: ColorResult) => void;\n}\n\nconst EditableInputRGBA = React.forwardRef<HTMLDivElement, EditableInputRGBAProps>((props, ref) => {\n  const {\n    prefixCls = 'w-color-editable-input-rgba',\n    hsva,\n    placement = 'bottom',\n    rProps = {},\n    gProps = {},\n    bProps = {},\n    aProps = {},\n    className,\n    style,\n    onChange,\n    ...other\n  } = props;\n  const rgba = (hsva ? hsvaToRgba(hsva) : {}) as RgbaColor;\n  function handleBlur(evn: React.FocusEvent<HTMLInputElement>) {\n    const value = Number(evn.target.value);\n    if (value && value > 255) {\n      evn.target.value = '255';\n    }\n    if (value && value < 0) {\n      evn.target.value = '0';\n    }\n  }\n  const handleChange = (value: string | number, type: 'r' | 'g' | 'b' | 'a', evn: React.ChangeEvent<HTMLInputElement>) => {\n    if (typeof value === 'number') {\n      if (type === 'a') {\n        if (value < 0) value = 0;\n        if (value > 100) value = 100;\n        onChange && onChange(handleColor(rgbaToHsva({ ...rgba, a: value / 100 })));\n      }\n      if (value > 255) {\n        value = 255;\n        evn.target.value = '255';\n      }\n      if (value < 0) {\n        value = 0;\n        evn.target.value = '0';\n      }\n      if (type === 'r') {\n        onChange && onChange(handleColor(rgbaToHsva({ ...rgba, r: value })));\n      }\n      if (type === 'g') {\n        onChange && onChange(handleColor(rgbaToHsva({ ...rgba, g: value })));\n      }\n      if (type === 'b') {\n        onChange && onChange(handleColor(rgbaToHsva({ ...rgba, b: value })));\n      }\n    }\n  };\n  return (\n    <div\n      ref={ref}\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      {...other}\n      style={{\n        fontSize: 11,\n        display: 'flex',\n        ...style,\n      }}\n    >\n      <EditableInput\n        label=\"R\"\n        value={rgba.r || 0}\n        onBlur={handleBlur}\n        placement={placement}\n        onChange={(evn, val) => handleChange(val, 'r', evn)}\n        {...rProps}\n        style={{ ...rProps.style }}\n      />\n      <EditableInput\n        label=\"G\"\n        value={rgba.g || 0}\n        onBlur={handleBlur}\n        placement={placement}\n        onChange={(evn, val) => handleChange(val, 'g', evn)}\n        {...gProps}\n        style={{ marginLeft: 5, ...rProps.style }}\n      />\n      <EditableInput\n        label=\"B\"\n        value={rgba.b || 0}\n        onBlur={handleBlur}\n        placement={placement}\n        onChange={(evn, val) => handleChange(val, 'b', evn)}\n        {...bProps}\n        style={{ marginLeft: 5, ...bProps.style }}\n      />\n      {aProps && (\n        <EditableInput\n          label=\"A\"\n          value={rgba.a ? parseInt(String(rgba.a * 100), 10) : 0}\n          onBlur={handleBlur}\n          placement={placement}\n          onChange={(evn, val) => handleChange(val, 'a', evn)}\n          {...aProps}\n          style={{ marginLeft: 5, ...aProps.style }}\n        />\n      )}\n    </div>\n  );\n});\n\nEditableInputRGBA.displayName = 'EditableInputRGBA';\n\nexport default EditableInputRGBA;\n"]},"metadata":{},"sourceType":"module"}