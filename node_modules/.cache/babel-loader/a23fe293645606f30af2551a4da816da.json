{"ast":null,"code":"var _jsxFileName = \"/Users/oyejin/Surfee/kiwi/src/pages/Make/NavBarInMakePage/NavBarInMakePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { Input, Button } from 'antd';\nimport Switch from '@mui/material/Switch';\nimport './MakeNavBar.css';\nimport { MyContext } from '../MakePageV2';\nimport CheckModal from '../../../components/Make/Modal/CheckModal';\nimport { dbService } from '../../../tools/fbase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavBarInMakePage = props => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const {\n    state,\n    action\n  } = useContext(MyContext);\n  const [checkModalOpen, setCheckModalOpen] = useState(false);\n\n  const moveToMain = () => {\n    window.location.replace('/');\n  };\n\n  const onSubmit = async () => {\n    console.log(props.userObj); // 배포하기 클릭\n    // 관리페이지에서 수정하기를 누른 거라면\n\n    if (typeof props.useObj === undefined) {\n      alert(\"로그인 하셔야 저장 후 배포하실 수 있습니다.\");\n      props.setLoading(false);\n    } else if (props.nowState === 'edit') {\n      props.setLoading(true); // 기존에 있는걸 업데이트 해야한다.\n\n      const body = {\n        contents: state.contents,\n        navi: props.navi,\n        foot: props.foot,\n        setting: props.setting,\n        created: Date.now(),\n        makerEmail: props.userObj.email\n      };\n      await dbService.doc(`made-page/${state.contents.id}`).update(body);\n      alert(\"업데이트된 정보로 배포하였습니다.\");\n      props.setLoading(false);\n    } else {\n      // 새로 업로드 해야한다.\n      setCheckModalOpen(true);\n    }\n  };\n\n  const onSubmitFromCheckModal = async () => {\n    props.setLoading(true);\n    const urlDatas = await dbService.collection(\"urlStores\").where(\"urlId\", \"==\", props.setting.urlId).get(); // uid를 creatorId로 줬었으니까.\n\n    let urlData = urlDatas.docs.map(doc => {\n      return { ...doc.data(),\n        id: doc.id\n      };\n    });\n\n    if (urlData.length > 0) {\n      alert(\"이미 존재하는 url입니다. 다른 url을 사용해주세요.\");\n      props.setLoading(false);\n    } else {\n      const body = {\n        contents: state.contents,\n        navi: props.navi,\n        foot: props.foot,\n        setting: props.setting,\n        created: Date.now(),\n        makerEmail: props.userObj.email\n      };\n      await dbService.collection(\"made-page\").add(body);\n      await dbService.collection(\"urlStores\").add({\n        urlId: body.setting.urlId\n      }); // 자동저장 하던 걸 지운다.\n\n      window.localStorage.removeItem(\"temp\");\n      setTimeout(() => {\n        props.setLoading(false);\n        props.history.push('/#/submit');\n        props.history.go();\n      }, 1000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"make-page-nav\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"make-page-nav-half\",\n      style: {\n        justifyContent: 'start',\n        marginLeft: '1%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: e => {\n          action.setSecNum(52);\n          action.setAddingSectionAt(1000);\n        },\n        children: \"\\uAE30\\uBCF8\\uC124\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: e => {\n          action.setSecNum(state.CONTENTSSECNUM);\n        },\n        children: \"\\uCEE8\\uD150\\uCE20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginLeft: '5%',\n          width: '50%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uC804\\uCCB4\\uD654\\uBA74\\uBCF4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          value: props.full,\n          onChange: e => props.setFull(!props.full),\n          style: {\n            marginLeft: '3%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uBAA8\\uBC14\\uC77C \\uC804\\uD658\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          value: props.isPhone,\n          onChange: e => props.setIsPhone(!props.isPhone),\n          style: {\n            marginLeft: '3%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"make-page-nav-half\",\n      style: {\n        justifyContent: 'end',\n        marginRight: '1%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => moveToMain(),\n        children: \"Surfee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          width: '120px',\n          backgroundColor: '#6a63f75b'\n        },\n        onClick: () => onSubmit(),\n        className: \"make-nav-left-text\",\n        children: \"\\uC800\\uC7A5 \\uD6C4 \\uBC30\\uD3EC\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CheckModal, {\n      ch: checkModalOpen,\n      setCh: setCheckModalOpen,\n      onSubmit2: onSubmitFromCheckModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NavBarInMakePage, \"glA809du2F5CiSa4q9OQNjk3uiI=\");\n\n_c = NavBarInMakePage;\nexport default NavBarInMakePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBarInMakePage\");","map":{"version":3,"sources":["/Users/oyejin/Surfee/kiwi/src/pages/Make/NavBarInMakePage/NavBarInMakePage.js"],"names":["React","useContext","useState","Input","Button","Switch","MyContext","CheckModal","dbService","NavBarInMakePage","props","open","setOpen","state","action","checkModalOpen","setCheckModalOpen","moveToMain","window","location","replace","onSubmit","console","log","userObj","useObj","undefined","alert","setLoading","nowState","body","contents","navi","foot","setting","created","Date","now","makerEmail","email","doc","id","update","onSubmitFromCheckModal","urlDatas","collection","where","urlId","get","urlData","docs","map","data","length","add","localStorage","removeItem","setTimeout","history","push","go","justifyContent","marginLeft","e","setSecNum","setAddingSectionAt","CONTENTSSECNUM","width","full","setFull","isPhone","setIsPhone","marginRight","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from 'react';\nimport { Input, Button } from 'antd';\nimport Switch from '@mui/material/Switch';\nimport './MakeNavBar.css';\nimport { MyContext } from '../MakePageV2'\nimport CheckModal from '../../../components/Make/Modal/CheckModal'\nimport {dbService} from '../../../tools/fbase'\n\nconst NavBarInMakePage = (props) => {\n    const [open, setOpen] = useState(false)\n    const {state, action} = useContext(MyContext)\n    const [checkModalOpen, setCheckModalOpen] = useState(false);\n    const moveToMain = () => {\n        \n        window.location.replace('/');\n    }\n    \n    const onSubmit = async () => {\n        console.log(props.userObj);\n        // 배포하기 클릭\n        // 관리페이지에서 수정하기를 누른 거라면\n        if(typeof props.useObj === undefined){\n            alert(\"로그인 하셔야 저장 후 배포하실 수 있습니다.\");\n            props.setLoading(false);\n        }else if(props.nowState === 'edit'){\n            props.setLoading(true);\n            // 기존에 있는걸 업데이트 해야한다.\n            const body = {\n                contents:state.contents,\n                navi:props.navi,\n                foot:props.foot,\n                setting:props.setting,\n                created:Date.now(),\n                makerEmail:props.userObj.email,\n            }\n            await dbService.doc(`made-page/${state.contents.id}`)\n                .update(body)\n            \n            alert(\"업데이트된 정보로 배포하였습니다.\");\n            \n            props.setLoading(false);\n        }else{\n            // 새로 업로드 해야한다.\n            setCheckModalOpen(true);\n        }\n    }\n\n    const onSubmitFromCheckModal = async () => {\n        props.setLoading(true);\n\n        const urlDatas = await dbService\n            .collection(\"urlStores\")\n            .where(\"urlId\", \"==\", props.setting.urlId)\n            .get(); // uid를 creatorId로 줬었으니까.\n        \n        let urlData = urlDatas.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n\n        if(urlData.length > 0){\n            alert(\"이미 존재하는 url입니다. 다른 url을 사용해주세요.\");\n            props.setLoading(false);\n        }else{\n            const body = {\n                contents:state.contents,\n                navi:props.navi,\n                foot:props.foot,\n                setting:props.setting,\n                created:Date.now(),\n                makerEmail:props.userObj.email,\n            }\n\n            await dbService.collection(\"made-page\").add(body);\n\n            await dbService.collection(\"urlStores\").add({urlId:body.setting.urlId});\n\n            // 자동저장 하던 걸 지운다.\n            window.localStorage.removeItem(\"temp\");\n            \n            setTimeout(() => {\n                props.setLoading(false);\n                props.history.push('/#/submit');\n                props.history.go();\n            },1000)\n        }\n    }\n\n    return (\n        <div className=\"make-page-nav\">\n            <div className=\"make-page-nav-half\" style={{justifyContent: 'start', marginLeft:'1%'}}>\n                {/* <Button onClick={e => props.setOpen(!props.open)}>설명 다시보기</Button> */}\n                <Button onClick={e => {\n                    action.setSecNum(52); \n                    action.setAddingSectionAt(1000);\n                    }}>\n                    기본설정\n                </Button>\n                <Button onClick={e => {\n                    action.setSecNum(state.CONTENTSSECNUM);\n                    }}>\n                    컨텐츠\n                </Button>\n                <span style={{marginLeft:'5%', width:'50%'}}>\n                    <span>전체화면보기</span>\n                    <Switch value={props.full} onChange={e => props.setFull(!props.full)}  style={{marginLeft:'3%'}}/>\n                    <span>모바일 전환</span>\n                    <Switch value={props.isPhone} onChange={e => props.setIsPhone(!props.isPhone)}  style={{marginLeft:'3%'}}/>\n                </span>\n            </div>\n            <div className=\"make-page-nav-half\" style={{justifyContent: 'end', marginRight:'1%'}}>\n                <Button onClick={() => moveToMain()}>\n                    Surfee\n                </Button>\n                <Button style={{width:'120px', backgroundColor:'#6a63f75b'}} onClick={() => onSubmit()} className=\"make-nav-left-text\">\n                    저장 후 배포하기\n                </Button>\n            </div>\n            {/* <ConfirmCustom open={open} setOpen={setOpen} message={\"홈\"} callback={deletePage}/> */}\n            <CheckModal ch={checkModalOpen} setCh={setCheckModalOpen} onSubmit2={onSubmitFromCheckModal}/>\n        </div>\n    )\n}\n\nexport default NavBarInMakePage\n"]},"metadata":{},"sourceType":"module"}