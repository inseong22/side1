{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"style\", \"color\"],\n    _excluded2 = [\"prefixCls\", \"className\", \"onChange\", \"color\", \"style\"];\nimport React from 'react';\nimport { validHex, color as handleColor, hexToHsva, hsvaToHex, hsvaToRgbaString } from '@uiw/color-convert';\nimport Alpha, { BACKGROUND_IMG } from '@uiw/react-color-alpha';\nimport Saturation from '@uiw/react-color-saturation';\nimport Hue from '@uiw/react-color-hue';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Pointer = _ref => {\n  var {\n    style,\n    color\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/_jsx(\"div\", _extends({}, props, {\n    style: _extends({\n      height: 28,\n      width: 28,\n      position: 'absolute',\n      transform: 'translate(-14px, -4px)',\n      boxShadow: '0 2px 4px rgb(0 0 0 / 20%)',\n      borderRadius: '50%',\n      background: \"url(\" + BACKGROUND_IMG + \")\",\n      backgroundColor: '#fff',\n      border: '2px solid #fff',\n      zIndex: 1\n    }, style),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: {\n        backgroundColor: color,\n        borderRadius: '50%',\n        height: ' 100%',\n        width: '100%'\n      }\n    })\n  }));\n};\n\nvar Colorful = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n    prefixCls = 'w-color-colorful',\n    className,\n    onChange,\n    color,\n    style\n  } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  var hsva = typeof color === 'string' && validHex(color) ? hexToHsva(color) : color || {};\n\n  var handleChange = value => onChange && onChange(handleColor(value));\n\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref,\n    style: _extends({\n      width: 200,\n      position: 'relative'\n    }, style)\n  }, other, {\n    className: prefixCls + \" \" + (className || ''),\n    children: [/*#__PURE__*/_jsx(Saturation, {\n      hsva: hsva,\n      className: prefixCls,\n      radius: \"8px 8px 0 0\",\n      style: {\n        width: 'auto',\n        height: 150,\n        minWidth: 120,\n        borderBottom: '12px solid #000'\n      },\n      pointer: _ref2 => {\n        var {\n          left,\n          top,\n          color\n        } = _ref2;\n        return /*#__PURE__*/_jsx(Pointer, {\n          style: {\n            left,\n            top,\n            transform: 'translate(-16px, -16px)'\n          },\n          color: hsvaToHex(hsva)\n        });\n      },\n      onChange: newColor => handleChange(_extends({}, hsva, newColor))\n    }), /*#__PURE__*/_jsx(Hue, {\n      hue: hsva.h,\n      height: 24,\n      className: prefixCls,\n      onChange: newHue => handleChange(_extends({}, hsva, newHue)),\n      pointer: _ref3 => {\n        var {\n          left\n        } = _ref3;\n        return /*#__PURE__*/_jsx(Pointer, {\n          style: {\n            left\n          },\n          color: \"hsl(\" + (hsva.h || 0) + \"deg 100% 50%)\"\n        });\n      }\n    }), /*#__PURE__*/_jsx(Alpha, {\n      hsva: hsva,\n      height: 24,\n      className: prefixCls,\n      radius: \"0 0 8px 8px\",\n      pointer: _ref4 => {\n        var {\n          left\n        } = _ref4;\n        return /*#__PURE__*/_jsx(Pointer, {\n          style: {\n            left\n          },\n          color: hsvaToRgbaString(hsva)\n        });\n      },\n      onChange: newAlpha => handleChange(_extends({}, hsva, newAlpha))\n    })]\n  }));\n});\nColorful.displayName = 'Colorful';\nexport default Colorful;","map":{"version":3,"sources":["../src/index.tsx"],"names":["color","Pointer","props","height","width","position","transform","boxShadow","borderRadius","background","backgroundColor","border","zIndex","Colorful","prefixCls","style","other","hsva","validHex","hexToHsva","handleChange","value","onChange","handleColor","className","minWidth","borderBottom","hsvaToHex","newColor","newHue","left","hsvaToRgbaString","newAlpha"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  validHex,\n  color as handleColor,\n  hexToHsva,\n  HsvaColor,\n  ColorResult,\n  hsvaToHex,\n  hsvaToRgbaString,\n} from '@uiw/color-convert';\nimport Alpha, { BACKGROUND_IMG } from '@uiw/react-color-alpha';\nimport Saturation from '@uiw/react-color-saturation';\nimport Hue from '@uiw/react-color-hue';\n\nexport interface ColorfulProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange' | 'color'> {\n  prefixCls?: string;\n  onChange?: (color: ColorResult) => void;\n  color?: string | HsvaColor;\n}\n\nconst Pointer = ({ style, color, ...props }: React.HTMLAttributes<HTMLDivElement> & { color: string }) => (\n  <div\n    {...props}\n    style={{\n      height: 28,\n      width: 28,\n      position: 'absolute',\n      transform: 'translate(-14px, -4px)',\n      boxShadow: '0 2px 4px rgb(0 0 0 / 20%)',\n      borderRadius: '50%',\n      background: `url(${BACKGROUND_IMG})`,\n      backgroundColor: '#fff',\n      border: '2px solid #fff',\n      zIndex: 1,\n      ...style,\n    }}\n  >\n    <div\n      style={{\n        backgroundColor: color,\n        borderRadius: '50%',\n        height: ' 100%',\n        width: '100%',\n      }}\n    />\n  </div>\n);\n\nconst Colorful = React.forwardRef<HTMLDivElement, ColorfulProps>((props, ref) => {\n  const { prefixCls = 'w-color-colorful', className, onChange, color, style, ...other } = props;\n  const hsva = (typeof color === 'string' && validHex(color) ? hexToHsva(color) : color || {}) as HsvaColor;\n  const handleChange = (value: HsvaColor) => onChange && onChange(handleColor(value));\n  return (\n    <div\n      ref={ref}\n      style={{\n        width: 200,\n        position: 'relative',\n        ...style,\n      }}\n      {...other}\n      className={`${prefixCls} ${className || ''}`}\n    >\n      <Saturation\n        hsva={hsva}\n        className={prefixCls}\n        radius=\"8px 8px 0 0\"\n        style={{ width: 'auto', height: 150, minWidth: 120, borderBottom: '12px solid #000' }}\n        pointer={({ left, top, color }) => (\n          <Pointer style={{ left, top, transform: 'translate(-16px, -16px)' }} color={hsvaToHex(hsva)} />\n        )}\n        onChange={(newColor) => handleChange({ ...hsva, ...newColor })}\n      />\n      <Hue\n        hue={hsva.h}\n        height={24}\n        className={prefixCls}\n        onChange={(newHue) => handleChange({ ...hsva, ...newHue })}\n        pointer={({ left }) => <Pointer style={{ left }} color={`hsl(${hsva.h || 0}deg 100% 50%)`} />}\n      />\n      <Alpha\n        hsva={hsva}\n        height={24}\n        className={prefixCls}\n        radius=\"0 0 8px 8px\"\n        pointer={({ left }) => <Pointer style={{ left }} color={hsvaToRgbaString(hsva)} />}\n        onChange={(newAlpha) => handleChange({ ...hsva, ...newAlpha })}\n      />\n    </div>\n  );\n});\n\nColorful.displayName = 'Colorful';\n\nexport default Colorful;\n"]},"metadata":{},"sourceType":"module"}