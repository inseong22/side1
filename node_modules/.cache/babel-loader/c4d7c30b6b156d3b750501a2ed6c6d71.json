{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { dbService } from '../../tools/fbase';\n// import Section from '../../components/Make/utils/old/Section/Section'\n// // import LastSection from '../../components/Make/utils/old/Section/LastSection'\n// // import MakeFooter from '../../components/Make/utils/old/NavBar/MakeFooter'\n// import ReactGa from 'react-ga'\n// const LANDINGID = \"REDE\";\n// const USEREMAIL = \"직접 입력하기\"\n// const smallfont = `28px`;\n// const bigfont = '50px';\n// const MadePage = (props) => {\n//     const [ item, setItem ] = useState();\n//     const [ loading, setLoading ] = useState(false);\n//     const favicon = document.getElementById(\"favicon\");\n//     const urltitle = document.getElementById(\"urltitle\");\n//     const loadData = async () => {\n//         const userOrder = await dbService\n//             .collection(\"apply-landing-data\")\n//             .where(\"urlId\", \"==\", window.location.host.split(\".\")[0])\n//             .get(); // uid를 creatorId로 줬었으니까.\n//         let orderData = userOrder.docs.map(doc => {\n//             return({...doc.data(), id:doc.id})\n//         });\n//         favicon.href = orderData[0].faviconAttachment;   \n//         urltitle.innerText = orderData[0].urlTitle;\n//         setItem( orderData[0] );\n//         setLoading(true);\n//     }\n//     useEffect(() => {\n//         console.log(window.location.host.split(\".\")[0])\n//         loadData()\n//         ReactGa.initialize('UA-213792742-1');\n//         // to report page view\n//         ReactGa.pageview(`/${window.location.host.split(\".\")[0]}`);\n//     }, [loading])\n//     return (\n//         <>\n//         {loading ? <>\n//             <div className=\"scroll-container\" style={{ width:`100%`, height:`100vh`, marginTop:'-60px', border:'none'}}>\n//                 <div className=\"make-main-page-container\" style={{fontSize:`${bigfont}`, backgroundColor:`${item.s1backgroundColor}`}}>  \n//                     <div className=\"make-navigation\" style={{width:`100%`, backgroundColor:`${item.naviColor}`}}>\n//                         <span className=\"make-nav-bar-title\" onClick={() => {props.history.push(`/${item.urlId}`); props.history.go();}} style={{fontFamily:`${item.font}`, cursor:'pointer', color:`${item.naviTitleColor}`}}>\n//                             {item.naviTitle}\n//                         </span>\n//                         <span className=\"make-nav-on\">\n//                             <button className=\"make-nav-button\" style={{color:`${item.naviButtonColor}`,fontFamily:`${item.descFont}`, cursor:'pointer'}} onClick={() => window.scrollTo(0,document.body.scrollHeight)}>{item.naviButtonTitle}</button>\n//                         </span>\n//                     </div>\n//                     { item.secNums.length > 1 && \n//                         <Section device={item.device}\n//                             sectionNumber={1}\n//                             title={item.s1title} desc={item.s1desc} attachment={item.attachment1} full={true} bigfont={item.bigfont} smallfont={item.smallfont}\n//                             templateNum={item.s1template} font={item.font} backgroundColor={item.s1backgroundColor}\n//                             titleColor={item.s1titleColor} titleSize={item.s1titleSize} descColor={item.s1descColor} descSize={item.s1descSize}\n//                             applyButtonUse={item.s1applyButtonUse} applyButtonText={item.s1applyButton} applyButtonColor={item.s1applyButtonColor}\n//                             targets={item.targets} sectionHeight={item.sectionHeight1} rate={1}\n//                             descFont={item.descFont} imageWidth={item.imageWidth1} backgroundImage={item.backgroundImage1}\n//                         />\n//                     }\n//                     { item.secNums.length > 2 && \n//                         <Section device={item.device}\n//                             sectionNumber={2}\n//                             title={item.s2title} desc={item.s2desc} attachment={item.attachment2} full={true} bigfont={item.bigfont} smallfont={item.smallfont}\n//                             templateNum={item.s2template} font={item.font} backgroundColor={item.s2backgroundColor}\n//                             titleColor={item.s2titleColor} titleSize={item.s2titleSize} descColor={item.s2descColor} descSize={item.s2descSize}\n//                             applyButtonUse={item.s2applyButtonUse} applyButtonText={item.s2applyButton} applyButtonColor={item.s2applyButtonColor}\n//                             targets={item.targets} sectionHeight={item.sectionHeight2} rate={1}\n//                             descFont={item.descFont} imageWidth={item.imageWidth2} backgroundImage={item.backgroundImage2}\n//                         />\n//                     }\n//                     { item.secNums.length > 3 && \n//                         <Section device={item.device}\n//                             sectionNumber={3}\n//                             title={item.s3title} desc={item.s3desc} attachment={item.attachment3} full={true} bigfont={item.bigfont} smallfont={item.smallfont}\n//                             templateNum={item.s3template} font={item.font} backgroundColor={item.s3backgroundColor}\n//                             titleColor={item.s3titleColor} titleSize={item.s3titleSize} descColor={item.s3descColor} descSize={item.s3descSize}\n//                             applyButtonUse={item.s3applyButtonUse} applyButtonText={item.s3applyButton} applyButtonColor={item.s3applyButtonColor}\n//                             targets={item.targets} sectionHeight={item.sectionHeight3} rate={1}\n//                             descFont={item.descFont} imageWidth={item.imageWidth3} backgroundImage={item.backgroundImage3}\n//                         />\n//                     }\n//                     { item.secNums.length > 4 && \n//                         <Section device={item.device}\n//                             sectionNumber={4}\n//                             title={item.s4title} desc={item.s4desc} attachment={item.attachment4} full={true} bigfont={item.bigfont} smallfont={item.smallfont}\n//                             templateNum={item.s4template} font={item.font} backgroundColor={item.s4backgroundColor}\n//                             titleColor={item.s4titleColor} titleSize={item.s4titleSize} descColor={item.s4descColor} descSize={item.s4descSize}\n//                             applyButtonUse={item.s4applyButtonUse} applyButtonText={item.s4applyButton} applyButtonColor={item.s4applyButtonColor}\n//                             targets={item.targets} sectionHeight={item.sectionHeight4} rate={1}\n//                             descFont={item.descFont} imageWidth={item.imageWidth4} backgroundImage={item.backgroundImage4}\n//                         />\n//                     }\n//                     { item.useLastSection !== 0 && \n//                         <LastSection \n//                             urlId={item.urlId}\n//                             targets={item.targets} lasttitleColor={item.lasttitleColor} full={true} rate={item.rate}\n//                             title={item.lasttitle} desc={item.lastdesc} sectionHeight={item.lastSectionHeight}\n//                             font={item.font} backgroundColor={item.lastbackgroundColor} descSize={item.lastDescSize}\n//                             titleColor={item.lasttitleColor} titleSize={item.lasttitleSize} descFont={item.descFont}\n//                             applyButtonText={item.lastapplyButton} answers={item.answers} lastdescColor={item.lastdescColor}\n//                             bigfont={bigfont} smallfont={smallfont} inf={item.inf}\n//                         />\n//                     }\n//                     {item.footerOrNot ?  <></> : \n//                     <MakeFooter \n//                         userPhoneNumber={item.userPhoneNumber}\n//                         userEmail={item.userEmail}\n//                         naviTitle={item.naviTitle}\n//                         footerColor={item.footerColor}\n//                         full={true} bigfont={bigfont} smallfont={smallfont}\n//                         rate={item.rate}\n//                     />\n//                     } \n//                 </div> \n//                 </div>\n//         </> : <></>}\n//         </>\n//     )\n// }\n// export default MadePage","map":{"version":3,"sources":["/Users/oyejin/Surfee/kiwi/src/pages/UserLanding/UserLandingPage.js"],"names":[],"mappingssourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { dbService } from '../../tools/fbase';\n// import Section from '../../components/Make/utils/old/Section/Section'\n// // import LastSection from '../../components/Make/utils/old/Section/LastSection'\n// // import MakeFooter from '../../components/Make/utils/old/NavBar/MakeFooter'\n// import ReactGa from 'react-ga'\n\n// const LANDINGID = \"REDE\";\n\n// const USEREMAIL = \"직접 입력하기\"\n\n// const smallfont = `28px`;\n// const bigfont = '50px';\n\n// const MadePage = (props) => {\n//     const [ item, setItem ] = useState();\n//     const [ loading, setLoading ] = useState(false);\n\n//     const favicon = document.getElementById(\"favicon\");\n\n//     const urltitle = document.getElementById(\"urltitle\");\n\n//     const loadData = async () => {\n//         const userOrder = await dbService\n//             .collection(\"apply-landing-data\")\n//             .where(\"urlId\", \"==\", window.location.host.split(\".\")[0])\n//             .get(); // uid를 creatorId로 줬었으니까.\n\n//         let orderData = userOrder.docs.map(doc => {\n//             return({...doc.data(), id:doc.id})\n//         });\n//         favicon.href = orderData[0].faviconAttachment;   \n//         urltitle.innerText = orderData[0].urlTitle;\n//         setItem( orderData[0] );\n//         setLoading(true);\n//     }\n\n//     useEffect(() => {\n//         console.log(window.location.host.split(\".\")[0])\n//         loadData()\n//         ReactGa.initialize('UA-213792742-1');\n//         // to report page view\n//         ReactGa.pageview(`/${window.location.host.split(\".\")[0]}`);\n//     }, [loading])\n\n//     return (\n//         <>\n//         {loading ? <>\n//             <div className=\"scroll-container\" style={{ width:`100%`, height:`100vh`, marginTop:'-60px', border:'none'}}>\n//                 <div className=\"make-main-page-container\" style={{fontSize:`${bigfont}`, backgroundColor:`${item.s1backgroundColor}`}}>  \n//                     <div className=\"make-navigation\" style={{width:`100%`, backgroundColor:`${item.naviColor}`}}>\n//                         <span className=\"make-nav-bar-title\" onClick={() => {props.history.push(`/${item.urlId}`); props.history.go();}} style={{fontFamily:`${item.font}`, cursor:'pointer', color:`${item.naviTitleColor}`}}>\n//                             {item.naviTitle}\n//                         </span>\n//                         <span className=\"make-nav-on\">\n//                             <button className=\"make-nav-button\" style={{color:`${item.naviButtonColor}`,fontFamily:`${item.descFont}`, cursor:'pointer'}} onClick={() => window.scrollTo(0,document.body.scrollHeight)}>{item.naviButtonTitle}</button>\n//                         </span>\n//                     </div>\n//                     { item.secNums.length > 1 && \n//                         <Section device={item.device}\n//                             sectionNumber={1}\n//                             title={item.s1title} desc={item.s1desc} attachment={item.attachment1} full={true} bigfont={item.bigfont} smallfont={item.smallfont}\n//                             templateNum={item.s1template} font={item.font} backgroundColor={item.s1backgroundColor}\n//                             titleColor={item.s1titleColor} titleSize={item.s1titleSize} descColor={item.s1descColor} descSize={item.s1descSize}\n//                             applyButtonUse={item.s1applyButtonUse} applyButtonText={item.s1applyButton} applyButtonColor={item.s1applyButtonColor}\n//                             targets={item.targets} sectionHeight={item.sectionHeight1} rate={1}\n//                             descFont={item.descFont} imageWidth={item.imageWidth1} backgroundImage={item.backgroundImage1}\n//                         />\n//                     }\n//                     { item.secNums.length > 2 && \n//                         <Section device={item.device}\n//                             sectionNumber={2}\n//                             title={item.s2title} desc={item.s2desc} attachment={item.attachment2} full={true} bigfont={item.bigfont} smallfont={item.smallfont}\n//                             templateNum={item.s2template} font={item.font} backgroundColor={item.s2backgroundColor}\n//                             titleColor={item.s2titleColor} titleSize={item.s2titleSize} descColor={item.s2descColor} descSize={item.s2descSize}\n//                             applyButtonUse={item.s2applyButtonUse} applyButtonText={item.s2applyButton} applyButtonColor={item.s2applyButtonColor}\n//                             targets={item.targets} sectionHeight={item.sectionHeight2} rate={1}\n//                             descFont={item.descFont} imageWidth={item.imageWidth2} backgroundImage={item.backgroundImage2}\n//                         />\n//                     }\n//                     { item.secNums.length > 3 && \n//                         <Section device={item.device}\n//                             sectionNumber={3}\n//                             title={item.s3title} desc={item.s3desc} attachment={item.attachment3} full={true} bigfont={item.bigfont} smallfont={item.smallfont}\n//                             templateNum={item.s3template} font={item.font} backgroundColor={item.s3backgroundColor}\n//                             titleColor={item.s3titleColor} titleSize={item.s3titleSize} descColor={item.s3descColor} descSize={item.s3descSize}\n//                             applyButtonUse={item.s3applyButtonUse} applyButtonText={item.s3applyButton} applyButtonColor={item.s3applyButtonColor}\n//                             targets={item.targets} sectionHeight={item.sectionHeight3} rate={1}\n//                             descFont={item.descFont} imageWidth={item.imageWidth3} backgroundImage={item.backgroundImage3}\n//                         />\n//                     }\n//                     { item.secNums.length > 4 && \n//                         <Section device={item.device}\n//                             sectionNumber={4}\n//                             title={item.s4title} desc={item.s4desc} attachment={item.attachment4} full={true} bigfont={item.bigfont} smallfont={item.smallfont}\n//                             templateNum={item.s4template} font={item.font} backgroundColor={item.s4backgroundColor}\n//                             titleColor={item.s4titleColor} titleSize={item.s4titleSize} descColor={item.s4descColor} descSize={item.s4descSize}\n//                             applyButtonUse={item.s4applyButtonUse} applyButtonText={item.s4applyButton} applyButtonColor={item.s4applyButtonColor}\n//                             targets={item.targets} sectionHeight={item.sectionHeight4} rate={1}\n//                             descFont={item.descFont} imageWidth={item.imageWidth4} backgroundImage={item.backgroundImage4}\n//                         />\n//                     }\n\n//                     { item.useLastSection !== 0 && \n//                         <LastSection \n//                             urlId={item.urlId}\n//                             targets={item.targets} lasttitleColor={item.lasttitleColor} full={true} rate={item.rate}\n//                             title={item.lasttitle} desc={item.lastdesc} sectionHeight={item.lastSectionHeight}\n//                             font={item.font} backgroundColor={item.lastbackgroundColor} descSize={item.lastDescSize}\n//                             titleColor={item.lasttitleColor} titleSize={item.lasttitleSize} descFont={item.descFont}\n//                             applyButtonText={item.lastapplyButton} answers={item.answers} lastdescColor={item.lastdescColor}\n//                             bigfont={bigfont} smallfont={smallfont} inf={item.inf}\n//                         />\n//                     }\n//                     {item.footerOrNot ?  <></> : \n//                     <MakeFooter \n//                         userPhoneNumber={item.userPhoneNumber}\n//                         userEmail={item.userEmail}\n//                         naviTitle={item.naviTitle}\n//                         footerColor={item.footerColor}\n//                         full={true} bigfont={bigfont} smallfont={smallfont}\n//                         rate={item.rate}\n//                     />\n//                     } \n//                 </div> \n//                 </div>\n//         </> : <></>}\n//         </>\n//     )\n    \n// }\n\n// export default MadePage\n"]},"metadata":{},"sourceType":"module"}