{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"prefixCls\", \"className\", \"style\", \"color\", \"onChange\"];\nimport React from 'react';\nimport { color as handleColor, validHex, hexToHsva, hsvaToHex } from '@uiw/color-convert';\nimport EditableInput from '@uiw/react-color-editable-input';\nimport RGBA from '@uiw/react-color-editable-input-rgba';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styleRBG = {\n  boxShadow: 'initial',\n  borderWidth: '0 0 1px 0',\n  borderBottomColor: '#eee',\n  borderBottomStyle: 'solid',\n  height: 30,\n  outline: 0,\n  fontSize: 15,\n  padding: 0\n};\nvar Material = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n    prefixCls = 'w-color-material',\n    className,\n    style,\n    color,\n    onChange\n  } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var hsva = typeof color === 'string' && validHex(color) ? hexToHsva(color) : color;\n  var hex = color ? hsvaToHex(hsva).replace(/^#/, '') : '';\n\n  var handleChange = hsv => {\n    onChange && onChange(handleColor(hsv));\n  };\n\n  var handleHex = (value, evn) => {\n    if (typeof value === 'string' && validHex(value) && /(3|6)/.test(String(value.length))) {\n      onChange && onChange(handleColor(hexToHsva(value)));\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref,\n    className: [prefixCls, className || ''].filter(Boolean).join(' '),\n    style: _extends({\n      padding: 16,\n      width: 98,\n      fontFamily: 'Roboto',\n      backgroundColor: '#fff'\n    }, style)\n  }, other, {\n    children: [/*#__PURE__*/_jsx(EditableInput, {\n      label: \"Hex\",\n      value: hex.toLocaleUpperCase(),\n      onChange: (evn, val) => handleHex(val, evn),\n      onBlur: evn => {\n        var value = evn.target.value;\n        evn.target.value = value.slice(0, 6);\n        handleHex(value.slice(0, 6), evn);\n      },\n      inputStyle: {\n        outline: 0,\n        border: 0,\n        height: 30,\n        fontSize: 15,\n        padding: 0,\n        boxShadow: 'initial',\n        borderWidth: '0 0 2px 0',\n        borderBottomColor: hex ? \"#\" + hex : '#eee',\n        borderBottomStyle: 'solid'\n      },\n      style: {\n        flexDirection: 'column-reverse',\n        alignItems: 'flex-start'\n      }\n    }), /*#__PURE__*/_jsx(RGBA, {\n      hsva: hsva,\n      placement: \"top\",\n      style: {\n        marginTop: 11\n      },\n      rProps: {\n        style: {\n          alignItems: 'flex-start'\n        },\n        inputStyle: _extends({}, styleRBG)\n      },\n      gProps: {\n        style: {\n          alignItems: 'flex-start'\n        },\n        inputStyle: _extends({}, styleRBG)\n      },\n      bProps: {\n        style: {\n          alignItems: 'flex-start'\n        },\n        inputStyle: _extends({}, styleRBG)\n      },\n      aProps: false,\n      onChange: result => handleChange(result.hsva)\n    })]\n  }));\n});\nMaterial.displayName = 'Material';\nexport default Material;","map":{"version":3,"sources":["../src/index.tsx"],"names":["color","styleRBG","boxShadow","borderWidth","borderBottomColor","borderBottomStyle","height","outline","fontSize","padding","Material","prefixCls","onChange","other","hsva","validHex","hexToHsva","hex","hsvaToHex","handleChange","hsv","handleColor","handleHex","String","value","className","width","fontFamily","backgroundColor","evn","border","flexDirection","alignItems","marginTop","style","inputStyle","result"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { HsvaColor, ColorResult, color as handleColor, validHex, hexToHsva, hsvaToHex } from '@uiw/color-convert';\nimport EditableInput from '@uiw/react-color-editable-input';\nimport RGBA from '@uiw/react-color-editable-input-rgba';\n\nexport interface MaterialProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange' | 'color'> {\n  prefixCls?: string;\n  color?: string | HsvaColor;\n  onChange?: (color: ColorResult) => void;\n}\n\nconst styleRBG: React.CSSProperties = {\n  boxShadow: 'initial',\n  borderWidth: '0 0 1px 0',\n  borderBottomColor: '#eee',\n  borderBottomStyle: 'solid',\n  height: 30,\n  outline: 0,\n  fontSize: 15,\n  padding: 0,\n};\n\nconst Material = React.forwardRef<HTMLDivElement, MaterialProps>((props, ref) => {\n  const { prefixCls = 'w-color-material', className, style, color, onChange, ...other } = props;\n  const hsva = (typeof color === 'string' && validHex(color) ? hexToHsva(color) : color) as HsvaColor;\n  const hex = color ? hsvaToHex(hsva).replace(/^#/, '') : '';\n  const handleChange = (hsv: HsvaColor) => {\n    onChange && onChange(handleColor(hsv));\n  };\n  const handleHex = (value: string | number, evn: React.ChangeEvent<HTMLInputElement>) => {\n    if (typeof value === 'string' && validHex(value) && /(3|6)/.test(String(value.length))) {\n      onChange && onChange(handleColor(hexToHsva(value)));\n    }\n  };\n  return (\n    <div\n      ref={ref}\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      style={{ padding: 16, width: 98, fontFamily: 'Roboto', backgroundColor: '#fff', ...style }}\n      {...other}\n    >\n      <EditableInput\n        label=\"Hex\"\n        value={hex.toLocaleUpperCase()}\n        onChange={(evn, val) => handleHex(val, evn)}\n        onBlur={(evn) => {\n          const value = evn.target.value;\n          evn.target.value = value.slice(0, 6);\n          handleHex(value.slice(0, 6), evn);\n        }}\n        inputStyle={{\n          outline: 0,\n          border: 0,\n          height: 30,\n          fontSize: 15,\n          padding: 0,\n          boxShadow: 'initial',\n          borderWidth: '0 0 2px 0',\n          borderBottomColor: hex ? `#${hex}` : '#eee',\n          borderBottomStyle: 'solid',\n        }}\n        style={{ flexDirection: 'column-reverse', alignItems: 'flex-start' }}\n      />\n\n      <RGBA\n        hsva={hsva}\n        placement=\"top\"\n        style={{ marginTop: 11 }}\n        rProps={{\n          style: {\n            alignItems: 'flex-start',\n          },\n          inputStyle: { ...styleRBG },\n        }}\n        gProps={{\n          style: {\n            alignItems: 'flex-start',\n          },\n          inputStyle: { ...styleRBG },\n        }}\n        bProps={{\n          style: {\n            alignItems: 'flex-start',\n          },\n          inputStyle: { ...styleRBG },\n        }}\n        aProps={false}\n        onChange={(result) => handleChange(result.hsva)}\n      />\n    </div>\n  );\n});\n\nMaterial.displayName = 'Material';\n\nexport default Material;\n"]},"metadata":{},"sourceType":"module"}