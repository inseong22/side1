{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module select-all/selectallui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport selectAllIcon from '../theme/icons/select-all.svg';\n/**\n * The select all UI feature.\n *\n * It registers the `'selectAll'` UI button in the editor's\n * {@link module:ui/componentfactory~ComponentFactory component factory}. When clicked, the button\n * executes the {@link module:select-all/selectallcommand~SelectAllCommand select all command}.\n *\n * @extends module:core/plugin~Plugin\n */\n\nexport default class SelectAllUI extends Plugin {\n  /**\n   * @inheritDoc\n   */\n  static get pluginName() {\n    return 'SelectAllUI';\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  init() {\n    const editor = this.editor;\n    editor.ui.componentFactory.add('selectAll', locale => {\n      const command = editor.commands.get('selectAll');\n      const view = new ButtonView(locale);\n      const t = locale.t;\n      view.set({\n        label: t('Select all'),\n        icon: selectAllIcon,\n        keystroke: 'Ctrl+A',\n        tooltip: true\n      });\n      view.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled'); // Execute the command.\n\n      this.listenTo(view, 'execute', () => {\n        editor.execute('selectAll');\n        editor.editing.view.focus();\n      });\n      return view;\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/oyejin/Surfee/kiwi/node_modules/@ckeditor/ckeditor5-select-all/src/selectallui.js"],"names":["Plugin","ButtonView","selectAllIcon","SelectAllUI","pluginName","init","editor","ui","componentFactory","add","locale","command","commands","get","view","t","set","label","icon","keystroke","tooltip","bind","to","listenTo","execute","editing","focus"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,OAAOA,MAAP,MAAmB,qCAAnB;AACA,OAAOC,UAAP,MAAuB,8CAAvB;AAEA,OAAOC,aAAP,MAA0B,+BAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,WAAN,SAA0BH,MAA1B,CAAiC;AAC/C;AACD;AACA;AACsB,aAAVI,UAAU,GAAG;AACvB,WAAO,aAAP;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,IAAI,GAAG;AACN,UAAMC,MAAM,GAAG,KAAKA,MAApB;AAEAA,IAAAA,MAAM,CAACC,EAAP,CAAUC,gBAAV,CAA2BC,GAA3B,CAAgC,WAAhC,EAA6CC,MAAM,IAAI;AACtD,YAAMC,OAAO,GAAGL,MAAM,CAACM,QAAP,CAAgBC,GAAhB,CAAqB,WAArB,CAAhB;AACA,YAAMC,IAAI,GAAG,IAAIb,UAAJ,CAAgBS,MAAhB,CAAb;AACA,YAAMK,CAAC,GAAGL,MAAM,CAACK,CAAjB;AAEAD,MAAAA,IAAI,CAACE,GAAL,CAAU;AACTC,QAAAA,KAAK,EAAEF,CAAC,CAAE,YAAF,CADC;AAETG,QAAAA,IAAI,EAAEhB,aAFG;AAGTiB,QAAAA,SAAS,EAAE,QAHF;AAITC,QAAAA,OAAO,EAAE;AAJA,OAAV;AAOAN,MAAAA,IAAI,CAACO,IAAL,CAAW,MAAX,EAAmB,WAAnB,EAAiCC,EAAjC,CAAqCX,OAArC,EAA8C,OAA9C,EAAuD,WAAvD,EAZsD,CActD;;AACA,WAAKY,QAAL,CAAeT,IAAf,EAAqB,SAArB,EAAgC,MAAM;AACrCR,QAAAA,MAAM,CAACkB,OAAP,CAAgB,WAAhB;AACAlB,QAAAA,MAAM,CAACmB,OAAP,CAAeX,IAAf,CAAoBY,KAApB;AACA,OAHD;AAKA,aAAOZ,IAAP;AACA,KArBD;AAsBA;;AApC8C","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module select-all/selectallui\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\n\nimport selectAllIcon from '../theme/icons/select-all.svg';\n\n/**\n * The select all UI feature.\n *\n * It registers the `'selectAll'` UI button in the editor's\n * {@link module:ui/componentfactory~ComponentFactory component factory}. When clicked, the button\n * executes the {@link module:select-all/selectallcommand~SelectAllCommand select all command}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class SelectAllUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'SelectAllUI';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\teditor.ui.componentFactory.add( 'selectAll', locale => {\n\t\t\tconst command = editor.commands.get( 'selectAll' );\n\t\t\tconst view = new ButtonView( locale );\n\t\t\tconst t = locale.t;\n\n\t\t\tview.set( {\n\t\t\t\tlabel: t( 'Select all' ),\n\t\t\t\ticon: selectAllIcon,\n\t\t\t\tkeystroke: 'Ctrl+A',\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tview.bind( 'isOn', 'isEnabled' ).to( command, 'value', 'isEnabled' );\n\n\t\t\t// Execute the command.\n\t\t\tthis.listenTo( view, 'execute', () => {\n\t\t\t\teditor.execute( 'selectAll' );\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\treturn view;\n\t\t} );\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}