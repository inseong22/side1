{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"prefixCls\", \"className\", \"style\", \"color\", \"colors\", \"onChange\"];\nimport React from 'react';\nimport { color as handleColor, validHex, hexToHsva, hsvaToHex, getContrastingColor } from '@uiw/color-convert';\nimport EditableInput from '@uiw/react-color-editable-input';\nimport Swatch from '@uiw/react-color-swatch';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CORLER_HEX = ['#D9E3F0', '#F47373', '#697689', '#37D67A', '#2CCCE4', '#555555', '#dce775', '#ff8a65', '#ba68c8'];\nvar Block = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n    prefixCls = 'w-color-block',\n    className,\n    style,\n    color,\n    colors = CORLER_HEX,\n    onChange\n  } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var hsva = typeof color === 'string' && validHex(color) ? hexToHsva(color) : color;\n  var hex = color ? hsvaToHex(hsva) : '';\n\n  var handleChange = hsv => {\n    onChange && onChange(handleColor(hsv));\n  };\n\n  var handleHex = (value, evn) => {\n    if (typeof value === 'string' && validHex(value) && /(3|6)/.test(String(value.length))) {\n      onChange && onChange(handleColor(hexToHsva(value)));\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref,\n    className: [prefixCls, className].filter(Boolean).join(' '),\n    style: _extends({\n      width: 170,\n      borderRadius: 6,\n      background: 'rgb(255, 255, 255)',\n      boxShadow: 'rgb(0 0 0 / 10%) 0 1px',\n      position: 'relative'\n    }, style)\n  }, other, {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      style: {\n        width: 0,\n        height: 0,\n        borderStyle: 'solid',\n        borderWidth: '0 10px 10px',\n        borderColor: \"transparent transparent \" + hex,\n        position: 'absolute',\n        top: -10,\n        left: '50%',\n        marginLeft: -10\n      }\n    }), /*#__PURE__*/_jsx(\"div\", {\n      title: hex,\n      style: {\n        backgroundColor: \"\" + hex,\n        color: getContrastingColor(hex),\n        height: 110,\n        fontSize: 18,\n        borderRadius: '6px 6px 0 0',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: hex.toLocaleUpperCase()\n    }), /*#__PURE__*/_jsx(Swatch, {\n      colors: colors,\n      color: hex,\n      style: {\n        paddingLeft: 10,\n        paddingTop: 10\n      },\n      rectProps: {\n        style: {\n          marginRight: 10,\n          marginBottom: 10,\n          borderRadius: 4,\n          height: 22,\n          width: 22\n        }\n      },\n      onChange: handleChange\n    }), /*#__PURE__*/_jsx(EditableInput, {\n      value: hex.toLocaleUpperCase(),\n      onChange: (evn, val) => handleHex(val, evn),\n      onBlur: evn => {\n        var value = evn.target.value;\n        evn.target.value = value.slice(0, 6);\n        handleHex(value.slice(0, 6), evn);\n      },\n      inputStyle: {\n        height: 22,\n        outline: 0,\n        borderRadius: 3,\n        color: '#666',\n        padding: '0 7px'\n      },\n      style: {\n        padding: 10,\n        paddingTop: 0,\n        borderRadius: '0 0 6px 6px'\n      }\n    })]\n  }));\n});\nBlock.displayName = 'Block';\nexport default Block;","map":{"version":3,"sources":["../src/index.tsx"],"names":["color","CORLER_HEX","Block","prefixCls","colors","onChange","other","hsva","validHex","hexToHsva","hex","hsvaToHex","handleChange","hsv","handleColor","handleHex","String","value","width","borderRadius","background","boxShadow","position","height","borderStyle","borderWidth","borderColor","top","left","marginLeft","backgroundColor","getContrastingColor","fontSize","display","alignItems","justifyContent","paddingLeft","paddingTop","style","marginRight","marginBottom","evn","outline","padding"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  HsvaColor,\n  ColorResult,\n  color as handleColor,\n  validHex,\n  hexToHsva,\n  hsvaToHex,\n  getContrastingColor,\n} from '@uiw/color-convert';\nimport EditableInput from '@uiw/react-color-editable-input';\nimport Swatch from '@uiw/react-color-swatch';\n\nconst CORLER_HEX = ['#D9E3F0', '#F47373', '#697689', '#37D67A', '#2CCCE4', '#555555', '#dce775', '#ff8a65', '#ba68c8'];\n\nexport interface BlockProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange' | 'color'> {\n  prefixCls?: string;\n  color?: string | HsvaColor;\n  colors?: string[];\n  onChange?: (color: ColorResult) => void;\n}\n\nconst Block = React.forwardRef<HTMLDivElement, BlockProps>((props, ref) => {\n  const { prefixCls = 'w-color-block', className, style, color, colors = CORLER_HEX, onChange, ...other } = props;\n  const hsva = (typeof color === 'string' && validHex(color) ? hexToHsva(color) : color) as HsvaColor;\n  const hex = color ? hsvaToHex(hsva) : '';\n  const handleChange = (hsv: HsvaColor) => {\n    onChange && onChange(handleColor(hsv));\n  };\n  const handleHex = (value: string | number, evn: React.ChangeEvent<HTMLInputElement>) => {\n    if (typeof value === 'string' && validHex(value) && /(3|6)/.test(String(value.length))) {\n      onChange && onChange(handleColor(hexToHsva(value)));\n    }\n  };\n  return (\n    <div\n      ref={ref}\n      className={[prefixCls, className].filter(Boolean).join(' ')}\n      style={{\n        width: 170,\n        borderRadius: 6,\n        background: 'rgb(255, 255, 255)',\n        boxShadow: 'rgb(0 0 0 / 10%) 0 1px',\n        position: 'relative',\n        ...style,\n      }}\n      {...other}\n    >\n      <div\n        style={{\n          width: 0,\n          height: 0,\n          borderStyle: 'solid',\n          borderWidth: '0 10px 10px',\n          borderColor: `transparent transparent ${hex}`,\n          position: 'absolute',\n          top: -10,\n          left: '50%',\n          marginLeft: -10,\n        }}\n      />\n      <div\n        title={hex}\n        style={{\n          backgroundColor: `${hex}`,\n          color: getContrastingColor(hex),\n          height: 110,\n          fontSize: 18,\n          borderRadius: '6px 6px 0 0',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        {hex.toLocaleUpperCase()}\n      </div>\n      <Swatch\n        colors={colors}\n        color={hex}\n        style={{\n          paddingLeft: 10,\n          paddingTop: 10,\n        }}\n        rectProps={{\n          style: {\n            marginRight: 10,\n            marginBottom: 10,\n            borderRadius: 4,\n            height: 22,\n            width: 22,\n          },\n        }}\n        onChange={handleChange}\n      />\n      <EditableInput\n        value={hex.toLocaleUpperCase()}\n        onChange={(evn, val) => handleHex(val, evn)}\n        onBlur={(evn) => {\n          const value = evn.target.value;\n          evn.target.value = value.slice(0, 6);\n          handleHex(value.slice(0, 6), evn);\n        }}\n        inputStyle={{\n          height: 22,\n          outline: 0,\n          borderRadius: 3,\n          color: '#666',\n          padding: '0 7px',\n        }}\n        style={{\n          padding: 10,\n          paddingTop: 0,\n          borderRadius: '0 0 6px 6px',\n        }}\n      />\n    </div>\n  );\n});\n\nBlock.displayName = 'Block';\n\nexport default Block;\n"]},"metadata":{},"sourceType":"module"}