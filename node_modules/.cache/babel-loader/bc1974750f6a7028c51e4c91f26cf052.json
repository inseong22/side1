{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module link/utils\n */\nimport { toMap } from 'ckeditor5/src/utils';\n/**\n * Helper class that ties together all {@link module:link/link~LinkDecoratorAutomaticDefinition} and provides\n * the {@link module:engine/conversion/downcasthelpers~DowncastHelpers#attributeToElement downcast dispatchers} for them.\n */\n\nexport default class AutomaticDecorators {\n  constructor() {\n    /**\n     * Stores the definition of {@link module:link/link~LinkDecoratorAutomaticDefinition automatic decorators}.\n     * This data is used as a source for a downcast dispatcher to create a proper conversion to output data.\n     *\n     * @private\n     * @type {Set}\n     */\n    this._definitions = new Set();\n  }\n  /**\n   * Gives information about the number of decorators stored in the {@link module:link/utils~AutomaticDecorators} instance.\n   *\n   * @readonly\n   * @protected\n   * @type {Number}\n   */\n\n\n  get length() {\n    return this._definitions.size;\n  }\n  /**\n   * Adds automatic decorator objects or an array with them to be used during downcasting.\n   *\n   * @param {module:link/link~LinkDecoratorAutomaticDefinition|Array.<module:link/link~LinkDecoratorAutomaticDefinition>} item\n   * A configuration object of automatic rules for decorating links. It might also be an array of such objects.\n   */\n\n\n  add(item) {\n    if (Array.isArray(item)) {\n      item.forEach(item => this._definitions.add(item));\n    } else {\n      this._definitions.add(item);\n    }\n  }\n  /**\n   * Provides the conversion helper used in the {@link module:engine/conversion/downcasthelpers~DowncastHelpers#add} method.\n   *\n   * @returns {Function} A dispatcher function used as conversion helper\n   * in {@link module:engine/conversion/downcasthelpers~DowncastHelpers#add}.\n   */\n\n\n  getDispatcher() {\n    return dispatcher => {\n      dispatcher.on('attribute:linkHref', (evt, data, conversionApi) => {\n        // There is only test as this behavior decorates links and\n        // it is run before dispatcher which actually consumes this node.\n        // This allows on writing own dispatcher with highest priority,\n        // which blocks both native converter and this additional decoration.\n        if (!conversionApi.consumable.test(data.item, 'attribute:linkHref')) {\n          return;\n        }\n\n        const viewWriter = conversionApi.writer;\n        const viewSelection = viewWriter.document.selection;\n\n        for (const item of this._definitions) {\n          const viewElement = viewWriter.createAttributeElement('a', item.attributes, {\n            priority: 5\n          });\n\n          if (item.classes) {\n            viewWriter.addClass(item.classes, viewElement);\n          }\n\n          for (const key in item.styles) {\n            viewWriter.setStyle(key, item.styles[key], viewElement);\n          }\n\n          viewWriter.setCustomProperty('link', true, viewElement);\n\n          if (item.callback(data.attributeNewValue)) {\n            if (data.item.is('selection')) {\n              viewWriter.wrap(viewSelection.getFirstRange(), viewElement);\n            } else {\n              viewWriter.wrap(conversionApi.mapper.toViewRange(data.range), viewElement);\n            }\n          } else {\n            viewWriter.unwrap(conversionApi.mapper.toViewRange(data.range), viewElement);\n          }\n        }\n      }, {\n        priority: 'high'\n      });\n    };\n  }\n  /**\n   * Provides the conversion helper used in the {@link module:engine/conversion/downcasthelpers~DowncastHelpers#add} method\n   * when linking images.\n   *\n   * @returns {Function} A dispatcher function used as conversion helper\n   * in {@link module:engine/conversion/downcasthelpers~DowncastHelpers#add}.\n   */\n\n\n  getDispatcherForLinkedImage() {\n    return dispatcher => {\n      dispatcher.on('attribute:linkHref:imageBlock', (evt, data, {\n        writer,\n        mapper\n      }) => {\n        const viewFigure = mapper.toViewElement(data.item);\n        const linkInImage = Array.from(viewFigure.getChildren()).find(child => child.name === 'a');\n\n        for (const item of this._definitions) {\n          const attributes = toMap(item.attributes);\n\n          if (item.callback(data.attributeNewValue)) {\n            for (const [key, val] of attributes) {\n              // Left for backward compatibility. Since v30 decorator should\n              // accept `classes` and `styles` separately from `attributes`.\n              if (key === 'class') {\n                writer.addClass(val, linkInImage);\n              } else {\n                writer.setAttribute(key, val, linkInImage);\n              }\n            }\n\n            if (item.classes) {\n              writer.addClass(item.classes, linkInImage);\n            }\n\n            for (const key in item.styles) {\n              writer.setStyle(key, item.styles[key], linkInImage);\n            }\n          } else {\n            for (const [key, val] of attributes) {\n              if (key === 'class') {\n                writer.removeClass(val, linkInImage);\n              } else {\n                writer.removeAttribute(key, linkInImage);\n              }\n            }\n\n            if (item.classes) {\n              writer.removeClass(item.classes, linkInImage);\n            }\n\n            for (const key in item.styles) {\n              writer.removeStyle(key, linkInImage);\n            }\n          }\n        }\n      });\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/oyejin/Surfee/kiwi/node_modules/@ckeditor/ckeditor5-link/src/utils/automaticdecorators.js"],"names":["toMap","AutomaticDecorators","constructor","_definitions","Set","length","size","add","item","Array","isArray","forEach","getDispatcher","dispatcher","on","evt","data","conversionApi","consumable","test","viewWriter","writer","viewSelection","document","selection","viewElement","createAttributeElement","attributes","priority","classes","addClass","key","styles","setStyle","setCustomProperty","callback","attributeNewValue","is","wrap","getFirstRange","mapper","toViewRange","range","unwrap","getDispatcherForLinkedImage","viewFigure","toViewElement","linkInImage","from","getChildren","find","child","name","val","setAttribute","removeClass","removeAttribute","removeStyle"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module link/utils\n */\n\nimport { toMap } from 'ckeditor5/src/utils';\n\n/**\n * Helper class that ties together all {@link module:link/link~LinkDecoratorAutomaticDefinition} and provides\n * the {@link module:engine/conversion/downcasthelpers~DowncastHelpers#attributeToElement downcast dispatchers} for them.\n */\nexport default class AutomaticDecorators {\n\tconstructor() {\n\t\t/**\n\t\t * Stores the definition of {@link module:link/link~LinkDecoratorAutomaticDefinition automatic decorators}.\n\t\t * This data is used as a source for a downcast dispatcher to create a proper conversion to output data.\n\t\t *\n\t\t * @private\n\t\t * @type {Set}\n\t\t */\n\t\tthis._definitions = new Set();\n\t}\n\n\t/**\n\t * Gives information about the number of decorators stored in the {@link module:link/utils~AutomaticDecorators} instance.\n\t *\n\t * @readonly\n\t * @protected\n\t * @type {Number}\n\t */\n\tget length() {\n\t\treturn this._definitions.size;\n\t}\n\n\t/**\n\t * Adds automatic decorator objects or an array with them to be used during downcasting.\n\t *\n\t * @param {module:link/link~LinkDecoratorAutomaticDefinition|Array.<module:link/link~LinkDecoratorAutomaticDefinition>} item\n\t * A configuration object of automatic rules for decorating links. It might also be an array of such objects.\n\t */\n\tadd( item ) {\n\t\tif ( Array.isArray( item ) ) {\n\t\t\titem.forEach( item => this._definitions.add( item ) );\n\t\t} else {\n\t\t\tthis._definitions.add( item );\n\t\t}\n\t}\n\n\t/**\n\t * Provides the conversion helper used in the {@link module:engine/conversion/downcasthelpers~DowncastHelpers#add} method.\n\t *\n\t * @returns {Function} A dispatcher function used as conversion helper\n\t * in {@link module:engine/conversion/downcasthelpers~DowncastHelpers#add}.\n\t */\n\tgetDispatcher() {\n\t\treturn dispatcher => {\n\t\t\tdispatcher.on( 'attribute:linkHref', ( evt, data, conversionApi ) => {\n\t\t\t\t// There is only test as this behavior decorates links and\n\t\t\t\t// it is run before dispatcher which actually consumes this node.\n\t\t\t\t// This allows on writing own dispatcher with highest priority,\n\t\t\t\t// which blocks both native converter and this additional decoration.\n\t\t\t\tif ( !conversionApi.consumable.test( data.item, 'attribute:linkHref' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst viewWriter = conversionApi.writer;\n\t\t\t\tconst viewSelection = viewWriter.document.selection;\n\n\t\t\t\tfor ( const item of this._definitions ) {\n\t\t\t\t\tconst viewElement = viewWriter.createAttributeElement( 'a', item.attributes, {\n\t\t\t\t\t\tpriority: 5\n\t\t\t\t\t} );\n\n\t\t\t\t\tif ( item.classes ) {\n\t\t\t\t\t\tviewWriter.addClass( item.classes, viewElement );\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( const key in item.styles ) {\n\t\t\t\t\t\tviewWriter.setStyle( key, item.styles[ key ], viewElement );\n\t\t\t\t\t}\n\n\t\t\t\t\tviewWriter.setCustomProperty( 'link', true, viewElement );\n\t\t\t\t\tif ( item.callback( data.attributeNewValue ) ) {\n\t\t\t\t\t\tif ( data.item.is( 'selection' ) ) {\n\t\t\t\t\t\t\tviewWriter.wrap( viewSelection.getFirstRange(), viewElement );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tviewWriter.wrap( conversionApi.mapper.toViewRange( data.range ), viewElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tviewWriter.unwrap( conversionApi.mapper.toViewRange( data.range ), viewElement );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, { priority: 'high' } );\n\t\t};\n\t}\n\n\t/**\n\t * Provides the conversion helper used in the {@link module:engine/conversion/downcasthelpers~DowncastHelpers#add} method\n\t * when linking images.\n\t *\n\t * @returns {Function} A dispatcher function used as conversion helper\n\t * in {@link module:engine/conversion/downcasthelpers~DowncastHelpers#add}.\n\t */\n\tgetDispatcherForLinkedImage() {\n\t\treturn dispatcher => {\n\t\t\tdispatcher.on( 'attribute:linkHref:imageBlock', ( evt, data, { writer, mapper } ) => {\n\t\t\t\tconst viewFigure = mapper.toViewElement( data.item );\n\t\t\t\tconst linkInImage = Array.from( viewFigure.getChildren() ).find( child => child.name === 'a' );\n\n\t\t\t\tfor ( const item of this._definitions ) {\n\t\t\t\t\tconst attributes = toMap( item.attributes );\n\n\t\t\t\t\tif ( item.callback( data.attributeNewValue ) ) {\n\t\t\t\t\t\tfor ( const [ key, val ] of attributes ) {\n\t\t\t\t\t\t\t// Left for backward compatibility. Since v30 decorator should\n\t\t\t\t\t\t\t// accept `classes` and `styles` separately from `attributes`.\n\t\t\t\t\t\t\tif ( key === 'class' ) {\n\t\t\t\t\t\t\t\twriter.addClass( val, linkInImage );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\twriter.setAttribute( key, val, linkInImage );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( item.classes ) {\n\t\t\t\t\t\t\twriter.addClass( item.classes, linkInImage );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( const key in item.styles ) {\n\t\t\t\t\t\t\twriter.setStyle( key, item.styles[ key ], linkInImage );\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor ( const [ key, val ] of attributes ) {\n\t\t\t\t\t\t\tif ( key === 'class' ) {\n\t\t\t\t\t\t\t\twriter.removeClass( val, linkInImage );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\twriter.removeAttribute( key, linkInImage );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( item.classes ) {\n\t\t\t\t\t\t\twriter.removeClass( item.classes, linkInImage );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( const key in item.styles ) {\n\t\t\t\t\t\t\twriter.removeStyle( key, linkInImage );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t};\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}