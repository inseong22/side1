{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/image/ui/utils\n */\nimport { BalloonPanelView } from 'ckeditor5/src/ui';\n/**\n * A helper utility that positions the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon} instance\n * with respect to the image in the editor content, if one is selected.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n */\n\nexport function repositionContextualBalloon(editor) {\n  const balloon = editor.plugins.get('ContextualBalloon');\n\n  if (editor.plugins.get('ImageUtils').getClosestSelectedImageWidget(editor.editing.view.document.selection)) {\n    const position = getBalloonPositionData(editor);\n    balloon.updatePosition(position);\n  }\n}\n/**\n * Returns the positioning options that control the geometry of the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon} with respect\n * to the selected element in the editor content.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n * @returns {module:utils/dom/position~Options}\n */\n\nexport function getBalloonPositionData(editor) {\n  const editingView = editor.editing.view;\n  const defaultPositions = BalloonPanelView.defaultPositions;\n  const imageUtils = editor.plugins.get('ImageUtils');\n  return {\n    target: editingView.domConverter.viewToDom(imageUtils.getClosestSelectedImageWidget(editingView.document.selection)),\n    positions: [defaultPositions.northArrowSouth, defaultPositions.northArrowSouthWest, defaultPositions.northArrowSouthEast, defaultPositions.southArrowNorth, defaultPositions.southArrowNorthWest, defaultPositions.southArrowNorthEast, defaultPositions.viewportStickyNorth]\n  };\n}","map":{"version":3,"sources":["/Users/oyejin/Surfee/kiwi/node_modules/@ckeditor/ckeditor5-image/src/image/ui/utils.js"],"names":["BalloonPanelView","repositionContextualBalloon","editor","balloon","plugins","get","getClosestSelectedImageWidget","editing","view","document","selection","position","getBalloonPositionData","updatePosition","editingView","defaultPositions","imageUtils","target","domConverter","viewToDom","positions","northArrowSouth","northArrowSouthWest","northArrowSouthEast","southArrowNorth","southArrowNorthWest","southArrowNorthEast","viewportStickyNorth"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,SAASA,gBAAT,QAAiC,kBAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,2BAAT,CAAsCC,MAAtC,EAA+C;AACrD,QAAMC,OAAO,GAAGD,MAAM,CAACE,OAAP,CAAeC,GAAf,CAAoB,mBAApB,CAAhB;;AAEA,MAAKH,MAAM,CAACE,OAAP,CAAeC,GAAf,CAAoB,YAApB,EAAmCC,6BAAnC,CAAkEJ,MAAM,CAACK,OAAP,CAAeC,IAAf,CAAoBC,QAApB,CAA6BC,SAA/F,CAAL,EAAkH;AACjH,UAAMC,QAAQ,GAAGC,sBAAsB,CAAEV,MAAF,CAAvC;AAEAC,IAAAA,OAAO,CAACU,cAAR,CAAwBF,QAAxB;AACA;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,sBAAT,CAAiCV,MAAjC,EAA0C;AAChD,QAAMY,WAAW,GAAGZ,MAAM,CAACK,OAAP,CAAeC,IAAnC;AACA,QAAMO,gBAAgB,GAAGf,gBAAgB,CAACe,gBAA1C;AACA,QAAMC,UAAU,GAAGd,MAAM,CAACE,OAAP,CAAeC,GAAf,CAAoB,YAApB,CAAnB;AAEA,SAAO;AACNY,IAAAA,MAAM,EAAEH,WAAW,CAACI,YAAZ,CAAyBC,SAAzB,CAAoCH,UAAU,CAACV,6BAAX,CAA0CQ,WAAW,CAACL,QAAZ,CAAqBC,SAA/D,CAApC,CADF;AAENU,IAAAA,SAAS,EAAE,CACVL,gBAAgB,CAACM,eADP,EAEVN,gBAAgB,CAACO,mBAFP,EAGVP,gBAAgB,CAACQ,mBAHP,EAIVR,gBAAgB,CAACS,eAJP,EAKVT,gBAAgB,CAACU,mBALP,EAMVV,gBAAgB,CAACW,mBANP,EAOVX,gBAAgB,CAACY,mBAPP;AAFL,GAAP;AAYA","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/image/ui/utils\n */\n\nimport { BalloonPanelView } from 'ckeditor5/src/ui';\n\n/**\n * A helper utility that positions the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon} instance\n * with respect to the image in the editor content, if one is selected.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n */\nexport function repositionContextualBalloon( editor ) {\n\tconst balloon = editor.plugins.get( 'ContextualBalloon' );\n\n\tif ( editor.plugins.get( 'ImageUtils' ).getClosestSelectedImageWidget( editor.editing.view.document.selection ) ) {\n\t\tconst position = getBalloonPositionData( editor );\n\n\t\tballoon.updatePosition( position );\n\t}\n}\n\n/**\n * Returns the positioning options that control the geometry of the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon} with respect\n * to the selected element in the editor content.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n * @returns {module:utils/dom/position~Options}\n */\nexport function getBalloonPositionData( editor ) {\n\tconst editingView = editor.editing.view;\n\tconst defaultPositions = BalloonPanelView.defaultPositions;\n\tconst imageUtils = editor.plugins.get( 'ImageUtils' );\n\n\treturn {\n\t\ttarget: editingView.domConverter.viewToDom( imageUtils.getClosestSelectedImageWidget( editingView.document.selection ) ),\n\t\tpositions: [\n\t\t\tdefaultPositions.northArrowSouth,\n\t\t\tdefaultPositions.northArrowSouthWest,\n\t\t\tdefaultPositions.northArrowSouthEast,\n\t\t\tdefaultPositions.southArrowNorth,\n\t\t\tdefaultPositions.southArrowNorthWest,\n\t\t\tdefaultPositions.southArrowNorthEast,\n\t\t\tdefaultPositions.viewportStickyNorth\n\t\t]\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}