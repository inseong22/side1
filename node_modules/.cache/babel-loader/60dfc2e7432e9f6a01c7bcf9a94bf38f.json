{"ast":null,"code":"var _jsxFileName = \"/Users/oyejin/Surfee/kiwi/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport AppRouter from './Router';\nimport NavBarV2 from './pages/NavAndFooter/NavBarV2';\nimport { authService } from './tools/fbase';\nimport { RecoilRoot } from 'recoil';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    // 유저가 제작한 랜딩페이지에 들어가는 사람들까지 로그인 검사를 하면 속도가 느려지니까\n    if (window.location.host.split(\".\")[0] === \"surfee\" || window.location.host.split(\".\")[0] === \"localhost:3000\") {\n      authService.onAuthStateChanged(user => {\n        if (user) {\n          setIsLoggedIn(true); // setUserObj(user.multiFactor.user);\n        } else {\n          setIsLoggedIn(false);\n        }\n\n        setInit(true);\n      });\n    } else {\n      setInit(true);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(RecoilRoot, {\n      className: \"App\",\n      children: init ? /*#__PURE__*/_jsxDEV(AppRouter, {\n        userObj: userObj,\n        isLoggedIn: isLoggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this) : \"Initializing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"+8UWPZeDHvBWUbvjuGH9aya/3CQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/oyejin/Surfee/kiwi/src/App.js"],"names":["React","useState","useEffect","AppRouter","NavBarV2","authService","RecoilRoot","App","init","setInit","isLoggedIn","setIsLoggedIn","userObj","setUserObj","window","location","host","split","onAuthStateChanged","user"],"mappings":";;;;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAAQC,UAAR,QAAyB,QAAzB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAGY,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,MAAuC,QAAvC,IAAmDH,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,MAAuC,gBAA7F,EAA8G;AAC5GZ,MAAAA,WAAW,CAACa,kBAAZ,CAAgCC,IAAD,IAAU;AACvC,YAAGA,IAAH,EAAQ;AACNR,UAAAA,aAAa,CAAC,IAAD,CAAb,CADM,CAEN;AACD,SAHD,MAGK;AACHA,UAAAA,aAAa,CAAC,KAAD,CAAb;AACD;;AACDF,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD,OARD;AASD,KAVD,MAUK;AACHA,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,GAfQ,CAAT;AAiBA,sBACE;AAAA,2BACA,QAAC,UAAD;AAAY,MAAA,SAAS,EAAC,KAAtB;AAAA,gBACGD,IAAI,gBAAG,QAAC,SAAD;AAAW,QAAA,OAAO,EAAEI,OAApB;AAA6B,QAAA,UAAU,EAAEF;AAAzC;AAAA;AAAA;AAAA;AAAA,cAAH,GAA6D;AADpE;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAOD;;GA7BQH,G;;KAAAA,G;AA+BT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport React, {useState, useEffect} from 'react';\nimport './App.css';\nimport AppRouter from './Router';\nimport NavBarV2 from './pages/NavAndFooter/NavBarV2';\nimport { authService } from './tools/fbase'\nimport {RecoilRoot} from 'recoil';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    // 유저가 제작한 랜딩페이지에 들어가는 사람들까지 로그인 검사를 하면 속도가 느려지니까\n    if(window.location.host.split(\".\")[0] === \"surfee\" || window.location.host.split(\".\")[0] === \"localhost:3000\"){\n      authService.onAuthStateChanged((user) => {\n        if(user){\n          setIsLoggedIn(true)\n          // setUserObj(user.multiFactor.user);\n        }else{\n          setIsLoggedIn(false)\n        }\n        setInit(true)\n      })\n    }else{\n      setInit(true)\n    }\n  })\n\n  return (\n    <>\n    <RecoilRoot className=\"App\">\n      {init ? <AppRouter userObj={userObj} isLoggedIn={isLoggedIn} /> : \"Initializing...\"}\n    </RecoilRoot>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}