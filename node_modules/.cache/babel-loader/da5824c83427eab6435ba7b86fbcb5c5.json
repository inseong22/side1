{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"prefixCls\", \"className\", \"onChange\", \"width\", \"presetColors\", \"color\", \"editableDisable\", \"style\"];\nimport React, { useState, useCallback, Fragment } from 'react';\nimport Saturation from '@uiw/react-color-saturation';\nimport Alpha from '@uiw/react-color-alpha';\nimport EditableInput from '@uiw/react-color-editable-input';\nimport RGBA from '@uiw/react-color-editable-input-rgba';\nimport Hue from '@uiw/react-color-hue';\nimport { validHex, hsvaToHex, hsvaToRgbaString, hexToHsva, color as handleColor } from '@uiw/color-convert';\nimport Swatch from '@uiw/react-color-swatch';\nimport { useEffect } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PRESET_COLORS = ['#D0021B', '#F5A623', '#f8e61b', '#8B572A', '#7ED321', '#417505', '#BD10E0', '#9013FE', '#4A90E2', '#50E3C2', '#B8E986', '#000000', '#4A4A4A', '#9B9B9B', '#FFFFFF'];\n\nvar Bar = props => /*#__PURE__*/_jsx(\"div\", {\n  style: {\n    boxShadow: 'rgb(0 0 0 / 60%) 0px 0px 2px',\n    width: 4,\n    top: 1,\n    bottom: 1,\n    left: props.left,\n    borderRadius: 1,\n    position: 'absolute',\n    backgroundColor: '#fff'\n  }\n});\n\nvar Sketch = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n    prefixCls = 'w-color-sketch',\n    className,\n    onChange,\n    width = 218,\n    presetColors = PRESET_COLORS,\n    color,\n    editableDisable = true,\n    style\n  } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var [hsva, setHsva] = useState({\n    h: 209,\n    s: 36,\n    v: 90,\n    a: 1\n  });\n  useEffect(() => {\n    if (typeof color === 'string' && validHex(color)) {\n      setHsva(hexToHsva(color));\n    }\n\n    if (typeof color === 'object') {\n      setHsva(color);\n    }\n  }, [color]);\n  var handleChange = useCallback(hsv => {\n    setHsva(hsv);\n    onChange && onChange(handleColor(hsv));\n  }, [hsva]);\n\n  var handleHex = (value, evn) => {\n    if (typeof value === 'string' && validHex(value) && /(3|6)/.test(String(value.length))) {\n      handleChange(hexToHsva(value));\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", _extends({}, other, {\n    className: prefixCls + \" \" + (className || ''),\n    ref: ref,\n    style: _extends({\n      background: 'rgb(255, 255, 255)',\n      borderRadius: 4,\n      boxShadow: 'rgb(0 0 0 / 15%) 0px 0px 0px 1px, rgb(0 0 0 / 15%) 0px 8px 16px',\n      width\n    }, style),\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      style: {\n        padding: '10px 10px 8px'\n      },\n      children: [/*#__PURE__*/_jsx(Saturation, {\n        hsva: hsva,\n        style: {\n          width: 'auto',\n          height: 150\n        },\n        onChange: newColor => handleChange(_extends({}, hsva, newColor, {\n          a: hsva.a\n        }))\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        style: {\n          display: 'flex',\n          marginTop: 4\n        },\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsx(Hue, {\n            width: \"auto\",\n            height: 10,\n            hue: hsva.h,\n            pointer: Bar,\n            innerProps: {\n              style: {\n                marginLeft: 1,\n                marginRight: 5\n              }\n            },\n            onChange: newHue => handleChange(_extends({}, hsva, newHue))\n          }), /*#__PURE__*/_jsx(Alpha, {\n            width: \"auto\",\n            height: 10,\n            hsva: hsva,\n            pointer: Bar,\n            style: {\n              marginTop: 4\n            },\n            innerProps: {\n              style: {\n                marginLeft: 1,\n                marginRight: 5\n              }\n            },\n            onChange: newAlpha => {\n              handleChange(_extends({}, hsva, {\n                a: newAlpha.a\n              }));\n            }\n          })]\n        }), /*#__PURE__*/_jsx(Alpha, {\n          width: 24,\n          height: 24,\n          hsva: hsva,\n          radius: 2,\n          style: {\n            marginLeft: 4\n          },\n          bgProps: {\n            style: {\n              background: 'transparent'\n            }\n          },\n          innerProps: {\n            style: {\n              borderRadius: 2,\n              background: hsvaToRgbaString(hsva),\n              boxShadow: 'rgb(0 0 0 / 15%) 0px 0px 0px 1px inset, rgb(0 0 0 / 25%) 0px 0px 4px inset'\n            }\n          },\n          pointer: () => /*#__PURE__*/_jsx(Fragment, {})\n        })]\n      })]\n    }), editableDisable && /*#__PURE__*/_jsxs(\"div\", {\n      style: {\n        display: 'flex',\n        margin: '0 10px 3px 10px'\n      },\n      children: [/*#__PURE__*/_jsx(EditableInput, {\n        label: \"Hex\",\n        value: hsvaToHex(hsva).replace(/^#/, '').toLocaleUpperCase(),\n        onChange: (evn, val) => handleHex(val, evn),\n        style: {\n          minWidth: 58\n        }\n      }), /*#__PURE__*/_jsx(RGBA, {\n        hsva: hsva,\n        style: {\n          marginLeft: 6\n        },\n        onChange: result => handleChange(result.hsva)\n      })]\n    }), presetColors && presetColors.length > 0 && /*#__PURE__*/_jsx(Swatch, {\n      style: {\n        borderTop: '1px solid rgb(238, 238, 238)',\n        paddingTop: 10,\n        paddingLeft: 10\n      },\n      colors: presetColors,\n      color: hsvaToHex(hsva),\n      onChange: hsvColor => handleChange(hsvColor),\n      rectProps: {\n        style: {\n          marginRight: 10,\n          marginBottom: 10,\n          borderRadius: 3,\n          boxShadow: 'rgb(0 0 0 / 15%) 0px 0px 0px 1px inset' // display: 'flex',\n          // alignItems: 'center',\n          // justifyContent: 'center',\n\n        }\n      }\n    })]\n  }));\n});\nSketch.displayName = 'Sketch';\nexport default Sketch;","map":{"version":3,"sources":["../src/index.tsx"],"names":["color","PRESET_COLORS","Bar","props","boxShadow","width","top","bottom","left","borderRadius","position","backgroundColor","Sketch","prefixCls","presetColors","editableDisable","style","other","useState","h","s","v","a","useEffect","validHex","setHsva","hexToHsva","handleChange","useCallback","hsv","onChange","handleColor","handleHex","String","value","className","background","padding","height","newColor","hsva","display","marginTop","flex","marginLeft","marginRight","newHue","newAlpha","hsvaToRgbaString","margin","hsvaToHex","minWidth","result","borderTop","paddingTop","paddingLeft","hsvColor","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, Fragment } from 'react';\nimport Saturation from '@uiw/react-color-saturation';\nimport Alpha from '@uiw/react-color-alpha';\nimport EditableInput from '@uiw/react-color-editable-input';\nimport RGBA from '@uiw/react-color-editable-input-rgba';\nimport { PointerProps } from '@uiw/react-color-alpha/lib/cjs/Pointer';\nimport Hue from '@uiw/react-color-hue';\nimport {\n  validHex,\n  HsvaColor,\n  hsvaToHex,\n  hsvaToRgbaString,\n  hexToHsva,\n  color as handleColor,\n  ColorResult,\n} from '@uiw/color-convert';\nimport Swatch, { SwatchPresetColor } from '@uiw/react-color-swatch';\nimport { useEffect } from 'react';\n\nconst PRESET_COLORS = [\n  '#D0021B',\n  '#F5A623',\n  '#f8e61b',\n  '#8B572A',\n  '#7ED321',\n  '#417505',\n  '#BD10E0',\n  '#9013FE',\n  '#4A90E2',\n  '#50E3C2',\n  '#B8E986',\n  '#000000',\n  '#4A4A4A',\n  '#9B9B9B',\n  '#FFFFFF',\n];\n\nexport interface SketchProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange' | 'color'> {\n  prefixCls?: string;\n  width?: number;\n  color?: string | HsvaColor;\n  presetColors?: false | SwatchPresetColor[];\n  editableDisable?: boolean;\n  onChange?: (newShade: ColorResult) => void;\n}\n\nconst Bar = (props: PointerProps) => (\n  <div\n    style={{\n      boxShadow: 'rgb(0 0 0 / 60%) 0px 0px 2px',\n      width: 4,\n      top: 1,\n      bottom: 1,\n      left: props.left,\n      borderRadius: 1,\n      position: 'absolute',\n      backgroundColor: '#fff',\n    }}\n  />\n);\n\nconst Sketch = React.forwardRef<HTMLDivElement, SketchProps>((props, ref) => {\n  const {\n    prefixCls = 'w-color-sketch',\n    className,\n    onChange,\n    width = 218,\n    presetColors = PRESET_COLORS,\n    color,\n    editableDisable = true,\n    style,\n    ...other\n  } = props;\n  const [hsva, setHsva] = useState({ h: 209, s: 36, v: 90, a: 1 });\n  useEffect(() => {\n    if (typeof color === 'string' && validHex(color)) {\n      setHsva(hexToHsva(color));\n    }\n    if (typeof color === 'object') {\n      setHsva(color);\n    }\n  }, [color]);\n\n  const handleChange = useCallback(\n    (hsv: HsvaColor) => {\n      setHsva(hsv);\n      onChange && onChange(handleColor(hsv));\n    },\n    [hsva],\n  );\n\n  const handleHex = (value: string | number, evn: React.ChangeEvent<HTMLInputElement>) => {\n    if (typeof value === 'string' && validHex(value) && /(3|6)/.test(String(value.length))) {\n      handleChange(hexToHsva(value));\n    }\n  };\n  return (\n    <div\n      {...other}\n      className={`${prefixCls} ${className || ''}`}\n      ref={ref}\n      style={{\n        background: 'rgb(255, 255, 255)',\n        borderRadius: 4,\n        boxShadow: 'rgb(0 0 0 / 15%) 0px 0px 0px 1px, rgb(0 0 0 / 15%) 0px 8px 16px',\n        width,\n        ...style,\n      }}\n    >\n      <div style={{ padding: '10px 10px 8px' }}>\n        <Saturation\n          hsva={hsva}\n          style={{ width: 'auto', height: 150 }}\n          onChange={(newColor) => handleChange({ ...hsva, ...newColor, a: hsva.a })}\n        />\n        <div style={{ display: 'flex', marginTop: 4 }}>\n          <div style={{ flex: 1 }}>\n            <Hue\n              width=\"auto\"\n              height={10}\n              hue={hsva.h}\n              pointer={Bar}\n              innerProps={{\n                style: { marginLeft: 1, marginRight: 5 },\n              }}\n              onChange={(newHue) => handleChange({ ...hsva, ...newHue })}\n            />\n            <Alpha\n              width=\"auto\"\n              height={10}\n              hsva={hsva}\n              pointer={Bar}\n              style={{ marginTop: 4 }}\n              innerProps={{\n                style: { marginLeft: 1, marginRight: 5 },\n              }}\n              onChange={(newAlpha) => {\n                handleChange({ ...hsva, ...{ a: newAlpha.a } });\n              }}\n            />\n          </div>\n          <Alpha\n            width={24}\n            height={24}\n            hsva={hsva}\n            radius={2}\n            style={{\n              marginLeft: 4,\n            }}\n            bgProps={{ style: { background: 'transparent' } }}\n            innerProps={{\n              style: {\n                borderRadius: 2,\n                background: hsvaToRgbaString(hsva),\n                boxShadow: 'rgb(0 0 0 / 15%) 0px 0px 0px 1px inset, rgb(0 0 0 / 25%) 0px 0px 4px inset',\n              },\n            }}\n            pointer={() => <Fragment />}\n          />\n        </div>\n      </div>\n      {editableDisable && (\n        <div style={{ display: 'flex', margin: '0 10px 3px 10px' }}>\n          <EditableInput\n            label=\"Hex\"\n            value={hsvaToHex(hsva).replace(/^#/, '').toLocaleUpperCase()}\n            onChange={(evn, val) => handleHex(val, evn)}\n            style={{ minWidth: 58 }}\n          />\n          <RGBA hsva={hsva} style={{ marginLeft: 6 }} onChange={(result) => handleChange(result.hsva)} />\n        </div>\n      )}\n      {presetColors && presetColors.length > 0 && (\n        <Swatch\n          style={{\n            borderTop: '1px solid rgb(238, 238, 238)',\n            paddingTop: 10,\n            paddingLeft: 10,\n          }}\n          colors={presetColors}\n          color={hsvaToHex(hsva)}\n          onChange={(hsvColor) => handleChange(hsvColor)}\n          rectProps={{\n            style: {\n              marginRight: 10,\n              marginBottom: 10,\n              borderRadius: 3,\n              boxShadow: 'rgb(0 0 0 / 15%) 0px 0px 0px 1px inset',\n              // display: 'flex',\n              // alignItems: 'center',\n              // justifyContent: 'center',\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n});\n\nSketch.displayName = 'Sketch';\n\nexport default Sketch;\n"]},"metadata":{},"sourceType":"module"}