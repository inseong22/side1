{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"prefixCls\", \"className\", \"style\", \"onChange\", \"color\", \"lightness\"];\nimport React from 'react';\nimport { color as handleColor, hexToHsva, hsvaToHsla, hsvaToHslString, validHex, hslStringToHsva } from '@uiw/color-convert';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Slider = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n    prefixCls = 'w-color-slider',\n    className,\n    style,\n    onChange,\n    color,\n    lightness = [80, 65, 50, 35, 20]\n  } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var hsva = typeof color === 'string' && validHex(color) ? hexToHsva(color) : color || {};\n\n  var handleClick = (hslStr, evn) => {\n    onChange && onChange(handleColor(hslStringToHsva(hslStr)), evn);\n  };\n\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: ref,\n    style: _extends({\n      display: 'flex'\n    }, style),\n    className: [prefixCls, className || ''].filter(Boolean).join(' ')\n  }, other, {\n    children: lightness.map((num, idx) => {\n      var hsl = hsvaToHsla(hsva);\n      var hslStr = \"hsl(\" + hsl.h + \", 50%, \" + num + \"%)\";\n      var checked = hslStr === hsvaToHslString(hsva);\n      return /*#__PURE__*/_jsx(\"div\", {\n        style: {\n          paddingLeft: 1,\n          width: 100 / lightness.length + \"%\",\n          boxSizing: 'border-box'\n        },\n        children: /*#__PURE__*/_jsx(\"div\", {\n          onClick: evn => handleClick(hslStr, evn),\n          style: _extends({\n            backgroundColor: hslStr,\n            height: 12,\n            cursor: 'pointer'\n          }, checked ? {\n            borderRadius: 2,\n            transform: 'scale(1, 1.5)'\n          } : {})\n        })\n      }, idx);\n    })\n  }));\n});\nSlider.displayName = 'Slider';\nexport default Slider;","map":{"version":3,"sources":["../src/index.tsx"],"names":["color","Slider","prefixCls","lightness","other","hsva","validHex","hexToHsva","handleClick","onChange","handleColor","hslStringToHsva","display","className","hsl","hsvaToHsla","hslStr","checked","hsvaToHslString","paddingLeft","width","boxSizing","evn","backgroundColor","height","cursor","borderRadius","transform"],"mappings":";;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAEEA,KAAK,IAFP,WAAA,EAAA,SAAA,EAAA,UAAA,EAAA,eAAA,EAAA,QAAA,EAAA,eAAA,QAAA,oBAAA;;AAkBA,IAAMC,MAAM,GAAA,aAAG,KAAK,CAAL,UAAA,CAA8C,CAAA,KAAA,EAAA,GAAA,KAAgB;AAC3E,MAAM;AAAEC,IAAAA,SAAS,GAAX,gBAAA;AAAA,IAAA,SAAA;AAAA,IAAA,KAAA;AAAA,IAAA,QAAA;AAAA,IAAA,KAAA;AAAmEC,IAAAA,SAAS,GAAG,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;AAA/E,MAAN,KAAA;AAAA,MAA8GC,KAA9G,GAAA,6BAAA,CAAA,KAAA,EAAA,SAAA,CAAA;;AACA,MAAMC,IAAI,GAAI,OAAA,KAAA,KAAA,QAAA,IAA6BC,QAAQ,CAArC,KAAqC,CAArC,GAA+CC,SAAS,CAAxD,KAAwD,CAAxD,GAAkEP,KAAK,IAArF,EAAA;;AACA,MAAMQ,WAAW,GAAG,CAAA,MAAA,EAAA,GAAA,KAAuE;AACzFC,IAAAA,QAAQ,IAAIA,QAAQ,CAACC,WAAW,CAACC,eAAe,CAA5B,MAA4B,CAAhB,CAAZ,EAApBF,GAAoB,CAApBA;AADF,GAAA;;AAGA,SAAA,aACE,IAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AACE,IAAA,GAAG,EADL,GAAA;AAEE,IAAA,KAAK,EAAA,QAAA,CAAA;AAAIG,MAAAA,OAAO,EAAE;AAAb,KAAA,EAFP,KAEO,CAFP;AAGE,IAAA,SAAS,EAAE,CAAA,SAAA,EAAYC,SAAS,IAArB,EAAA,EAAA,MAAA,CAAA,OAAA,EAAA,IAAA,CAAA,GAAA;AAHb,GAAA,EAAA,KAAA,EAAA;AAAA,IAAA,QAAA,EAMG,SAAS,CAAT,GAAA,CAAc,CAAA,GAAA,EAAA,GAAA,KAAc;AAC3B,UAAMC,GAAG,GAAGC,UAAU,CAAtB,IAAsB,CAAtB;AACA,UAAMC,MAAM,GAAA,SAAUF,GAAG,CAAb,CAAA,GAAA,SAAA,GAAA,GAAA,GAAZ,IAAA;AACA,UAAMG,OAAO,GAAGD,MAAM,KAAKE,eAAe,CAA1C,IAA0C,CAA1C;AACA,aAAA,aACE,IAAA,CAAA,KAAA,EAAA;AAEE,QAAA,KAAK,EAAE;AACLC,UAAAA,WAAW,EADN,CAAA;AAELC,UAAAA,KAAK,EAAK,MAAMjB,SAAS,CAApB,MAAK,GAFL,GAAA;AAGLkB,UAAAA,SAAS,EAAE;AAHN,SAFT;AAAA,QAAA,QAAA,EAAA,aAQE,IAAA,CAAA,KAAA,EAAA;AACE,UAAA,OAAO,EAAGC,GAAD,IAASd,WAAW,CAAA,MAAA,EAD/B,GAC+B,CAD/B;AAEE,UAAA,KAAK,EAAA,QAAA,CAAA;AACHe,YAAAA,eAAe,EADZ,MAAA;AAEHC,YAAAA,MAAM,EAFH,EAAA;AAGHC,YAAAA,MAAM,EAAE;AAHL,WAAA,EAICR,OAAO,GACP;AACES,YAAAA,YAAY,EADd,CAAA;AAEEC,YAAAA,SAAS,EAAE;AAFb,WADO,GAJR,EAAA;AAFP,SAAA;AARF,OAAA,EADF,GACE,CADF;AAJD,KAAA;AANH,GAAA,CAAA,CADF;AANF,CAAe,CAAf;AA+CA1B,MAAM,CAANA,WAAAA,GAAAA,QAAAA;AAEA,eAAA,MAAA","sourcesContent":["import React from 'react';\nimport {\n  ColorResult,\n  color as handleColor,\n  hexToHsva,\n  hsvaToHsla,\n  hsvaToHslString,\n  validHex,\n  HsvaColor,\n  hslStringToHsva,\n} from '@uiw/color-convert';\n\nexport interface SliderProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange' | 'color'> {\n  prefixCls?: string;\n  color?: string | HsvaColor;\n  lightness?: number[];\n  onChange?: (color: ColorResult, evn: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n}\n\nconst Slider = React.forwardRef<HTMLDivElement, SliderProps>((props, ref) => {\n  const { prefixCls = 'w-color-slider', className, style, onChange, color, lightness = [80, 65, 50, 35, 20], ...other } = props;\n  const hsva = (typeof color === 'string' && validHex(color) ? hexToHsva(color) : color || {}) as HsvaColor;\n  const handleClick = (hslStr: string, evn: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    onChange && onChange(handleColor(hslStringToHsva(hslStr)), evn);\n  };\n  return (\n    <div\n      ref={ref}\n      style={{ display: 'flex', ...style }}\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      {...other}\n    >\n      {lightness.map((num, idx) => {\n        const hsl = hsvaToHsla(hsva);\n        const hslStr = `hsl(${hsl.h}, 50%, ${num}%)`;\n        const checked = hslStr === hsvaToHslString(hsva);\n        return (\n          <div\n            key={idx}\n            style={{\n              paddingLeft: 1,\n              width: `${100 / lightness.length}%`,\n              boxSizing: 'border-box',\n            }}\n          >\n            <div\n              onClick={(evn) => handleClick(hslStr, evn)}\n              style={{\n                backgroundColor: hslStr,\n                height: 12,\n                cursor: 'pointer',\n                ...(checked\n                  ? {\n                      borderRadius: 2,\n                      transform: 'scale(1, 1.5)',\n                    }\n                  : {}),\n              }}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n});\n\nSlider.displayName = 'Slider';\n\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}