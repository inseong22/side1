{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paste-from-office/pastefromoffice\n */\nimport { Plugin } from 'ckeditor5/src/core';\nimport { ClipboardPipeline } from 'ckeditor5/src/clipboard';\nimport GoogleDocsNormalizer from './normalizers/googledocsnormalizer';\nimport MSWordNormalizer from './normalizers/mswordnormalizer';\nimport { parseHtml } from './filters/parse';\n/**\n * The Paste from Office plugin.\n *\n * This plugin handles content pasted from Office apps and transforms it (if necessary)\n * to a valid structure which can then be understood by the editor features.\n *\n * Transformation is made by a set of predefined {@link module:paste-from-office/normalizer~Normalizer normalizers}.\n * This plugin includes following normalizers:\n *   * {@link module:paste-from-office/normalizers/mswordnormalizer~MSWordNormalizer Microsoft Word normalizer}\n *   * {@link module:paste-from-office/normalizers/googledocsnormalizer~GoogleDocsNormalizer Google Docs normalizer}\n *\n * For more information about this feature check the {@glink api/paste-from-office package page}.\n *\n * @extends module:core/plugin~Plugin\n */\n\nexport default class PasteFromOffice extends Plugin {\n  /**\n   * @inheritDoc\n   */\n  static get pluginName() {\n    return 'PasteFromOffice';\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  static get requires() {\n    return [ClipboardPipeline];\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  init() {\n    const editor = this.editor;\n    const viewDocument = editor.editing.view.document;\n    const normalizers = [];\n    normalizers.push(new MSWordNormalizer(viewDocument));\n    normalizers.push(new GoogleDocsNormalizer(viewDocument));\n    editor.plugins.get('ClipboardPipeline').on('inputTransformation', (evt, data) => {\n      if (data._isTransformedWithPasteFromOffice) {\n        return;\n      }\n\n      const htmlString = data.dataTransfer.getData('text/html');\n      const activeNormalizer = normalizers.find(normalizer => normalizer.isActive(htmlString));\n\n      if (activeNormalizer) {\n        data._parsedData = parseHtml(htmlString, viewDocument.stylesProcessor);\n        activeNormalizer.execute(data);\n        data._isTransformedWithPasteFromOffice = true;\n      }\n    }, {\n      priority: 'high'\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/oyejin/Surfee/kiwi/node_modules/@ckeditor/ckeditor5-paste-from-office/src/pastefromoffice.js"],"names":["Plugin","ClipboardPipeline","GoogleDocsNormalizer","MSWordNormalizer","parseHtml","PasteFromOffice","pluginName","requires","init","editor","viewDocument","editing","view","document","normalizers","push","plugins","get","on","evt","data","_isTransformedWithPasteFromOffice","htmlString","dataTransfer","getData","activeNormalizer","find","normalizer","isActive","_parsedData","stylesProcessor","execute","priority"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,SAASA,MAAT,QAAuB,oBAAvB;AACA,SAASC,iBAAT,QAAkC,yBAAlC;AAEA,OAAOC,oBAAP,MAAiC,oCAAjC;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AAEA,SAASC,SAAT,QAA0B,iBAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,eAAN,SAA8BL,MAA9B,CAAqC;AACnD;AACD;AACA;AACsB,aAAVM,UAAU,GAAG;AACvB,WAAO,iBAAP;AACA;AAED;AACD;AACA;;;AACoB,aAARC,QAAQ,GAAG;AACrB,WAAO,CAAEN,iBAAF,CAAP;AACA;AAED;AACD;AACA;;;AACCO,EAAAA,IAAI,GAAG;AACN,UAAMC,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMC,YAAY,GAAGD,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoBC,QAAzC;AACA,UAAMC,WAAW,GAAG,EAApB;AAEAA,IAAAA,WAAW,CAACC,IAAZ,CAAkB,IAAIZ,gBAAJ,CAAsBO,YAAtB,CAAlB;AACAI,IAAAA,WAAW,CAACC,IAAZ,CAAkB,IAAIb,oBAAJ,CAA0BQ,YAA1B,CAAlB;AAEAD,IAAAA,MAAM,CAACO,OAAP,CAAeC,GAAf,CAAoB,mBAApB,EAA0CC,EAA1C,CACC,qBADD,EAEC,CAAEC,GAAF,EAAOC,IAAP,KAAiB;AAChB,UAAKA,IAAI,CAACC,iCAAV,EAA8C;AAC7C;AACA;;AAED,YAAMC,UAAU,GAAGF,IAAI,CAACG,YAAL,CAAkBC,OAAlB,CAA2B,WAA3B,CAAnB;AACA,YAAMC,gBAAgB,GAAGX,WAAW,CAACY,IAAZ,CAAkBC,UAAU,IAAIA,UAAU,CAACC,QAAX,CAAqBN,UAArB,CAAhC,CAAzB;;AAEA,UAAKG,gBAAL,EAAwB;AACvBL,QAAAA,IAAI,CAACS,WAAL,GAAmBzB,SAAS,CAAEkB,UAAF,EAAcZ,YAAY,CAACoB,eAA3B,CAA5B;AAEAL,QAAAA,gBAAgB,CAACM,OAAjB,CAA0BX,IAA1B;AAEAA,QAAAA,IAAI,CAACC,iCAAL,GAAyC,IAAzC;AACA;AACD,KAjBF,EAkBC;AAAEW,MAAAA,QAAQ,EAAE;AAAZ,KAlBD;AAoBA;;AA9CkD","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paste-from-office/pastefromoffice\n */\n\nimport { Plugin } from 'ckeditor5/src/core';\nimport { ClipboardPipeline } from 'ckeditor5/src/clipboard';\n\nimport GoogleDocsNormalizer from './normalizers/googledocsnormalizer';\nimport MSWordNormalizer from './normalizers/mswordnormalizer';\n\nimport { parseHtml } from './filters/parse';\n\n/**\n * The Paste from Office plugin.\n *\n * This plugin handles content pasted from Office apps and transforms it (if necessary)\n * to a valid structure which can then be understood by the editor features.\n *\n * Transformation is made by a set of predefined {@link module:paste-from-office/normalizer~Normalizer normalizers}.\n * This plugin includes following normalizers:\n *   * {@link module:paste-from-office/normalizers/mswordnormalizer~MSWordNormalizer Microsoft Word normalizer}\n *   * {@link module:paste-from-office/normalizers/googledocsnormalizer~GoogleDocsNormalizer Google Docs normalizer}\n *\n * For more information about this feature check the {@glink api/paste-from-office package page}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class PasteFromOffice extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'PasteFromOffice';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ClipboardPipeline ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst viewDocument = editor.editing.view.document;\n\t\tconst normalizers = [];\n\n\t\tnormalizers.push( new MSWordNormalizer( viewDocument ) );\n\t\tnormalizers.push( new GoogleDocsNormalizer( viewDocument ) );\n\n\t\teditor.plugins.get( 'ClipboardPipeline' ).on(\n\t\t\t'inputTransformation',\n\t\t\t( evt, data ) => {\n\t\t\t\tif ( data._isTransformedWithPasteFromOffice ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst htmlString = data.dataTransfer.getData( 'text/html' );\n\t\t\t\tconst activeNormalizer = normalizers.find( normalizer => normalizer.isActive( htmlString ) );\n\n\t\t\t\tif ( activeNormalizer ) {\n\t\t\t\t\tdata._parsedData = parseHtml( htmlString, viewDocument.stylesProcessor );\n\n\t\t\t\t\tactiveNormalizer.execute( data );\n\n\t\t\t\t\tdata._isTransformedWithPasteFromOffice = true;\n\t\t\t\t}\n\t\t\t},\n\t\t\t{ priority: 'high' }\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}