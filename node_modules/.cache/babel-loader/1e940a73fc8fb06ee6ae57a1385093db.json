{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"prefixCls\", \"radius\", \"pointer\", \"className\", \"style\", \"hsva\", \"onChange\"];\nimport React from 'react';\nimport { hsvaToHslaString } from '@uiw/color-convert';\nimport Interactive from '@uiw/react-drag-event-interactive';\nimport { Pointer } from './Pointer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Saturation = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n    prefixCls = 'w-color-saturation',\n    radius = 0,\n    pointer,\n    className,\n    style,\n    hsva,\n    onChange\n  } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var containerStyle = _extends({\n    width: 200,\n    height: 200,\n    borderRadius: radius\n  }, style, {\n    position: 'relative'\n  });\n\n  var handleChange = (interaction, event) => {\n    onChange && onChange({\n      h: hsva.h,\n      s: interaction.left * 100,\n      v: (1 - interaction.top) * 100,\n      a: hsva.a // source: 'hsv',\n\n    });\n  };\n\n  var comProps = {\n    top: 100 - hsva.v + \"%\",\n    left: hsva.s + \"%\",\n    color: hsvaToHslaString(hsva)\n  };\n  return /*#__PURE__*/_jsx(Interactive, _extends({\n    className: [prefixCls, className || ''].filter(Boolean).join(' ')\n  }, other, {\n    style: _extends({\n      position: 'absolute',\n      inset: 0,\n      cursor: 'crosshair',\n      backgroundImage: \"linear-gradient(0deg, #000, transparent), linear-gradient(90deg, #fff, hsl(\" + hsva.h + \", 100%, 50%))\"\n    }, containerStyle),\n    ref: ref,\n    onMove: handleChange,\n    onDown: handleChange,\n    children: /*#__PURE__*/React.createElement(pointer || Pointer, _extends({\n      prefixCls\n    }, comProps))\n  }));\n});\nSaturation.displayName = 'Saturation';\nexport default Saturation;","map":{"version":3,"sources":["../src/index.tsx"],"names":["Saturation","prefixCls","radius","onChange","other","containerStyle","width","height","borderRadius","position","handleChange","h","hsva","s","interaction","v","a","comProps","top","left","color","hsvaToHslaString","className","inset","cursor","backgroundImage","pointer"],"mappings":";;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,gBAAA,QAAA,oBAAA;AACA,OAAA,WAAA,MAAA,mCAAA;AACA,SAAA,OAAA,QAAA,WAAA;;AAYA,IAAMA,UAAU,GAAA,aAAG,KAAK,CAAL,UAAA,CAAkD,CAAA,KAAA,EAAA,GAAA,KAAgB;AACnF,MAAM;AAAEC,IAAAA,SAAS,GAAX,oBAAA;AAAoCC,IAAAA,MAAM,GAA1C,CAAA;AAAA,IAAA,OAAA;AAAA,IAAA,SAAA;AAAA,IAAA,KAAA;AAAA,IAAA,IAAA;AAAiFC,IAAAA;AAAjF,MAAN,KAAA;AAAA,MAAoGC,KAApG,GAAA,6BAAA,CAAA,KAAA,EAAA,SAAA,CAAA;;AACA,MAAMC,cAAmC,GAAA,QAAA,CAAA;AACvCC,IAAAA,KAAK,EADkC,GAAA;AAEvCC,IAAAA,MAAM,EAFiC,GAAA;AAGvCC,IAAAA,YAAY,EAAEN;AAHyB,GAAA,EAAA,KAAA,EAAA;AAKvCO,IAAAA,QAAQ,EAAE;AAL6B,GAAA,CAAzC;;AAQA,MAAMC,YAAY,GAAG,CAAA,WAAA,EAAA,KAAA,KAA8D;AACjFP,IAAAA,QAAQ,IACNA,QAAQ,CAAC;AACPQ,MAAAA,CAAC,EAAEC,IAAI,CADA,CAAA;AAEPC,MAAAA,CAAC,EAAEC,WAAW,CAAXA,IAAAA,GAFI,GAAA;AAGPC,MAAAA,CAAC,EAAE,CAAC,IAAID,WAAW,CAAhB,GAAA,IAHI,GAAA;AAIPE,MAAAA,CAAC,EAAEJ,IAAI,CAJA,CAAA,CAKP;;AALO,KAAD,CADVT;AADF,GAAA;;AAWA,MAAMc,QAAQ,GAAG;AACfC,IAAAA,GAAG,EAAK,MAAMN,IAAI,CAAf,CAAK,GADO,GAAA;AAEfO,IAAAA,IAAI,EAAKP,IAAI,CAAT,CAAKA,GAFM,GAAA;AAGfQ,IAAAA,KAAK,EAAEC,gBAAgB,CAAA,IAAA;AAHR,GAAjB;AAMA,SAAA,aACE,IAAA,CAAA,WAAA,EAAA,QAAA,CAAA;AACE,IAAA,SAAS,EAAE,CAAA,SAAA,EAAYC,SAAS,IAArB,EAAA,EAAA,MAAA,CAAA,OAAA,EAAA,IAAA,CAAA,GAAA;AADb,GAAA,EAAA,KAAA,EAAA;AAGE,IAAA,KAAK,EAAA,QAAA,CAAA;AACHb,MAAAA,QAAQ,EADL,UAAA;AAEHc,MAAAA,KAAK,EAFF,CAAA;AAGHC,MAAAA,MAAM,EAHH,WAAA;AAIHC,MAAAA,eAAe,EAAA,gFAAgFb,IAAI,CAApF,CAAA,GAAA;AAJZ,KAAA,EAHP,cAGO,CAHP;AAUE,IAAA,GAAG,EAVL,GAAA;AAWE,IAAA,MAAM,EAXR,YAAA;AAYE,IAAA,MAAM,EAZR,YAAA;AAAA,IAAA,QAAA,EAAA,aAcG,KAAK,CAAL,aAAA,CAAoBc,OAAO,IAA3B,OAAA,EAAA,QAAA,CAAA;AACCzB,MAAAA;AADD,KAAA,EAAA,QAAA,CAAA;AAdH,GAAA,CAAA,CADF;AA3BF,CAAmB,CAAnB;AAkDAD,UAAU,CAAVA,WAAAA,GAAAA,YAAAA;AAEA,eAAA,UAAA","sourcesContent":["import React from 'react';\nimport { HsvaColor, hsvaToHslaString } from '@uiw/color-convert';\nimport Interactive, { Interaction } from '@uiw/react-drag-event-interactive';\nimport { Pointer, PointerProps } from './Pointer';\n\nexport interface SaturationProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange'> {\n  prefixCls?: string;\n  /** hsva => `{ h: 0, s: 75, v: 82, a: 1 }` */\n  hsva: HsvaColor;\n  radius?: React.CSSProperties['borderRadius'];\n  /** React Component, Custom pointer component */\n  pointer?: ({ prefixCls, left, top, color }: PointerProps) => JSX.Element;\n  onChange?: (newColor: HsvaColor) => void;\n}\n\nconst Saturation = React.forwardRef<HTMLDivElement, SaturationProps>((props, ref) => {\n  const { prefixCls = 'w-color-saturation', radius = 0, pointer, className, style, hsva, onChange, ...other } = props;\n  const containerStyle: React.CSSProperties = {\n    width: 200,\n    height: 200,\n    borderRadius: radius,\n    ...style,\n    position: 'relative',\n  };\n\n  const handleChange = (interaction: Interaction, event: MouseEvent | TouchEvent) => {\n    onChange &&\n      onChange({\n        h: hsva.h,\n        s: interaction.left * 100,\n        v: (1 - interaction.top) * 100,\n        a: hsva.a,\n        // source: 'hsv',\n      });\n  };\n\n  const comProps = {\n    top: `${100 - hsva.v}%`,\n    left: `${hsva.s}%`,\n    color: hsvaToHslaString(hsva),\n  };\n\n  return (\n    <Interactive\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      {...other}\n      style={{\n        position: 'absolute',\n        inset: 0,\n        cursor: 'crosshair',\n        backgroundImage: `linear-gradient(0deg, #000, transparent), linear-gradient(90deg, #fff, hsl(${hsva.h}, 100%, 50%))`,\n        ...containerStyle,\n      }}\n      ref={ref}\n      onMove={handleChange}\n      onDown={handleChange}\n    >\n      {React.createElement(pointer || Pointer, {\n        prefixCls,\n        ...comProps,\n      })}\n    </Interactive>\n  );\n});\n\nSaturation.displayName = 'Saturation';\n\nexport default Saturation;\n"]},"metadata":{},"sourceType":"module"}