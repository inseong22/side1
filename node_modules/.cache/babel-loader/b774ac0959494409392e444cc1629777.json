{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module select-all/selectallediting\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport { getCode, parseKeystroke } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport SelectAllCommand from './selectallcommand';\nconst SELECT_ALL_KEYSTROKE = parseKeystroke('Ctrl+A');\n/**\n * The select all editing feature.\n *\n * It registers the `'selectAll'` {@link module:select-all/selectallcommand~SelectAllCommand command}\n * and the <kbd>Ctrl/⌘</kbd>+<kbd>A</kbd> keystroke listener which executes it.\n *\n * @extends module:core/plugin~Plugin\n */\n\nexport default class SelectAllEditing extends Plugin {\n  /**\n   * @inheritDoc\n   */\n  static get pluginName() {\n    return 'SelectAllEditing';\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  init() {\n    const editor = this.editor;\n    const view = editor.editing.view;\n    const viewDocument = view.document;\n    editor.commands.add('selectAll', new SelectAllCommand(editor));\n    this.listenTo(viewDocument, 'keydown', (eventInfo, domEventData) => {\n      if (getCode(domEventData) === SELECT_ALL_KEYSTROKE) {\n        editor.execute('selectAll');\n        domEventData.preventDefault();\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/oyejin/Surfee/kiwi/node_modules/@ckeditor/ckeditor5-select-all/src/selectallediting.js"],"names":["Plugin","getCode","parseKeystroke","SelectAllCommand","SELECT_ALL_KEYSTROKE","SelectAllEditing","pluginName","init","editor","view","editing","viewDocument","document","commands","add","listenTo","eventInfo","domEventData","execute","preventDefault"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,OAAOA,MAAP,MAAmB,qCAAnB;AACA,SAASC,OAAT,EAAkBC,cAAlB,QAAwC,wCAAxC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA,MAAMC,oBAAoB,GAAGF,cAAc,CAAE,QAAF,CAA3C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMG,gBAAN,SAA+BL,MAA/B,CAAsC;AACpD;AACD;AACA;AACsB,aAAVM,UAAU,GAAG;AACvB,WAAO,kBAAP;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,IAAI,GAAG;AACN,UAAMC,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMC,IAAI,GAAGD,MAAM,CAACE,OAAP,CAAeD,IAA5B;AACA,UAAME,YAAY,GAAGF,IAAI,CAACG,QAA1B;AAEAJ,IAAAA,MAAM,CAACK,QAAP,CAAgBC,GAAhB,CAAqB,WAArB,EAAkC,IAAIX,gBAAJ,CAAsBK,MAAtB,CAAlC;AAEA,SAAKO,QAAL,CAAeJ,YAAf,EAA6B,SAA7B,EAAwC,CAAEK,SAAF,EAAaC,YAAb,KAA+B;AACtE,UAAKhB,OAAO,CAAEgB,YAAF,CAAP,KAA4Bb,oBAAjC,EAAwD;AACvDI,QAAAA,MAAM,CAACU,OAAP,CAAgB,WAAhB;AACAD,QAAAA,YAAY,CAACE,cAAb;AACA;AACD,KALD;AAMA;;AAxBmD","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module select-all/selectallediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport { getCode, parseKeystroke } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport SelectAllCommand from './selectallcommand';\n\nconst SELECT_ALL_KEYSTROKE = parseKeystroke( 'Ctrl+A' );\n\n/**\n * The select all editing feature.\n *\n * It registers the `'selectAll'` {@link module:select-all/selectallcommand~SelectAllCommand command}\n * and the <kbd>Ctrl/⌘</kbd>+<kbd>A</kbd> keystroke listener which executes it.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class SelectAllEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'SelectAllEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\n\t\teditor.commands.add( 'selectAll', new SelectAllCommand( editor ) );\n\n\t\tthis.listenTo( viewDocument, 'keydown', ( eventInfo, domEventData ) => {\n\t\t\tif ( getCode( domEventData ) === SELECT_ALL_KEYSTROKE ) {\n\t\t\t\teditor.execute( 'selectAll' );\n\t\t\t\tdomEventData.preventDefault();\n\t\t\t}\n\t\t} );\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}