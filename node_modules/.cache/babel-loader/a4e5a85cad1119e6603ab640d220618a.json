{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module link/autolink\n */\nimport { Plugin } from 'ckeditor5/src/core';\nimport { Delete, TextWatcher, getLastTextLine } from 'ckeditor5/src/typing';\nimport { addLinkProtocolIfApplicable } from './utils';\nconst MIN_LINK_LENGTH_WITH_SPACE_AT_END = 4; // Ie: \"t.co \" (length 5).\n// This was a tweak from https://gist.github.com/dperini/729294.\n\nconst URL_REG_EXP = new RegExp( // Group 1: Line start or after a space.\n'(^|\\\\s)' + // Group 2: Detected URL (or e-mail).\n'(' + // Protocol identifier or short syntax \"//\"\n// a. Full form http://user@foo.bar.baz:8080/foo/bar.html#baz?foo=bar\n'(' + '(?:(?:(?:https?|ftp):)?\\\\/\\\\/)' + // BasicAuth using user:pass (optional)\n'(?:\\\\S+(?::\\\\S*)?@)?' + '(?:' + // IP address dotted notation octets\n// excludes loopback network 0.0.0.0\n// excludes reserved space >= 224.0.0.0\n// excludes network & broadcast addresses\n// (first & last IP address of each class)\n'(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])' + '(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}' + '(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))' + '|' + '(' + // Do not allow `www.foo` - see https://github.com/ckeditor/ckeditor5/issues/8050.\n'((?!www\\\\.)|(www\\\\.))' + // Host & domain names.\n'(?![-_])(?:[-_a-z0-9\\\\u00a1-\\\\uffff]{1,63}\\\\.)+' + // TLD identifier name.\n'(?:[a-z\\\\u00a1-\\\\uffff]{2,63})' + ')' + ')' + // port number (optional)\n'(?::\\\\d{2,5})?' + // resource path (optional)\n'(?:[/?#]\\\\S*)?' + ')' + '|' + // b. Short form (either www.example.com or example@example.com)\n'(' + '(www.|(\\\\S+@))' + // Host & domain names.\n'((?![-_])(?:[-_a-z0-9\\\\u00a1-\\\\uffff]{1,63}\\\\.))+' + // TLD identifier name.\n'(?:[a-z\\\\u00a1-\\\\uffff]{2,63})' + ')' + ')$', 'i');\nconst URL_GROUP_IN_MATCH = 2;\n/**\n * The autolink plugin.\n *\n * @extends module:core/plugin~Plugin\n */\n\nexport default class AutoLink extends Plugin {\n  /**\n   * @inheritDoc\n   */\n  static get requires() {\n    return [Delete];\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  static get pluginName() {\n    return 'AutoLink';\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  init() {\n    const editor = this.editor;\n    const selection = editor.model.document.selection;\n    selection.on('change:range', () => {\n      // Disable plugin when selection is inside a code block.\n      this.isEnabled = !selection.anchor.parent.is('element', 'codeBlock');\n    });\n\n    this._enableTypingHandling();\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  afterInit() {\n    this._enableEnterHandling();\n\n    this._enableShiftEnterHandling();\n  }\n  /**\n   * Enables autolinking on typing.\n   *\n   * @private\n   */\n\n\n  _enableTypingHandling() {\n    const editor = this.editor;\n    const watcher = new TextWatcher(editor.model, text => {\n      // 1. Detect <kbd>Space</kbd> after a text with a potential link.\n      if (!isSingleSpaceAtTheEnd(text)) {\n        return;\n      } // 2. Check text before last typed <kbd>Space</kbd>.\n\n\n      const url = getUrlAtTextEnd(text.substr(0, text.length - 1));\n\n      if (url) {\n        return {\n          url\n        };\n      }\n    });\n    const input = editor.plugins.get('Input');\n    watcher.on('matched:data', (evt, data) => {\n      const {\n        batch,\n        range,\n        url\n      } = data;\n\n      if (!input.isInput(batch)) {\n        return;\n      }\n\n      const linkEnd = range.end.getShiftedBy(-1); // Executed after a space character.\n\n      const linkStart = linkEnd.getShiftedBy(-url.length);\n      const linkRange = editor.model.createRange(linkStart, linkEnd);\n\n      this._applyAutoLink(url, linkRange);\n    });\n    watcher.bind('isEnabled').to(this);\n  }\n  /**\n   * Enables autolinking on the <kbd>Enter</kbd> key.\n   *\n   * @private\n   */\n\n\n  _enableEnterHandling() {\n    const editor = this.editor;\n    const model = editor.model;\n    const enterCommand = editor.commands.get('enter');\n\n    if (!enterCommand) {\n      return;\n    }\n\n    enterCommand.on('execute', () => {\n      const position = model.document.selection.getFirstPosition();\n\n      if (!position.parent.previousSibling) {\n        return;\n      }\n\n      const rangeToCheck = model.createRangeIn(position.parent.previousSibling);\n\n      this._checkAndApplyAutoLinkOnRange(rangeToCheck);\n    });\n  }\n  /**\n   * Enables autolinking on the <kbd>Shift</kbd>+<kbd>Enter</kbd> keyboard shortcut.\n   *\n   * @private\n   */\n\n\n  _enableShiftEnterHandling() {\n    const editor = this.editor;\n    const model = editor.model;\n    const shiftEnterCommand = editor.commands.get('shiftEnter');\n\n    if (!shiftEnterCommand) {\n      return;\n    }\n\n    shiftEnterCommand.on('execute', () => {\n      const position = model.document.selection.getFirstPosition();\n      const rangeToCheck = model.createRange(model.createPositionAt(position.parent, 0), position.getShiftedBy(-1));\n\n      this._checkAndApplyAutoLinkOnRange(rangeToCheck);\n    });\n  }\n  /**\n   * Checks if the passed range contains a linkable text.\n   *\n   * @param {module:engine/model/range~Range} rangeToCheck\n   * @private\n   */\n\n\n  _checkAndApplyAutoLinkOnRange(rangeToCheck) {\n    const model = this.editor.model;\n    const {\n      text,\n      range\n    } = getLastTextLine(rangeToCheck, model);\n    const url = getUrlAtTextEnd(text);\n\n    if (url) {\n      const linkRange = model.createRange(range.end.getShiftedBy(-url.length), range.end);\n\n      this._applyAutoLink(url, linkRange);\n    }\n  }\n  /**\n   * Applies a link on a given range.\n   *\n   * @param {String} url The URL to link.\n   * @param {module:engine/model/range~Range} range The text range to apply the link attribute to.\n   * @private\n   */\n\n\n  _applyAutoLink(link, range) {\n    const model = this.editor.model;\n    const deletePlugin = this.editor.plugins.get('Delete');\n\n    if (!this.isEnabled || !isLinkAllowedOnRange(range, model)) {\n      return;\n    } // Enqueue change to make undo step.\n\n\n    model.enqueueChange(writer => {\n      const defaultProtocol = this.editor.config.get('link.defaultProtocol');\n      const parsedUrl = addLinkProtocolIfApplicable(link, defaultProtocol);\n      writer.setAttribute('linkHref', parsedUrl, range);\n      model.enqueueChange(() => {\n        deletePlugin.requestUndoOnBackspace();\n      });\n    });\n  }\n\n} // Check if text should be evaluated by the plugin in order to reduce number of RegExp checks on whole text.\n\nfunction isSingleSpaceAtTheEnd(text) {\n  return text.length > MIN_LINK_LENGTH_WITH_SPACE_AT_END && text[text.length - 1] === ' ' && text[text.length - 2] !== ' ';\n}\n\nfunction getUrlAtTextEnd(text) {\n  const match = URL_REG_EXP.exec(text);\n  return match ? match[URL_GROUP_IN_MATCH] : null;\n}\n\nfunction isLinkAllowedOnRange(range, model) {\n  return model.schema.checkAttributeInSelection(model.createSelection(range), 'linkHref');\n}","map":{"version":3,"sources":["/Users/oyejin/Surfee/kiwi/node_modules/@ckeditor/ckeditor5-link/src/autolink.js"],"names":["Plugin","Delete","TextWatcher","getLastTextLine","addLinkProtocolIfApplicable","MIN_LINK_LENGTH_WITH_SPACE_AT_END","URL_REG_EXP","RegExp","URL_GROUP_IN_MATCH","AutoLink","requires","pluginName","init","editor","selection","model","document","on","isEnabled","anchor","parent","is","_enableTypingHandling","afterInit","_enableEnterHandling","_enableShiftEnterHandling","watcher","text","isSingleSpaceAtTheEnd","url","getUrlAtTextEnd","substr","length","input","plugins","get","evt","data","batch","range","isInput","linkEnd","end","getShiftedBy","linkStart","linkRange","createRange","_applyAutoLink","bind","to","enterCommand","commands","position","getFirstPosition","previousSibling","rangeToCheck","createRangeIn","_checkAndApplyAutoLinkOnRange","shiftEnterCommand","createPositionAt","link","deletePlugin","isLinkAllowedOnRange","enqueueChange","writer","defaultProtocol","config","parsedUrl","setAttribute","requestUndoOnBackspace","match","exec","schema","checkAttributeInSelection","createSelection"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module link/autolink\n */\n\nimport { Plugin } from 'ckeditor5/src/core';\nimport { Delete, TextWatcher, getLastTextLine } from 'ckeditor5/src/typing';\n\nimport { addLinkProtocolIfApplicable } from './utils';\n\nconst MIN_LINK_LENGTH_WITH_SPACE_AT_END = 4; // Ie: \"t.co \" (length 5).\n\n// This was a tweak from https://gist.github.com/dperini/729294.\nconst URL_REG_EXP = new RegExp(\n\t// Group 1: Line start or after a space.\n\t'(^|\\\\s)' +\n\t// Group 2: Detected URL (or e-mail).\n\t'(' +\n\t\t// Protocol identifier or short syntax \"//\"\n\t\t// a. Full form http://user@foo.bar.baz:8080/foo/bar.html#baz?foo=bar\n\t\t'(' +\n\t\t\t'(?:(?:(?:https?|ftp):)?\\\\/\\\\/)' +\n\t\t\t// BasicAuth using user:pass (optional)\n\t\t\t'(?:\\\\S+(?::\\\\S*)?@)?' +\n\t\t\t'(?:' +\n\t\t\t\t// IP address dotted notation octets\n\t\t\t\t// excludes loopback network 0.0.0.0\n\t\t\t\t// excludes reserved space >= 224.0.0.0\n\t\t\t\t// excludes network & broadcast addresses\n\t\t\t\t// (first & last IP address of each class)\n\t\t\t\t'(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])' +\n\t\t\t\t'(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}' +\n\t\t\t\t'(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))' +\n\t\t\t\t'|' +\n\t\t\t\t'(' +\n\t\t\t\t\t// Do not allow `www.foo` - see https://github.com/ckeditor/ckeditor5/issues/8050.\n\t\t\t\t\t'((?!www\\\\.)|(www\\\\.))' +\n\t\t\t\t\t// Host & domain names.\n\t\t\t\t\t'(?![-_])(?:[-_a-z0-9\\\\u00a1-\\\\uffff]{1,63}\\\\.)+' +\n\t\t\t\t\t// TLD identifier name.\n\t\t\t\t\t'(?:[a-z\\\\u00a1-\\\\uffff]{2,63})' +\n\t\t\t\t')' +\n\t\t\t')' +\n\t\t\t// port number (optional)\n\t\t\t'(?::\\\\d{2,5})?' +\n\t\t\t// resource path (optional)\n\t\t\t'(?:[/?#]\\\\S*)?' +\n\t\t')' +\n\t\t'|' +\n\t\t// b. Short form (either www.example.com or example@example.com)\n\t\t'(' +\n\t\t\t'(www.|(\\\\S+@))' +\n\t\t\t// Host & domain names.\n\t\t\t'((?![-_])(?:[-_a-z0-9\\\\u00a1-\\\\uffff]{1,63}\\\\.))+' +\n\t\t\t// TLD identifier name.\n\t\t\t'(?:[a-z\\\\u00a1-\\\\uffff]{2,63})' +\n\t\t')' +\n\t')$', 'i' );\n\nconst URL_GROUP_IN_MATCH = 2;\n\n/**\n * The autolink plugin.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class AutoLink extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ Delete ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'AutoLink';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst selection = editor.model.document.selection;\n\n\t\tselection.on( 'change:range', () => {\n\t\t\t// Disable plugin when selection is inside a code block.\n\t\t\tthis.isEnabled = !selection.anchor.parent.is( 'element', 'codeBlock' );\n\t\t} );\n\n\t\tthis._enableTypingHandling();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tafterInit() {\n\t\tthis._enableEnterHandling();\n\t\tthis._enableShiftEnterHandling();\n\t}\n\n\t/**\n\t * Enables autolinking on typing.\n\t *\n\t * @private\n\t */\n\t_enableTypingHandling() {\n\t\tconst editor = this.editor;\n\n\t\tconst watcher = new TextWatcher( editor.model, text => {\n\t\t\t// 1. Detect <kbd>Space</kbd> after a text with a potential link.\n\t\t\tif ( !isSingleSpaceAtTheEnd( text ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// 2. Check text before last typed <kbd>Space</kbd>.\n\t\t\tconst url = getUrlAtTextEnd( text.substr( 0, text.length - 1 ) );\n\n\t\t\tif ( url ) {\n\t\t\t\treturn { url };\n\t\t\t}\n\t\t} );\n\n\t\tconst input = editor.plugins.get( 'Input' );\n\n\t\twatcher.on( 'matched:data', ( evt, data ) => {\n\t\t\tconst { batch, range, url } = data;\n\n\t\t\tif ( !input.isInput( batch ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst linkEnd = range.end.getShiftedBy( -1 ); // Executed after a space character.\n\t\t\tconst linkStart = linkEnd.getShiftedBy( -url.length );\n\n\t\t\tconst linkRange = editor.model.createRange( linkStart, linkEnd );\n\n\t\t\tthis._applyAutoLink( url, linkRange );\n\t\t} );\n\n\t\twatcher.bind( 'isEnabled' ).to( this );\n\t}\n\n\t/**\n\t * Enables autolinking on the <kbd>Enter</kbd> key.\n\t *\n\t * @private\n\t */\n\t_enableEnterHandling() {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst enterCommand = editor.commands.get( 'enter' );\n\n\t\tif ( !enterCommand ) {\n\t\t\treturn;\n\t\t}\n\n\t\tenterCommand.on( 'execute', () => {\n\t\t\tconst position = model.document.selection.getFirstPosition();\n\n\t\t\tif ( !position.parent.previousSibling ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst rangeToCheck = model.createRangeIn( position.parent.previousSibling );\n\n\t\t\tthis._checkAndApplyAutoLinkOnRange( rangeToCheck );\n\t\t} );\n\t}\n\n\t/**\n\t * Enables autolinking on the <kbd>Shift</kbd>+<kbd>Enter</kbd> keyboard shortcut.\n\t *\n\t * @private\n\t */\n\t_enableShiftEnterHandling() {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\n\t\tconst shiftEnterCommand = editor.commands.get( 'shiftEnter' );\n\n\t\tif ( !shiftEnterCommand ) {\n\t\t\treturn;\n\t\t}\n\n\t\tshiftEnterCommand.on( 'execute', () => {\n\t\t\tconst position = model.document.selection.getFirstPosition();\n\n\t\t\tconst rangeToCheck = model.createRange(\n\t\t\t\tmodel.createPositionAt( position.parent, 0 ),\n\t\t\t\tposition.getShiftedBy( -1 )\n\t\t\t);\n\n\t\t\tthis._checkAndApplyAutoLinkOnRange( rangeToCheck );\n\t\t} );\n\t}\n\n\t/**\n\t * Checks if the passed range contains a linkable text.\n\t *\n\t * @param {module:engine/model/range~Range} rangeToCheck\n\t * @private\n\t */\n\t_checkAndApplyAutoLinkOnRange( rangeToCheck ) {\n\t\tconst model = this.editor.model;\n\t\tconst { text, range } = getLastTextLine( rangeToCheck, model );\n\n\t\tconst url = getUrlAtTextEnd( text );\n\n\t\tif ( url ) {\n\t\t\tconst linkRange = model.createRange(\n\t\t\t\trange.end.getShiftedBy( -url.length ),\n\t\t\t\trange.end\n\t\t\t);\n\n\t\t\tthis._applyAutoLink( url, linkRange );\n\t\t}\n\t}\n\n\t/**\n\t * Applies a link on a given range.\n\t *\n\t * @param {String} url The URL to link.\n\t * @param {module:engine/model/range~Range} range The text range to apply the link attribute to.\n\t * @private\n\t */\n\t_applyAutoLink( link, range ) {\n\t\tconst model = this.editor.model;\n\t\tconst deletePlugin = this.editor.plugins.get( 'Delete' );\n\n\t\tif ( !this.isEnabled || !isLinkAllowedOnRange( range, model ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Enqueue change to make undo step.\n\t\tmodel.enqueueChange( writer => {\n\t\t\tconst defaultProtocol = this.editor.config.get( 'link.defaultProtocol' );\n\t\t\tconst parsedUrl = addLinkProtocolIfApplicable( link, defaultProtocol );\n\t\t\twriter.setAttribute( 'linkHref', parsedUrl, range );\n\n\t\t\tmodel.enqueueChange( () => {\n\t\t\t\tdeletePlugin.requestUndoOnBackspace();\n\t\t\t} );\n\t\t} );\n\t}\n}\n\n// Check if text should be evaluated by the plugin in order to reduce number of RegExp checks on whole text.\nfunction isSingleSpaceAtTheEnd( text ) {\n\treturn text.length > MIN_LINK_LENGTH_WITH_SPACE_AT_END && text[ text.length - 1 ] === ' ' && text[ text.length - 2 ] !== ' ';\n}\n\nfunction getUrlAtTextEnd( text ) {\n\tconst match = URL_REG_EXP.exec( text );\n\n\treturn match ? match[ URL_GROUP_IN_MATCH ] : null;\n}\n\nfunction isLinkAllowedOnRange( range, model ) {\n\treturn model.schema.checkAttributeInSelection( model.createSelection( range ), 'linkHref' );\n}\n"]},"metadata":{},"sourceType":"module"}