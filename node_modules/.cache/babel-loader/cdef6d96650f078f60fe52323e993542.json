{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module link/ui/linkactionsview\n */\nimport { ButtonView, View, ViewCollection, FocusCycler } from 'ckeditor5/src/ui';\nimport { FocusTracker, KeystrokeHandler } from 'ckeditor5/src/utils';\nimport { icons } from 'ckeditor5/src/core';\nimport { ensureSafeUrl } from '../utils'; // See: #8833.\n// eslint-disable-next-line ckeditor5-rules/ckeditor-imports\n\nimport '@ckeditor/ckeditor5-ui/theme/components/responsive-form/responsiveform.css';\nimport '../../theme/linkactions.css';\nimport unlinkIcon from '../../theme/icons/unlink.svg';\n/**\n * The link actions view class. This view displays the link preview, allows\n * unlinking or editing the link.\n *\n * @extends module:ui/view~View\n */\n\nexport default class LinkActionsView extends View {\n  /**\n   * @inheritDoc\n   */\n  constructor(locale) {\n    super(locale);\n    const t = locale.t;\n    /**\n     * Tracks information about DOM focus in the actions.\n     *\n     * @readonly\n     * @member {module:utils/focustracker~FocusTracker}\n     */\n\n    this.focusTracker = new FocusTracker();\n    /**\n     * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n     *\n     * @readonly\n     * @member {module:utils/keystrokehandler~KeystrokeHandler}\n     */\n\n    this.keystrokes = new KeystrokeHandler();\n    /**\n     * The href preview view.\n     *\n     * @member {module:ui/view~View}\n     */\n\n    this.previewButtonView = this._createPreviewButton();\n    /**\n     * The unlink button view.\n     *\n     * @member {module:ui/button/buttonview~ButtonView}\n     */\n\n    this.unlinkButtonView = this._createButton(t('Unlink'), unlinkIcon, 'unlink');\n    /**\n     * The edit link button view.\n     *\n     * @member {module:ui/button/buttonview~ButtonView}\n     */\n\n    this.editButtonView = this._createButton(t('Edit link'), icons.pencil, 'edit');\n    /**\n     * The value of the \"href\" attribute of the link to use in the {@link #previewButtonView}.\n     *\n     * @observable\n     * @member {String}\n     */\n\n    this.set('href');\n    /**\n     * A collection of views that can be focused in the view.\n     *\n     * @readonly\n     * @protected\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n    this._focusables = new ViewCollection();\n    /**\n     * Helps cycling over {@link #_focusables} in the view.\n     *\n     * @readonly\n     * @protected\n     * @member {module:ui/focuscycler~FocusCycler}\n     */\n\n    this._focusCycler = new FocusCycler({\n      focusables: this._focusables,\n      focusTracker: this.focusTracker,\n      keystrokeHandler: this.keystrokes,\n      actions: {\n        // Navigate fields backwards using the Shift + Tab keystroke.\n        focusPrevious: 'shift + tab',\n        // Navigate fields forwards using the Tab key.\n        focusNext: 'tab'\n      }\n    });\n    this.setTemplate({\n      tag: 'div',\n      attributes: {\n        class: ['ck', 'ck-link-actions', 'ck-responsive-form'],\n        // https://github.com/ckeditor/ckeditor5-link/issues/90\n        tabindex: '-1'\n      },\n      children: [this.previewButtonView, this.editButtonView, this.unlinkButtonView]\n    });\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  render() {\n    super.render();\n    const childViews = [this.previewButtonView, this.editButtonView, this.unlinkButtonView];\n    childViews.forEach(v => {\n      // Register the view as focusable.\n      this._focusables.add(v); // Register the view in the focus tracker.\n\n\n      this.focusTracker.add(v.element);\n    }); // Start listening for the keystrokes coming from #element.\n\n    this.keystrokes.listenTo(this.element);\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  destroy() {\n    super.destroy();\n    this.focusTracker.destroy();\n    this.keystrokes.destroy();\n  }\n  /**\n   * Focuses the fist {@link #_focusables} in the actions.\n   */\n\n\n  focus() {\n    this._focusCycler.focusFirst();\n  }\n  /**\n   * Creates a button view.\n   *\n   * @private\n   * @param {String} label The button label.\n   * @param {String} icon The button icon.\n   * @param {String} [eventName] An event name that the `ButtonView#execute` event will be delegated to.\n   * @returns {module:ui/button/buttonview~ButtonView} The button view instance.\n   */\n\n\n  _createButton(label, icon, eventName) {\n    const button = new ButtonView(this.locale);\n    button.set({\n      label,\n      icon,\n      tooltip: true\n    });\n    button.delegate('execute').to(this, eventName);\n    return button;\n  }\n  /**\n   * Creates a link href preview button.\n   *\n   * @private\n   * @returns {module:ui/button/buttonview~ButtonView} The button view instance.\n   */\n\n\n  _createPreviewButton() {\n    const button = new ButtonView(this.locale);\n    const bind = this.bindTemplate;\n    const t = this.t;\n    button.set({\n      withText: true,\n      tooltip: t('Open link in new tab')\n    });\n    button.extendTemplate({\n      attributes: {\n        class: ['ck', 'ck-link-actions__preview'],\n        href: bind.to('href', href => href && ensureSafeUrl(href)),\n        target: '_blank',\n        rel: 'noopener noreferrer'\n      }\n    });\n    button.bind('label').to(this, 'href', href => {\n      return href || t('This link has no URL');\n    });\n    button.bind('isEnabled').to(this, 'href', href => !!href);\n    button.template.tag = 'a';\n    button.template.eventListeners = {};\n    return button;\n  }\n\n}\n/**\n * Fired when the {@link #editButtonView} is clicked.\n *\n * @event edit\n */\n\n/**\n * Fired when the {@link #unlinkButtonView} is clicked.\n *\n * @event unlink\n */","map":{"version":3,"sources":["/Users/oyejin/Surfee/kiwi/node_modules/@ckeditor/ckeditor5-link/src/ui/linkactionsview.js"],"names":["ButtonView","View","ViewCollection","FocusCycler","FocusTracker","KeystrokeHandler","icons","ensureSafeUrl","unlinkIcon","LinkActionsView","constructor","locale","t","focusTracker","keystrokes","previewButtonView","_createPreviewButton","unlinkButtonView","_createButton","editButtonView","pencil","set","_focusables","_focusCycler","focusables","keystrokeHandler","actions","focusPrevious","focusNext","setTemplate","tag","attributes","class","tabindex","children","render","childViews","forEach","v","add","element","listenTo","destroy","focus","focusFirst","label","icon","eventName","button","tooltip","delegate","to","bind","bindTemplate","withText","extendTemplate","href","target","rel","template","eventListeners"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module link/ui/linkactionsview\n */\n\nimport { ButtonView, View, ViewCollection, FocusCycler } from 'ckeditor5/src/ui';\nimport { FocusTracker, KeystrokeHandler } from 'ckeditor5/src/utils';\nimport { icons } from 'ckeditor5/src/core';\n\nimport { ensureSafeUrl } from '../utils';\n\n// See: #8833.\n// eslint-disable-next-line ckeditor5-rules/ckeditor-imports\nimport '@ckeditor/ckeditor5-ui/theme/components/responsive-form/responsiveform.css';\nimport '../../theme/linkactions.css';\n\nimport unlinkIcon from '../../theme/icons/unlink.svg';\n\n/**\n * The link actions view class. This view displays the link preview, allows\n * unlinking or editing the link.\n *\n * @extends module:ui/view~View\n */\nexport default class LinkActionsView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst t = locale.t;\n\n\t\t/**\n\t\t * Tracks information about DOM focus in the actions.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\t/**\n\t\t * The href preview view.\n\t\t *\n\t\t * @member {module:ui/view~View}\n\t\t */\n\t\tthis.previewButtonView = this._createPreviewButton();\n\n\t\t/**\n\t\t * The unlink button view.\n\t\t *\n\t\t * @member {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.unlinkButtonView = this._createButton( t( 'Unlink' ), unlinkIcon, 'unlink' );\n\n\t\t/**\n\t\t * The edit link button view.\n\t\t *\n\t\t * @member {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.editButtonView = this._createButton( t( 'Edit link' ), icons.pencil, 'edit' );\n\n\t\t/**\n\t\t * The value of the \"href\" attribute of the link to use in the {@link #previewButtonView}.\n\t\t *\n\t\t * @observable\n\t\t * @member {String}\n\t\t */\n\t\tthis.set( 'href' );\n\n\t\t/**\n\t\t * A collection of views that can be focused in the view.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis._focusables = new ViewCollection();\n\n\t\t/**\n\t\t * Helps cycling over {@link #_focusables} in the view.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/focuscycler~FocusCycler}\n\t\t */\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this._focusables,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate fields backwards using the Shift + Tab keystroke.\n\t\t\t\tfocusPrevious: 'shift + tab',\n\n\t\t\t\t// Navigate fields forwards using the Tab key.\n\t\t\t\tfocusNext: 'tab'\n\t\t\t}\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-link-actions',\n\t\t\t\t\t'ck-responsive-form'\n\t\t\t\t],\n\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-link/issues/90\n\t\t\t\ttabindex: '-1'\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\tthis.previewButtonView,\n\t\t\t\tthis.editButtonView,\n\t\t\t\tthis.unlinkButtonView\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tconst childViews = [\n\t\t\tthis.previewButtonView,\n\t\t\tthis.editButtonView,\n\t\t\tthis.unlinkButtonView\n\t\t];\n\n\t\tchildViews.forEach( v => {\n\t\t\t// Register the view as focusable.\n\t\t\tthis._focusables.add( v );\n\n\t\t\t// Register the view in the focus tracker.\n\t\t\tthis.focusTracker.add( v.element );\n\t\t} );\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tthis.focusTracker.destroy();\n\t\tthis.keystrokes.destroy();\n\t}\n\n\t/**\n\t * Focuses the fist {@link #_focusables} in the actions.\n\t */\n\tfocus() {\n\t\tthis._focusCycler.focusFirst();\n\t}\n\n\t/**\n\t * Creates a button view.\n\t *\n\t * @private\n\t * @param {String} label The button label.\n\t * @param {String} icon The button icon.\n\t * @param {String} [eventName] An event name that the `ButtonView#execute` event will be delegated to.\n\t * @returns {module:ui/button/buttonview~ButtonView} The button view instance.\n\t */\n\t_createButton( label, icon, eventName ) {\n\t\tconst button = new ButtonView( this.locale );\n\n\t\tbutton.set( {\n\t\t\tlabel,\n\t\t\ticon,\n\t\t\ttooltip: true\n\t\t} );\n\n\t\tbutton.delegate( 'execute' ).to( this, eventName );\n\n\t\treturn button;\n\t}\n\n\t/**\n\t * Creates a link href preview button.\n\t *\n\t * @private\n\t * @returns {module:ui/button/buttonview~ButtonView} The button view instance.\n\t */\n\t_createPreviewButton() {\n\t\tconst button = new ButtonView( this.locale );\n\t\tconst bind = this.bindTemplate;\n\t\tconst t = this.t;\n\n\t\tbutton.set( {\n\t\t\twithText: true,\n\t\t\ttooltip: t( 'Open link in new tab' )\n\t\t} );\n\n\t\tbutton.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-link-actions__preview'\n\t\t\t\t],\n\t\t\t\thref: bind.to( 'href', href => href && ensureSafeUrl( href ) ),\n\t\t\t\ttarget: '_blank',\n\t\t\t\trel: 'noopener noreferrer'\n\t\t\t}\n\t\t} );\n\n\t\tbutton.bind( 'label' ).to( this, 'href', href => {\n\t\t\treturn href || t( 'This link has no URL' );\n\t\t} );\n\n\t\tbutton.bind( 'isEnabled' ).to( this, 'href', href => !!href );\n\n\t\tbutton.template.tag = 'a';\n\t\tbutton.template.eventListeners = {};\n\n\t\treturn button;\n\t}\n}\n\n/**\n * Fired when the {@link #editButtonView} is clicked.\n *\n * @event edit\n */\n\n/**\n * Fired when the {@link #unlinkButtonView} is clicked.\n *\n * @event unlink\n */\n"]},"metadata":{},"sourceType":"module"}