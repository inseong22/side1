{"ast":null,"code":"var _jsxFileName = \"/Users/oyejin/Surfee/kiwi/src/components/Response/MadeLandingCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ConfirmCustom from '../../tools/ConfirmCustom';\nimport { dbService, stService } from '../../tools/fbase';\nimport './MadeLandingCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MadeLandingCard({\n  item,\n  index,\n  setNowChecking,\n  history\n}) {\n  _s();\n\n  const [deleteopen, setDeleteOpen] = useState(false);\n\n  const deletePage = async () => {\n    const dbgallery = await dbService.collection(\"made-page\").where(\"urlId\", \"==\", item.setting.urlId).get();\n    let dbgal = dbgallery.docs.map(doc => {\n      return { ...doc.data(),\n        gal_id: doc.id\n      };\n    }); //delete 파일도 같이 지워져야만 한다.\n\n    await dbService.doc(`apply-landing-data/${item.id}`).delete(); // await stService.refFromURL(item.attachmentURL).delete(); // URL만 가지고도 refence를 획득할 수 있게 해준다.\n    // like에서도 지워야됨.\n    // 새로고침 시키기\n\n    alert(\"삭제했습니다.\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-card\",\n    children: [item.urlTitle, /*#__PURE__*/_jsxDEV(Link, {\n      to: {\n        pathname: `/make/edit`,\n        state: {\n          item: item\n        }\n      },\n      children: \"\\uD3B8\\uC9D1\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setDeleteOpen(true);\n      },\n      children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"https://\" + item.setting.urlId + \".surfee.co.kr/#/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => {\n        setNowChecking(index);\n      },\n      children: \"\\uC774 \\uC815\\uBCF4 \\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmCustom, {\n      open: deleteopen,\n      setOpen: setDeleteOpen,\n      message: \"한번 삭제하면 복구할 수 없습니다. 정말 삭제하시겠습니까?\",\n      callback: deletePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MadeLandingCard, \"z92pK0eodZXjsDbtbyU74apMomw=\");\n\n_c = MadeLandingCard;\nexport default MadeLandingCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MadeLandingCard\");","map":{"version":3,"sources":["/Users/oyejin/Surfee/kiwi/src/components/Response/MadeLandingCard.js"],"names":["React","useState","Link","ConfirmCustom","dbService","stService","MadeLandingCard","item","index","setNowChecking","history","deleteopen","setDeleteOpen","deletePage","dbgallery","collection","where","setting","urlId","get","dbgal","docs","map","doc","data","gal_id","id","delete","alert","urlTitle","pathname","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,SAAQC,SAAR,EAAmBC,SAAnB,QAAmC,mBAAnC;AACA,OAAO,uBAAP;;;AAEA,SAASC,eAAT,CAAyB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA,cAAd;AAA8BC,EAAAA;AAA9B,CAAzB,EAAiE;AAAA;;AAC7D,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMY,UAAU,GAAG,YAAY;AAC3B,UAAMC,SAAS,GAAG,MAAMV,SAAS,CAChCW,UADuB,CACZ,WADY,EAEvBC,KAFuB,CAEjB,OAFiB,EAER,IAFQ,EAEFT,IAAI,CAACU,OAAL,CAAaC,KAFX,EAGvBC,GAHuB,EAAxB;AAKA,QAAIC,KAAK,GAAGN,SAAS,CAACO,IAAV,CAAeC,GAAf,CAAmBC,GAAG,IAAI;AAAC,aAAO,EAAC,GAAGA,GAAG,CAACC,IAAJ,EAAJ;AAAgBC,QAAAA,MAAM,EAACF,GAAG,CAACG;AAA3B,OAAP;AAAuC,KAAlE,CAAZ,CAN2B,CAQ3B;;AACA,UAAMtB,SAAS,CAACmB,GAAV,CAAe,sBAAqBhB,IAAI,CAACmB,EAAG,EAA5C,EAA+CC,MAA/C,EAAN,CAT2B,CAU3B;AAEA;AAEA;;AACAC,IAAAA,KAAK,CAAC,SAAD,CAAL;AACH,GAhBD;;AAkBA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,eACKrB,IAAI,CAACsB,QADV,eAEI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AACNC,QAAAA,QAAQ,EAAE,YADJ;AAENC,QAAAA,KAAK,EAAC;AACFxB,UAAAA,IAAI,EAACA;AADH;AAFA,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAUI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAACK,QAAAA,aAAa,CAAC,IAAD,CAAb;AAAoB,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAWI;AAAA,gBAAS,aAAaL,IAAI,CAACU,OAAL,CAAaC,KAA1B,GAAkC;AAA3C;AAAA;AAAA;AAAA;AAAA,YAXJ,eAYI;AAAM,MAAA,OAAO,EAAE,MAAM;AAACT,QAAAA,cAAc,CAACD,KAAD,CAAd;AAAsB,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,eAaI,QAAC,aAAD;AAAe,MAAA,IAAI,EAAEG,UAArB;AAAiC,MAAA,OAAO,EAAEC,aAA1C;AAAyD,MAAA,OAAO,EAAE,kCAAlE;AAAsG,MAAA,QAAQ,EAAEC;AAAhH;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA,KAAgCL,KAAhC;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GAtCQF,e;;KAAAA,e;AAwCT,eAAeA,eAAf","sourcesContent":["import React, {useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport ConfirmCustom from '../../tools/ConfirmCustom'\nimport {dbService, stService} from '../../tools/fbase'\nimport './MadeLandingCard.css'\n\nfunction MadeLandingCard({item, index, setNowChecking, history}) {\n    const [deleteopen, setDeleteOpen] = useState(false)\n\n    const deletePage = async () => {\n        const dbgallery = await dbService\n        .collection(\"made-page\")\n        .where(\"urlId\", \"==\", item.setting.urlId)\n        .get()\n        \n        let dbgal = dbgallery.docs.map(doc => {return({...doc.data(), gal_id:doc.id})})\n        \n        //delete 파일도 같이 지워져야만 한다.\n        await dbService.doc(`apply-landing-data/${item.id}`).delete();\n        // await stService.refFromURL(item.attachmentURL).delete(); // URL만 가지고도 refence를 획득할 수 있게 해준다.\n\n        // like에서도 지워야됨.\n\n        // 새로고침 시키기\n        alert(\"삭제했습니다.\")\n    }\n\n    return (\n        <div className=\"page-card\" key={index}>\n            {item.urlTitle}\n            <Link to={{\n                pathname:`/make/edit`,\n                state:{\n                    item:item\n                }\n                }}>\n                편집하기\n            </Link>\n            <button onClick={() => {setDeleteOpen(true)}}>삭제하기</button>\n            <button>{\"https://\" + item.setting.urlId + \".surfee.co.kr/#/\"}</button>\n            <span onClick={() => {setNowChecking(index)}}>이 정보 보기</span>\n            <ConfirmCustom open={deleteopen} setOpen={setDeleteOpen} message={\"한번 삭제하면 복구할 수 없습니다. 정말 삭제하시겠습니까?\"} callback={deletePage}/>\n        </div>\n    )\n}\n\nexport default MadeLandingCard\n"]},"metadata":{},"sourceType":"module"}