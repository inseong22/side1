{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"prefixCls\", \"hsva\", \"hProps\", \"sProps\", \"lProps\", \"aProps\", \"className\", \"onChange\"];\nimport React from 'react';\nimport EditableInputRGBA from '@uiw/react-color-editable-input-rgba';\nimport { color as handleColor, hsvaToHsla, hslaToHsva } from '@uiw/color-convert';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar EditableInputHSLA = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n    prefixCls = 'w-color-editable-input-hsla',\n    hsva,\n    hProps = {},\n    sProps = {},\n    lProps = {},\n    aProps = {},\n    className,\n    onChange\n  } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var hsla = hsva ? hsvaToHsla(hsva) : {\n    h: 0,\n    s: 0,\n    l: 0,\n    a: 0\n  };\n\n  var handleChange = (value, type, evn) => {\n    if (typeof value === 'number') {\n      if (type === 'h') {\n        if (value < 0) value = 0;\n        if (value > 360) value = 360;\n        onChange && onChange(handleColor(hslaToHsva(_extends({}, hsla, {\n          h: value\n        }))));\n      }\n\n      if (type === 's') {\n        if (value < 0) value = 0;\n        if (value > 100) value = 100;\n        onChange && onChange(handleColor(hslaToHsva(_extends({}, hsla, {\n          s: value\n        }))));\n      }\n\n      if (type === 'l') {\n        if (value < 0) value = 0;\n        if (value > 100) value = 100;\n        onChange && onChange(handleColor(hslaToHsva(_extends({}, hsla, {\n          l: value\n        }))));\n      }\n\n      if (type === 'a') {\n        if (value < 0) value = 0;\n        if (value > 1) value = 1;\n        onChange && onChange(handleColor(hslaToHsva(_extends({}, hsla, {\n          a: value\n        }))));\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsx(EditableInputRGBA, _extends({\n    ref: ref,\n    hsva: hsva,\n    rProps: _extends({\n      label: 'H',\n      value: Math.round(hsla.h)\n    }, hProps, {\n      onChange: (evn, val) => handleChange(val, 'h', evn)\n    }),\n    gProps: _extends({\n      label: 'S',\n      value: Math.round(hsla.s) + \"%\"\n    }, sProps, {\n      onChange: (evn, val) => handleChange(val, 's', evn)\n    }),\n    bProps: _extends({\n      label: 'L',\n      value: Math.round(hsla.l) + \"%\"\n    }, lProps, {\n      onChange: (evn, val) => handleChange(val, 'l', evn)\n    }),\n    aProps: _extends({\n      label: 'A',\n      value: Math.round(hsla.a * 100) / 100\n    }, aProps, {\n      onChange: (evn, val) => handleChange(val, 'a', evn)\n    }),\n    className: [prefixCls, className || ''].filter(Boolean).join(' ')\n  }, other));\n});\nEditableInputHSLA.displayName = 'EditableInputHSLA';\nexport default EditableInputHSLA;","map":{"version":3,"sources":["../src/index.tsx"],"names":["color","EditableInputHSLA","prefixCls","hProps","sProps","lProps","aProps","onChange","other","hsla","hsva","hsvaToHsla","h","s","l","a","handleChange","type","value","handleColor","hslaToHsva","label","Math","className"],"mappings":"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","sourcesContent":["import React from 'react';\nimport EditableInputRGBA, { EditableInputRGBAProps } from '@uiw/react-color-editable-input-rgba';\nimport { HslaColor, color as handleColor, hsvaToHsla, hslaToHsva } from '@uiw/color-convert';\n\nexport interface EditableInputHSLAProps extends Omit<EditableInputRGBAProps, 'rProps' | 'gProps' | 'bProps'> {\n  hProps?: EditableInputRGBAProps['gProps'];\n  sProps?: EditableInputRGBAProps['gProps'];\n  lProps?: EditableInputRGBAProps['gProps'];\n  aProps?: EditableInputRGBAProps['aProps'];\n}\n\nconst EditableInputHSLA = React.forwardRef<HTMLDivElement, EditableInputHSLAProps>((props, ref) => {\n  const {\n    prefixCls = 'w-color-editable-input-hsla',\n    hsva,\n    hProps = {},\n    sProps = {},\n    lProps = {},\n    aProps = {},\n    className,\n    onChange,\n    ...other\n  } = props;\n  const hsla = (hsva ? hsvaToHsla(hsva) : { h: 0, s: 0, l: 0, a: 0 }) as HslaColor;\n  const handleChange = (value: string | number, type: 'h' | 's' | 'l' | 'a', evn: React.ChangeEvent<HTMLInputElement>) => {\n    if (typeof value === 'number') {\n      if (type === 'h') {\n        if (value < 0) value = 0;\n        if (value > 360) value = 360;\n        onChange && onChange(handleColor(hslaToHsva({ ...hsla, h: value })));\n      }\n      if (type === 's') {\n        if (value < 0) value = 0;\n        if (value > 100) value = 100;\n        onChange && onChange(handleColor(hslaToHsva({ ...hsla, s: value })));\n      }\n      if (type === 'l') {\n        if (value < 0) value = 0;\n        if (value > 100) value = 100;\n        onChange && onChange(handleColor(hslaToHsva({ ...hsla, l: value })));\n      }\n      if (type === 'a') {\n        if (value < 0) value = 0;\n        if (value > 1) value = 1;\n        onChange && onChange(handleColor(hslaToHsva({ ...hsla, a: value })));\n      }\n    }\n  };\n  return (\n    <EditableInputRGBA\n      ref={ref}\n      hsva={hsva}\n      rProps={{\n        label: 'H',\n        value: Math.round(hsla.h),\n        ...hProps,\n        onChange: (evn, val) => handleChange(val, 'h', evn),\n      }}\n      gProps={{\n        label: 'S',\n        value: `${Math.round(hsla.s)}%`,\n        ...sProps,\n        onChange: (evn, val) => handleChange(val, 's', evn),\n      }}\n      bProps={{\n        label: 'L',\n        value: `${Math.round(hsla.l)}%`,\n        ...lProps,\n        onChange: (evn, val) => handleChange(val, 'l', evn),\n      }}\n      aProps={{\n        label: 'A',\n        value: Math.round(hsla.a * 100) / 100,\n        ...aProps,\n        onChange: (evn, val) => handleChange(val, 'a', evn),\n      }}\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      {...other}\n    />\n  );\n});\n\nEditableInputHSLA.displayName = 'EditableInputHSLA';\n\nexport default EditableInputHSLA;\n"]},"metadata":{},"sourceType":"module"}