{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"prefixCls\", \"placement\", \"className\", \"style\", \"color\", \"colors\", \"rectProps\", \"onChange\"],\n    _excluded2 = [\"key\"];\nimport React, { Fragment } from 'react';\nimport { color as handleColor, validHex, hexToHsva, hsvaToHex } from '@uiw/color-convert';\nimport Swatch from '@uiw/react-color-swatch';\nimport Point from './Point';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CORLER_HEX = ['#B80000', '#DB3E00', '#FCCB00', '#008B02', '#006B76', '#1273DE', '#004DCF', '#5300EB', '#EB9694', '#FAD0C3', '#FEF3BD', '#C1E1C5', '#BEDADC', '#C4DEF6', '#BED3F3', '#D4C4FB'];\nexport var GithubPlacement;\n\n(function (GithubPlacement) {\n  GithubPlacement[\"Left\"] = \"L\";\n  GithubPlacement[\"LeftTop\"] = \"LT\";\n  GithubPlacement[\"LeftBotton\"] = \"LB\";\n  GithubPlacement[\"Right\"] = \"R\";\n  GithubPlacement[\"RightTop\"] = \"RT\";\n  GithubPlacement[\"RightBotton\"] = \"RB\";\n  GithubPlacement[\"Top\"] = \"T\";\n  GithubPlacement[\"TopRight\"] = \"TR\";\n  GithubPlacement[\"TopLeft\"] = \"TL\";\n  GithubPlacement[\"Botton\"] = \"B\";\n  GithubPlacement[\"BottonLeft\"] = \"BL\";\n  GithubPlacement[\"BottonRight\"] = \"BR\";\n})(GithubPlacement || (GithubPlacement = {}));\n\nvar Github = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n    prefixCls = 'w-color-github',\n    placement = GithubPlacement.TopRight,\n    className,\n    style,\n    color,\n    colors = CORLER_HEX,\n    rectProps = {},\n    onChange\n  } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var hsva = typeof color === 'string' && validHex(color) ? hexToHsva(color) : color;\n  var hex = color ? hsvaToHex(hsva) : '';\n\n  var handleChange = hsv => onChange && onChange(handleColor(hsv));\n\n  var rStyle = {\n    borderStyle: 'solid',\n    position: 'absolute'\n  };\n\n  var arrBrStyl = _extends({}, rStyle);\n\n  var arrStyl = _extends({}, rStyle);\n\n  if (/^T/.test(placement)) {\n    arrBrStyl.borderWidth = '0 8px 8px';\n    arrBrStyl.borderColor = 'transparent transparent rgba(0, 0, 0, 0.15)';\n    arrStyl.borderWidth = '0 7px 7px';\n    arrStyl.borderColor = 'transparent transparent #fff';\n  }\n\n  if (placement === GithubPlacement.TopRight) {\n    arrBrStyl.top = -8;\n    arrStyl.top = -7;\n  }\n\n  if (placement === GithubPlacement.Top) {\n    arrBrStyl.top = -8;\n    arrStyl.top = -7;\n  }\n\n  if (placement === GithubPlacement.TopLeft) {\n    arrBrStyl.top = -8;\n    arrStyl.top = -7;\n  }\n\n  if (/^B/.test(placement)) {\n    arrBrStyl.borderWidth = '8px 8px 0 ';\n    arrBrStyl.borderColor = 'rgba(0, 0, 0, 0.15) transparent transparent';\n    arrStyl.borderWidth = '7px 7px 0px';\n    arrStyl.borderColor = '#fff transparent transparent';\n\n    if (placement === GithubPlacement.BottonRight) {\n      arrBrStyl.top = '100%';\n      arrStyl.top = '100%';\n    }\n\n    if (placement === GithubPlacement.Botton) {\n      arrBrStyl.top = '100%';\n      arrStyl.top = '100%';\n    }\n\n    if (placement === GithubPlacement.BottonLeft) {\n      arrBrStyl.top = '100%';\n      arrStyl.top = '100%';\n    }\n  }\n\n  if (/^(B|T)/.test(placement)) {\n    if (placement === GithubPlacement.Top || placement === GithubPlacement.Botton) {\n      arrBrStyl.left = '50%';\n      arrBrStyl.marginLeft = -8;\n      arrStyl.left = '50%';\n      arrStyl.marginLeft = -7;\n    }\n\n    if (placement === GithubPlacement.TopRight || placement === GithubPlacement.BottonRight) {\n      arrBrStyl.right = 10;\n      arrStyl.right = 11;\n    }\n\n    if (placement === GithubPlacement.TopLeft || placement === GithubPlacement.BottonLeft) {\n      arrBrStyl.left = 7;\n      arrStyl.left = 8;\n    }\n  }\n\n  if (/^L/.test(placement)) {\n    arrBrStyl.borderWidth = '8px 8px 8px 0px';\n    arrBrStyl.borderColor = 'transparent rgba(0, 0, 0, 0.15) transparent transparent';\n    arrStyl.borderWidth = '7px 7px 7px 0px';\n    arrStyl.borderColor = 'transparent #fff transparent transparent';\n    arrBrStyl.left = -8;\n    arrStyl.left = -7;\n  }\n\n  if (/^R/.test(placement)) {\n    arrBrStyl.borderWidth = '8px 0px 8px 8px';\n    arrBrStyl.borderColor = 'transparent transparent transparent rgba(0, 0, 0, 0.15)';\n    arrStyl.borderWidth = '7px 0px 7px 7px';\n    arrStyl.borderColor = 'transparent transparent transparent #fff';\n    arrBrStyl.right = -8;\n    arrStyl.right = -7;\n  }\n\n  if (/^(L|R)/.test(placement)) {\n    if (placement === GithubPlacement.RightTop || placement === GithubPlacement.LeftTop) {\n      arrBrStyl.top = 5;\n      arrStyl.top = 6;\n    }\n\n    if (placement === GithubPlacement.Left || placement === GithubPlacement.Right) {\n      arrBrStyl.top = '50%';\n      arrStyl.top = '50%';\n      arrBrStyl.marginTop = -8;\n      arrStyl.marginTop = -7;\n    }\n\n    if (placement === GithubPlacement.LeftBotton || placement === GithubPlacement.RightBotton) {\n      arrBrStyl.top = '100%';\n      arrStyl.top = '100%';\n      arrBrStyl.marginTop = -21;\n      arrStyl.marginTop = -20;\n    }\n  }\n\n  return /*#__PURE__*/_jsx(Swatch, _extends({\n    ref: ref,\n    className: [prefixCls, className].filter(Boolean).join(' '),\n    colors: colors,\n    color: hex,\n    rectRender: _ref => {\n      var {\n        key\n      } = _ref,\n          props = _objectWithoutPropertiesLoose(_ref, _excluded2);\n\n      return /*#__PURE__*/_jsx(Point, _extends({}, props, {\n        rectProps: rectProps\n      }), key);\n    }\n  }, other, {\n    onChange: handleChange,\n    style: _extends({\n      width: 200,\n      borderRadius: 4,\n      background: '#fff',\n      boxShadow: 'rgb(0 0 0 / 15%) 0px 3px 12px',\n      border: '1px solid rgba(0, 0, 0, 0.2)',\n      position: 'relative',\n      padding: 5\n    }, style),\n    rectProps: {\n      style: {\n        marginRight: 0,\n        marginBottom: 0,\n        borderRadius: 0,\n        height: 25,\n        width: 25\n      }\n    },\n    addonBefore: /*#__PURE__*/_jsxs(Fragment, {\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        style: arrBrStyl\n      }), /*#__PURE__*/_jsx(\"div\", {\n        style: arrStyl\n      })]\n    })\n  }));\n});\nGithub.displayName = 'Github';\nexport default Github;","map":{"version":3,"sources":["../src/index.tsx"],"names":["color","CORLER_HEX","GithubPlacement","Github","prefixCls","placement","colors","rectProps","onChange","other","hsva","validHex","hexToHsva","hex","hsvaToHex","handleChange","hsv","handleColor","rStyle","borderStyle","position","arrBrStyl","arrStyl","key","props","width","borderRadius","background","boxShadow","border","padding","style","marginRight","marginBottom","height"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { HsvaColor, ColorResult, color as handleColor, validHex, hexToHsva, hsvaToHex } from '@uiw/color-convert';\nimport Swatch, { SwatchProps, SwatchRectRenderProps } from '@uiw/react-color-swatch';\nimport Point from './Point';\n\nconst CORLER_HEX = [\n  '#B80000',\n  '#DB3E00',\n  '#FCCB00',\n  '#008B02',\n  '#006B76',\n  '#1273DE',\n  '#004DCF',\n  '#5300EB',\n  '#EB9694',\n  '#FAD0C3',\n  '#FEF3BD',\n  '#C1E1C5',\n  '#BEDADC',\n  '#C4DEF6',\n  '#BED3F3',\n  '#D4C4FB',\n];\n\nexport enum GithubPlacement {\n  Left = 'L',\n  LeftTop = 'LT',\n  LeftBotton = 'LB',\n  Right = 'R',\n  RightTop = 'RT',\n  RightBotton = 'RB',\n  Top = 'T',\n  TopRight = 'TR',\n  TopLeft = 'TL',\n  Botton = 'B',\n  BottonLeft = 'BL',\n  BottonRight = 'BR',\n}\n\nexport interface GithubRectRenderProps extends SwatchRectRenderProps {\n  arrow?: JSX.Element;\n}\n\nexport interface GithubProps extends Omit<SwatchProps, 'color' | 'onChange'> {\n  placement?: GithubPlacement;\n  color?: string | HsvaColor;\n  onChange?: (color: ColorResult) => void;\n}\n\nconst Github = React.forwardRef<HTMLDivElement, GithubProps>((props, ref) => {\n  const {\n    prefixCls = 'w-color-github',\n    placement = GithubPlacement.TopRight,\n    className,\n    style,\n    color,\n    colors = CORLER_HEX,\n    rectProps = {},\n    onChange,\n    ...other\n  } = props;\n  const hsva = (typeof color === 'string' && validHex(color) ? hexToHsva(color) : color) as HsvaColor;\n  const hex = color ? hsvaToHex(hsva) : '';\n  const handleChange = (hsv: HsvaColor) => onChange && onChange(handleColor(hsv));\n\n  const rStyle: React.CSSProperties = {\n    borderStyle: 'solid',\n    position: 'absolute',\n  };\n  let arrBrStyl: React.CSSProperties = { ...rStyle };\n  let arrStyl: React.CSSProperties = { ...rStyle };\n  if (/^T/.test(placement)) {\n    arrBrStyl.borderWidth = '0 8px 8px';\n    arrBrStyl.borderColor = 'transparent transparent rgba(0, 0, 0, 0.15)';\n    arrStyl.borderWidth = '0 7px 7px';\n    arrStyl.borderColor = 'transparent transparent #fff';\n  }\n  if (placement === GithubPlacement.TopRight) {\n    arrBrStyl.top = -8;\n    arrStyl.top = -7;\n  }\n  if (placement === GithubPlacement.Top) {\n    arrBrStyl.top = -8;\n    arrStyl.top = -7;\n  }\n  if (placement === GithubPlacement.TopLeft) {\n    arrBrStyl.top = -8;\n    arrStyl.top = -7;\n  }\n  if (/^B/.test(placement)) {\n    arrBrStyl.borderWidth = '8px 8px 0 ';\n    arrBrStyl.borderColor = 'rgba(0, 0, 0, 0.15) transparent transparent';\n    arrStyl.borderWidth = '7px 7px 0px';\n    arrStyl.borderColor = '#fff transparent transparent';\n    if (placement === GithubPlacement.BottonRight) {\n      arrBrStyl.top = '100%';\n      arrStyl.top = '100%';\n    }\n    if (placement === GithubPlacement.Botton) {\n      arrBrStyl.top = '100%';\n      arrStyl.top = '100%';\n    }\n    if (placement === GithubPlacement.BottonLeft) {\n      arrBrStyl.top = '100%';\n      arrStyl.top = '100%';\n    }\n  }\n  if (/^(B|T)/.test(placement)) {\n    if (placement === GithubPlacement.Top || placement === GithubPlacement.Botton) {\n      arrBrStyl.left = '50%';\n      arrBrStyl.marginLeft = -8;\n      arrStyl.left = '50%';\n      arrStyl.marginLeft = -7;\n    }\n    if (placement === GithubPlacement.TopRight || placement === GithubPlacement.BottonRight) {\n      arrBrStyl.right = 10;\n      arrStyl.right = 11;\n    }\n    if (placement === GithubPlacement.TopLeft || placement === GithubPlacement.BottonLeft) {\n      arrBrStyl.left = 7;\n      arrStyl.left = 8;\n    }\n  }\n  if (/^L/.test(placement)) {\n    arrBrStyl.borderWidth = '8px 8px 8px 0px';\n    arrBrStyl.borderColor = 'transparent rgba(0, 0, 0, 0.15) transparent transparent';\n    arrStyl.borderWidth = '7px 7px 7px 0px';\n    arrStyl.borderColor = 'transparent #fff transparent transparent';\n    arrBrStyl.left = -8;\n    arrStyl.left = -7;\n  }\n  if (/^R/.test(placement)) {\n    arrBrStyl.borderWidth = '8px 0px 8px 8px';\n    arrBrStyl.borderColor = 'transparent transparent transparent rgba(0, 0, 0, 0.15)';\n    arrStyl.borderWidth = '7px 0px 7px 7px';\n    arrStyl.borderColor = 'transparent transparent transparent #fff';\n    arrBrStyl.right = -8;\n    arrStyl.right = -7;\n  }\n  if (/^(L|R)/.test(placement)) {\n    if (placement === GithubPlacement.RightTop || placement === GithubPlacement.LeftTop) {\n      arrBrStyl.top = 5;\n      arrStyl.top = 6;\n    }\n    if (placement === GithubPlacement.Left || placement === GithubPlacement.Right) {\n      arrBrStyl.top = '50%';\n      arrStyl.top = '50%';\n      arrBrStyl.marginTop = -8;\n      arrStyl.marginTop = -7;\n    }\n    if (placement === GithubPlacement.LeftBotton || placement === GithubPlacement.RightBotton) {\n      arrBrStyl.top = '100%';\n      arrStyl.top = '100%';\n      arrBrStyl.marginTop = -21;\n      arrStyl.marginTop = -20;\n    }\n  }\n  return (\n    <Swatch\n      ref={ref}\n      className={[prefixCls, className].filter(Boolean).join(' ')}\n      colors={colors}\n      color={hex}\n      rectRender={({ key, ...props }) => {\n        return <Point key={key} {...props} rectProps={rectProps} />;\n      }}\n      {...other}\n      onChange={handleChange}\n      style={{\n        width: 200,\n        borderRadius: 4,\n        background: '#fff',\n        boxShadow: 'rgb(0 0 0 / 15%) 0px 3px 12px',\n        border: '1px solid rgba(0, 0, 0, 0.2)',\n        position: 'relative',\n        padding: 5,\n        ...style,\n      }}\n      rectProps={{\n        style: {\n          marginRight: 0,\n          marginBottom: 0,\n          borderRadius: 0,\n          height: 25,\n          width: 25,\n        },\n      }}\n      addonBefore={\n        <Fragment>\n          <div style={arrBrStyl} />\n          <div style={arrStyl} />\n        </Fragment>\n      }\n    />\n  );\n});\n\nGithub.displayName = 'Github';\n\nexport default Github;\n"]},"metadata":{},"sourceType":"module"}