{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontbackgroundcolor/fontbackgroundcolorediting\n */\nimport { Plugin } from 'ckeditor5/src/core';\nimport { addBackgroundRules } from 'ckeditor5/src/engine';\nimport FontBackgroundColorCommand from './fontbackgroundcolorcommand';\nimport { FONT_BACKGROUND_COLOR, renderDowncastElement, renderUpcastAttribute } from '../utils';\n/**\n * The font background color editing feature.\n *\n * It introduces the {@link module:font/fontbackgroundcolor/fontbackgroundcolorcommand~FontBackgroundColorCommand command} and\n * the `fontBackgroundColor` attribute in the {@link module:engine/model/model~Model model} which renders\n * in the {@link module:engine/view/view view} as a `<span>` element (`<span style=\"background-color: ...\">`),\n * depending on the {@link module:font/fontbackgroundcolor~FontBackgroundColorConfig configuration}.\n *\n * @extends module:core/plugin~Plugin\n */\n\nexport default class FontBackgroundColorEditing extends Plugin {\n  /**\n   * @inheritDoc\n   */\n  static get pluginName() {\n    return 'FontBackgroundColorEditing';\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  constructor(editor) {\n    super(editor);\n    editor.config.define(FONT_BACKGROUND_COLOR, {\n      colors: [{\n        color: 'hsl(0, 0%, 0%)',\n        label: 'Black'\n      }, {\n        color: 'hsl(0, 0%, 30%)',\n        label: 'Dim grey'\n      }, {\n        color: 'hsl(0, 0%, 60%)',\n        label: 'Grey'\n      }, {\n        color: 'hsl(0, 0%, 90%)',\n        label: 'Light grey'\n      }, {\n        color: 'hsl(0, 0%, 100%)',\n        label: 'White',\n        hasBorder: true\n      }, {\n        color: 'hsl(0, 75%, 60%)',\n        label: 'Red'\n      }, {\n        color: 'hsl(30, 75%, 60%)',\n        label: 'Orange'\n      }, {\n        color: 'hsl(60, 75%, 60%)',\n        label: 'Yellow'\n      }, {\n        color: 'hsl(90, 75%, 60%)',\n        label: 'Light green'\n      }, {\n        color: 'hsl(120, 75%, 60%)',\n        label: 'Green'\n      }, {\n        color: 'hsl(150, 75%, 60%)',\n        label: 'Aquamarine'\n      }, {\n        color: 'hsl(180, 75%, 60%)',\n        label: 'Turquoise'\n      }, {\n        color: 'hsl(210, 75%, 60%)',\n        label: 'Light blue'\n      }, {\n        color: 'hsl(240, 75%, 60%)',\n        label: 'Blue'\n      }, {\n        color: 'hsl(270, 75%, 60%)',\n        label: 'Purple'\n      }],\n      columns: 5\n    });\n    editor.data.addStyleProcessorRules(addBackgroundRules);\n    editor.conversion.for('upcast').elementToAttribute({\n      view: {\n        name: 'span',\n        styles: {\n          'background-color': /[\\s\\S]+/\n        }\n      },\n      model: {\n        key: FONT_BACKGROUND_COLOR,\n        value: renderUpcastAttribute('background-color')\n      }\n    });\n    editor.conversion.for('downcast').attributeToElement({\n      model: FONT_BACKGROUND_COLOR,\n      view: renderDowncastElement('background-color')\n    });\n    editor.commands.add(FONT_BACKGROUND_COLOR, new FontBackgroundColorCommand(editor)); // Allow the font backgroundColor attribute on text nodes.\n\n    editor.model.schema.extend('$text', {\n      allowAttributes: FONT_BACKGROUND_COLOR\n    });\n    editor.model.schema.setAttributeProperties(FONT_BACKGROUND_COLOR, {\n      isFormatting: true,\n      copyOnEnter: true\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/oyejin/Surfee/kiwi/node_modules/@ckeditor/ckeditor5-font/src/fontbackgroundcolor/fontbackgroundcolorediting.js"],"names":["Plugin","addBackgroundRules","FontBackgroundColorCommand","FONT_BACKGROUND_COLOR","renderDowncastElement","renderUpcastAttribute","FontBackgroundColorEditing","pluginName","constructor","editor","config","define","colors","color","label","hasBorder","columns","data","addStyleProcessorRules","conversion","for","elementToAttribute","view","name","styles","model","key","value","attributeToElement","commands","add","schema","extend","allowAttributes","setAttributeProperties","isFormatting","copyOnEnter"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontbackgroundcolor/fontbackgroundcolorediting\n */\n\nimport { Plugin } from 'ckeditor5/src/core';\nimport { addBackgroundRules } from 'ckeditor5/src/engine';\n\nimport FontBackgroundColorCommand from './fontbackgroundcolorcommand';\nimport { FONT_BACKGROUND_COLOR, renderDowncastElement, renderUpcastAttribute } from '../utils';\n\n/**\n * The font background color editing feature.\n *\n * It introduces the {@link module:font/fontbackgroundcolor/fontbackgroundcolorcommand~FontBackgroundColorCommand command} and\n * the `fontBackgroundColor` attribute in the {@link module:engine/model/model~Model model} which renders\n * in the {@link module:engine/view/view view} as a `<span>` element (`<span style=\"background-color: ...\">`),\n * depending on the {@link module:font/fontbackgroundcolor~FontBackgroundColorConfig configuration}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class FontBackgroundColorEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'FontBackgroundColorEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\teditor.config.define( FONT_BACKGROUND_COLOR, {\n\t\t\tcolors: [\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 0%, 0%)',\n\t\t\t\t\tlabel: 'Black'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 0%, 30%)',\n\t\t\t\t\tlabel: 'Dim grey'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 0%, 60%)',\n\t\t\t\t\tlabel: 'Grey'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 0%, 90%)',\n\t\t\t\t\tlabel: 'Light grey'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 0%, 100%)',\n\t\t\t\t\tlabel: 'White',\n\t\t\t\t\thasBorder: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 75%, 60%)',\n\t\t\t\t\tlabel: 'Red'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(30, 75%, 60%)',\n\t\t\t\t\tlabel: 'Orange'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(60, 75%, 60%)',\n\t\t\t\t\tlabel: 'Yellow'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(90, 75%, 60%)',\n\t\t\t\t\tlabel: 'Light green'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(120, 75%, 60%)',\n\t\t\t\t\tlabel: 'Green'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(150, 75%, 60%)',\n\t\t\t\t\tlabel: 'Aquamarine'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(180, 75%, 60%)',\n\t\t\t\t\tlabel: 'Turquoise'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(210, 75%, 60%)',\n\t\t\t\t\tlabel: 'Light blue'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(240, 75%, 60%)',\n\t\t\t\t\tlabel: 'Blue'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(270, 75%, 60%)',\n\t\t\t\t\tlabel: 'Purple'\n\t\t\t\t}\n\t\t\t],\n\t\t\tcolumns: 5\n\t\t} );\n\n\t\teditor.data.addStyleProcessorRules( addBackgroundRules );\n\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n\t\t\tview: {\n\t\t\t\tname: 'span',\n\t\t\t\tstyles: {\n\t\t\t\t\t'background-color': /[\\s\\S]+/\n\t\t\t\t}\n\t\t\t},\n\t\t\tmodel: {\n\t\t\t\tkey: FONT_BACKGROUND_COLOR,\n\t\t\t\tvalue: renderUpcastAttribute( 'background-color' )\n\t\t\t}\n\t\t} );\n\n\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t\t\tmodel: FONT_BACKGROUND_COLOR,\n\t\t\tview: renderDowncastElement( 'background-color' )\n\t\t} );\n\n\t\teditor.commands.add( FONT_BACKGROUND_COLOR, new FontBackgroundColorCommand( editor ) );\n\n\t\t// Allow the font backgroundColor attribute on text nodes.\n\t\teditor.model.schema.extend( '$text', { allowAttributes: FONT_BACKGROUND_COLOR } );\n\n\t\teditor.model.schema.setAttributeProperties( FONT_BACKGROUND_COLOR, {\n\t\t\tisFormatting: true,\n\t\t\tcopyOnEnter: true\n\t\t} );\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}