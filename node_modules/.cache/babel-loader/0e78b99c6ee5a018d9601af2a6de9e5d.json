{"ast":null,"code":"var _jsxFileName = \"/Users/oyejin/Surfee/kiwi/src/components/Make/SectionTypes/HeroSection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState, useRef } from 'react';\nimport Editor from '../tools/Editor';\nimport { MyContext } from '../../../pages/Make/MakePageV2';\nimport './DetailSection.css';\nimport appstorebutton from '../../../tools/img/appstorebutton.png';\nimport playstorebutton from '../../../tools/img/playstorebutton.png';\nimport './HeroSection.css';\nimport Popover from '@mui/material/Popover';\nimport { ImageAdd } from '@styled-icons/boxicons-regular';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction HeroSection({\n  content\n}) {\n  _s();\n\n  const {\n    state,\n    action\n  } = useContext(MyContext); //ContextAPI로 state와 action을 넘겨받는다.\n\n  const imgRef = useRef(null);\n  const [imageShow, setImageShow] = useState(null);\n  const [align, setAlign] = useState('center');\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined; // 템플릿 1 텍스트의 경우\n\n  const changeText = data => {\n    let newContents = state.contents.map((item, index) => index === state.secNum ? { ...item,\n      titles: { ...item.titles,\n        title: data\n      }\n    } : item);\n    action.setContents(newContents);\n  }; // 템플릿 1 텍스트의 경우\n\n\n  const changeDesc = data => {\n    let newContents = state.contents.map((item, index) => index === state.secNum ? { ...item,\n      desc: data\n    } : item);\n    action.setContents(newContents);\n  }; // 템플릿 1 텍스트의 경우\n\n\n  const changeButtonText = data => {\n    let newContents = state.contents.map((item, index) => index === state.secNum ? { ...item,\n      button: { ...item.button,\n        title: data\n      }\n    } : item);\n    action.setContents(newContents);\n  }; // 템플릿 2 이미지의 경우에는\n\n\n  const onChangeImage = e => {\n    let newContents = JSON.parse(JSON.stringify(state.contents));\n    const {\n      target: {\n        files\n      }\n    } = e;\n    const oneFile = files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = finishedEvent => {\n      // 로딩이 끝날 때 실행한다는 뜻.\n      const {\n        currentTarget: {\n          result\n        }\n      } = finishedEvent; // newContents = state.contents.map((item, index) => index === state.secNum ? {...item, image: {...item.image, attachment : result}} : item)\n\n      newContents[state.secNum].image.attachment = result;\n    };\n\n    reader.readAsDataURL(oneFile);\n    action.setContents(newContents);\n  };\n\n  const returnImage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image__container centera\",\n      children: [/*#__PURE__*/_jsxDEV(Popover, {\n        id: Boolean(imageShow) ? 'simple-popover' : undefined // 수정\n        ,\n        open: Boolean(imageShow) // 수정\n        ,\n        anchorEl: imageShow // 수정\n        ,\n        onClose: () => setImageShow(null) // 수정\n        ,\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'left'\n        },\n        transformOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pop-balloon\",\n          style: {\n            width: '100px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"balloon-item\",\n            children: [/*#__PURE__*/_jsxDEV(ImageAdd, {\n              color: \"black\",\n              width: 30\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), imgRef.current && /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"image-input\",\n              type: \"file\",\n              accept: \"image/*\",\n              id: \"file\",\n              onChange: e => onChangeImage(e),\n              style: {\n                width: '20px',\n                height: '20px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"balloon-item\",\n            onClick: () => {},\n            children: \"\\uB3D9\\uC601\\uC0C1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), content.image.attachment === '' ? /*#__PURE__*/_jsxDEV(\"img\", {\n        ref: imgRef,\n        src: playstorebutton,\n        className: \"image\",\n        onClick: e => {\n          setImageShow(e.currentTarget);\n        },\n        style: {\n          borderRadius: `${content.image.border}%`,\n          width: `${content.image.size}px`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        ref: imgRef,\n        src: `${content.image.attachment}`,\n        className: \"image\",\n        onClick: e => setImageShow(e.currentTarget),\n        style: {\n          borderRadius: `${content.image.border}%`,\n          width: `${content.image.size}px`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  };\n\n  const returnButton = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button__container\",\n        style: {\n          border: `${anchorEl !== null ? '1px dashed rgba(0,0,0,0.4)' : ''}`\n        },\n        children: content.button.first && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: content.button.link.includes(\"play.google.com/store\") ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: playstorebutton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 82\n          }, this) : content.button.link.includes(\"apps.apple.com/\") ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: appstorebutton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 75\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-button\",\n            style: {\n              backgroundColor: `${content.button.backgroundColor}`\n            },\n            children: \"\\uBC84\\uD2BC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  };\n\n  const returnTextAndButton = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"text-input\",\n        value: content.title,\n        onChange: e => {\n          changeText(e.currentTarget.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"text-input\",\n        value: content.desc,\n        onChange: e => {\n          changeDesc(e.currentTarget.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), returnButton()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: `${content.paddingTop}% 0% ${content.paddingBottom}% 0%`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"template\",\n      style: {\n        flexDirection: `${state.isPhone ? 'column' : 'row'}`\n      },\n      children: [returnTextAndButton(), returnImage()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HeroSection, \"ZAjnh/GhDI3eS+ElF/5+9/YYYGQ=\");\n\n_c = HeroSection;\nexport default HeroSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeroSection\");","map":{"version":3,"sources":["/Users/oyejin/Surfee/kiwi/src/components/Make/SectionTypes/HeroSection.js"],"names":["React","useContext","useEffect","useState","useRef","Editor","MyContext","appstorebutton","playstorebutton","Popover","ImageAdd","HeroSection","content","state","action","imgRef","imageShow","setImageShow","align","setAlign","anchorEl","setAnchorEl","open","Boolean","id","undefined","changeText","data","newContents","contents","map","item","index","secNum","titles","title","setContents","changeDesc","desc","changeButtonText","button","onChangeImage","e","JSON","parse","stringify","target","files","oneFile","reader","FileReader","onloadend","finishedEvent","currentTarget","result","image","attachment","readAsDataURL","returnImage","vertical","horizontal","width","current","height","borderRadius","border","size","returnButton","first","link","includes","backgroundColor","returnTextAndButton","value","padding","paddingTop","paddingBottom","flexDirection","isPhone"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState, useRef } from 'react'\nimport Editor from '../tools/Editor'\n\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport './DetailSection.css'\n\nimport appstorebutton from '../../../tools/img/appstorebutton.png'\nimport playstorebutton from '../../../tools/img/playstorebutton.png'\nimport './HeroSection.css'\n\nimport Popover from '@mui/material/Popover';\nimport {ImageAdd} from '@styled-icons/boxicons-regular';\n\nfunction HeroSection({content}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const imgRef = useRef(null)\n    const [imageShow, setImageShow] = useState(null);\n    const [align, setAlign] = useState('center');\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    // 템플릿 1 텍스트의 경우\n    const changeText = ( data ) => {\n        let newContents = state.contents.map((item, index) => index === state.secNum ? {...item, titles: {...item.titles, title : data}} : item)\n        action.setContents(newContents);\n    }\n    \n    // 템플릿 1 텍스트의 경우\n    const changeDesc = ( data ) => {\n        let newContents = state.contents.map((item, index) => index === state.secNum ? {...item, desc : data } : item)\n        action.setContents(newContents);\n    }\n\n    // 템플릿 1 텍스트의 경우\n    const changeButtonText = ( data ) => {\n        let newContents = state.contents.map((item, index) => index === state.secNum ? {...item, button: {...item.button, title : data}} : item)\n        action.setContents(newContents);\n    }\n\n    // 템플릿 2 이미지의 경우에는\n    const onChangeImage = e => {\n        let newContents = JSON.parse(JSON.stringify(state.contents))\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            const {currentTarget:{result}} = finishedEvent;\n            // newContents = state.contents.map((item, index) => index === state.secNum ? {...item, image: {...item.image, attachment : result}} : item)\n            newContents[state.secNum].image.attachment = result;\n        }\n        reader.readAsDataURL(oneFile);\n        action.setContents(newContents);\n    }\n\n    const returnImage = () => {\n        return(\n            <div className=\"image__container centera\">\n                <Popover\n                    id={Boolean(imageShow) ? 'simple-popover' : undefined} // 수정\n                    open={Boolean(imageShow)} // 수정\n                    anchorEl={imageShow} // 수정\n                    onClose={() => setImageShow(null)} // 수정\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left',\n                    }}\n                    transformOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                    }}>\n                    <div className=\"pop-balloon\" style={{width:'100px'}}>\n                        <span className=\"balloon-item\">\n                            <ImageAdd color=\"black\" width={30} />\n                            { imgRef.current && \n                                <input className=\"image-input\" type=\"file\" accept=\"image/*\" id=\"file\"\n                                    onChange={ e => onChangeImage(e) } style={{width:'20px', height:'20px'}}/> }\n                        </span>\n                        <span className=\"balloon-item\" onClick={() => {}}>\n                            동영상\n                        </span>\n                    </div>\n                </Popover>\n                {content.image.attachment === '' ?  \n                    <img ref={imgRef} src={playstorebutton} className=\"image\" onClick={(e) =>{ setImageShow(e.currentTarget)}} style={{borderRadius:`${content.image.border}%`, width:`${content.image.size}px`}} />\n                    : \n                    <img ref={imgRef} src={`${content.image.attachment}`} className=\"image\" onClick={(e) => setImageShow(e.currentTarget)} style={{borderRadius:`${content.image.border}%`, width:`${content.image.size}px`}}/>\n                }\n            </div>\n        )\n    }\n\n    const returnButton = () => {\n        return(\n            <>            \n            <div className=\"button__container\" style={{border:`${ anchorEl !== null ? '1px dashed rgba(0,0,0,0.4)' : '' }`}}>\n                {\n                    content.button.first && \n                    <div>                 \n                        {content.button.link.includes(\"play.google.com/store\") ? <img src={playstorebutton} />\n                        : \n                        content.button.link.includes(\"apps.apple.com/\") ? <img src={appstorebutton} />\n                        : \n                        <button className=\"action-button\" style={{backgroundColor:`${content.button.backgroundColor}`}}>\n                            버튼\n                        </button>\n                        }\n                    </div>\n                }\n            </div>\n            </>\n        )\n    }\n\n    const returnTextAndButton = () => {\n        return(\n            <div className=\"text__container\">\n                <input \n                    className=\"text-input\"\n                    value={content.title}\n                    onChange={(e) => {\n                        changeText(e.currentTarget.value);\n                    }}\n                />\n                <input \n                    className=\"text-input\"\n                    value={content.desc}\n                    onChange={(e) => {\n                        changeDesc(e.currentTarget.value);\n                    }}\n                />\n                {returnButton()}\n            </div>\n        )\n    }\n    \n    return (\n        <div style={{padding:`${content.paddingTop}% 0% ${content.paddingBottom}% 0%`}}>\n            <div className=\"template\" style={{flexDirection: `${state.isPhone ? 'column' : 'row'}`}}>\n                {returnTextAndButton()}\n                {returnImage()}\n            </div>\n        </div>\n    )\n}\n\n\nexport default HeroSection\n"]},"metadata":{},"sourceType":"module"}