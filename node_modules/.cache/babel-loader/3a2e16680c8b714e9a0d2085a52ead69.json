{"ast":null,"code":"var _jsxFileName = \"/Users/oyejin/Surfee/kiwi/src/components/Make/SectionTypes/DetailSection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState, useRef } from 'react';\nimport Editor from '../tools/Editor';\nimport { MyContext } from '../../../pages/Make/MakePageV2';\nimport './DetailSection.css';\nimport appstorebutton from '../../../tools/img/appstorebutton.png';\nimport playstorebutton from '../../../tools/img/playstorebutton.png';\nimport Popover from '@mui/material/Popover';\nimport { ImageAdd } from '@styled-icons/boxicons-regular';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DetailSection({\n  content\n}) {\n  _s();\n\n  const {\n    state,\n    action\n  } = useContext(MyContext); //ContextAPI로 state와 action을 넘겨받는다.\n\n  const imgRef = useRef(null);\n  const [imageShow, setImageShow] = useState(null);\n  const [align, setAlign] = useState('center');\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined; // 템플릿 1 텍스트의 경우\n\n  const changeText = data => {\n    let newContents = state.contents.map((item, index) => index === state.secNum ? { ...item,\n      titles: { ...item.titles,\n        title: data\n      }\n    } : item);\n    action.setContents(newContents);\n  }; // 템플릿 1 텍스트의 경우\n\n\n  const changeButtonText = data => {\n    let newContents = state.contents.map((item, index) => index === state.secNum ? { ...item,\n      button: { ...item.button,\n        title: data\n      }\n    } : item);\n    action.setContents(newContents);\n  }; // 템플릿 2 이미지의 경우에는\n\n\n  const onChangeImage = e => {\n    let newContents = JSON.parse(JSON.stringify(state.contents));\n    const {\n      target: {\n        files\n      }\n    } = e;\n    const oneFile = files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = finishedEvent => {\n      // 로딩이 끝날 때 실행한다는 뜻.\n      const {\n        currentTarget: {\n          result\n        }\n      } = finishedEvent; // newContents = state.contents.map((item, index) => index === state.secNum ? {...item, image: {...item.image, attachment : result}} : item)\n\n      newContents[state.secNum].image.attachment = result;\n    };\n\n    reader.readAsDataURL(oneFile);\n    action.setContents(newContents);\n  };\n\n  const returnImage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image__container\",\n      children: [/*#__PURE__*/_jsxDEV(Popover, {\n        id: Boolean(imageShow) ? 'simple-popover' : undefined // 수정\n        ,\n        open: Boolean(imageShow) // 수정\n        ,\n        anchorEl: imageShow // 수정\n        ,\n        onClose: () => setImageShow(null) // 수정\n        ,\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'left'\n        },\n        transformOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pop-balloon\",\n          style: {\n            width: '100px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"balloon-item\",\n            children: [/*#__PURE__*/_jsxDEV(ImageAdd, {\n              color: \"black\",\n              width: 30\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), imgRef.current && /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"image-input\",\n              type: \"file\",\n              accept: \"image/*\",\n              id: \"file\",\n              onChange: e => onChangeImage(e),\n              style: {\n                width: '20px',\n                height: '20px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"balloon-item\",\n            onClick: () => {},\n            children: \"\\uB3D9\\uC601\\uC0C1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), content.image.attachment === '' ? /*#__PURE__*/_jsxDEV(\"img\", {\n        ref: imgRef,\n        src: playstorebutton,\n        className: \"image\",\n        onClick: e => {\n          setImageShow(e.currentTarget);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        ref: imgRef,\n        src: `${content.image.attachment}`,\n        className: \"image\",\n        onClick: e => setImageShow(e.currentTarget)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  };\n\n  const returnButton = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Popover, {\n        id: id,\n        open: Boolean(anchorEl),\n        anchorEl: anchorEl,\n        onClose: () => setAnchorEl(null),\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'left'\n        },\n        transformOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pop-balloon\",\n          style: {\n            width: '100px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"balloon-item\",\n            onClick: () => setAlign('left'),\n            children: \"\\uC67C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"balloon-item\",\n            onClick: () => setAlign('center'),\n            children: \"\\uC911\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"balloon-item\",\n            onClick: () => setAlign('right'),\n            children: \"\\uC624\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button__container\",\n        style: {\n          justifyContent: `${align}`,\n          border: `${anchorEl !== null ? '1px dashed rgba(0,0,0,0.4)' : ''}`\n        },\n        onClick: e => setAnchorEl(e.currentTarget),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: content.button.link.includes(\"play.google.com/store\") ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: playstorebutton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 78\n          }, this) : content.button.link.includes(\"apps.apple.com/\") ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: appstorebutton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 72\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-button\",\n            style: {\n              backgroundColor: `${content.button.backgroundColor}`\n            },\n            children: \"\\uBC84\\uD2BCasdas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  };\n\n  const returnTextAndButton = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text__container\",\n      children: [/*#__PURE__*/_jsxDEV(Editor, {\n        data: content.titles.title,\n        onChange: (e, editor) => {\n          const data = editor.getData();\n          changeText(data);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), returnButton()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this);\n  };\n\n  const returnSectionTemplate = () => {\n    switch (content.templateNumber) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"template\",\n          style: {\n            flexDirection: `${state.isPhone ? 'column' : 'row'}`\n          },\n          children: [returnTextAndButton(), returnImage()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"template\",\n          style: {\n            flexDirection: `${state.isPhone ? 'column' : 'row'}`\n          },\n          children: [returnImage(), returnTextAndButton()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this);\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"template\",\n          style: {\n            flexDirection: 'column'\n          },\n          children: [returnTextAndButton(), returnImage()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: returnSectionTemplate()\n  }, void 0, false);\n}\n\n_s(DetailSection, \"ZAjnh/GhDI3eS+ElF/5+9/YYYGQ=\");\n\n_c = DetailSection;\nexport default DetailSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailSection\");","map":{"version":3,"sources":["/Users/oyejin/Surfee/kiwi/src/components/Make/SectionTypes/DetailSection.js"],"names":["React","useContext","useEffect","useState","useRef","Editor","MyContext","appstorebutton","playstorebutton","Popover","ImageAdd","DetailSection","content","state","action","imgRef","imageShow","setImageShow","align","setAlign","anchorEl","setAnchorEl","open","Boolean","id","undefined","changeText","data","newContents","contents","map","item","index","secNum","titles","title","setContents","changeButtonText","button","onChangeImage","e","JSON","parse","stringify","target","files","oneFile","reader","FileReader","onloadend","finishedEvent","currentTarget","result","image","attachment","readAsDataURL","returnImage","vertical","horizontal","width","current","height","returnButton","justifyContent","border","link","includes","backgroundColor","returnTextAndButton","editor","getData","returnSectionTemplate","templateNumber","flexDirection","isPhone"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState, useRef } from 'react'\nimport Editor from '../tools/Editor'\n\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport './DetailSection.css'\n\nimport appstorebutton from '../../../tools/img/appstorebutton.png'\nimport playstorebutton from '../../../tools/img/playstorebutton.png'\n\nimport Popover from '@mui/material/Popover';\nimport {ImageAdd} from '@styled-icons/boxicons-regular';\n\nfunction DetailSection({content}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const imgRef = useRef(null)\n    const [imageShow, setImageShow] = useState(null);\n    const [align, setAlign] = useState('center');\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    // 템플릿 1 텍스트의 경우\n    const changeText = ( data ) => {\n        let newContents = state.contents.map((item, index) => index === state.secNum ? {...item, titles: {...item.titles, title : data}} : item)\n        action.setContents(newContents);\n    }\n    // 템플릿 1 텍스트의 경우\n    const changeButtonText = ( data ) => {\n        let newContents = state.contents.map((item, index) => index === state.secNum ? {...item, button: {...item.button, title : data}} : item)\n        action.setContents(newContents);\n    }\n\n    // 템플릿 2 이미지의 경우에는\n    const onChangeImage = e => {\n        let newContents = JSON.parse(JSON.stringify(state.contents))\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            const {currentTarget:{result}} = finishedEvent;\n            // newContents = state.contents.map((item, index) => index === state.secNum ? {...item, image: {...item.image, attachment : result}} : item)\n            newContents[state.secNum].image.attachment = result;\n        }\n        reader.readAsDataURL(oneFile);\n        action.setContents(newContents);\n    }\n\n    const returnImage = () => {\n        return(\n            <div className=\"image__container\">\n                <Popover\n                    id={Boolean(imageShow) ? 'simple-popover' : undefined} // 수정\n                    open={Boolean(imageShow)} // 수정\n                    anchorEl={imageShow} // 수정\n                    onClose={() => setImageShow(null)} // 수정\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left',\n                    }}\n                    transformOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                    }}>\n                    <div className=\"pop-balloon\" style={{width:'100px'}}>\n                        <span className=\"balloon-item\">\n                            <ImageAdd color=\"black\" width={30} />\n                            { imgRef.current && \n                                <input className=\"image-input\" type=\"file\" accept=\"image/*\" id=\"file\"\n                                    onChange={ e => onChangeImage(e) } style={{width:'20px', height:'20px'}}/> }\n                        </span>\n                        <span className=\"balloon-item\" onClick={() => {}}>\n                            동영상\n                        </span>\n                    </div>\n                </Popover>\n                {content.image.attachment === '' ?  \n                    <img ref={imgRef} src={playstorebutton} className=\"image\" onClick={(e) =>{ setImageShow(e.currentTarget)}} />\n                    : \n                    <img ref={imgRef} src={`${content.image.attachment}`} className=\"image\" onClick={(e) => setImageShow(e.currentTarget)} />\n                }\n            </div>\n        )\n    }\n\n    const returnButton = () => {\n        return(\n            <>\n            <Popover\n                id={id}\n                open={Boolean(anchorEl)}\n                anchorEl={anchorEl}\n                onClose={() => setAnchorEl(null)}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                }}\n                transformOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n                }}>\n                <div className=\"pop-balloon\" style={{width:'100px'}}>\n                    <span className=\"balloon-item\" onClick={() => setAlign('left')}>\n                        왼\n                    </span>\n                    <span className=\"balloon-item\" onClick={() => setAlign('center')}>\n                        중\n                    </span>\n                    <span className=\"balloon-item\" onClick={() => setAlign('right')}>\n                        오\n                    </span>\n                </div>\n            </Popover>\n            \n            <div className=\"button__container\" style={{justifyContent: `${align}`, border:`${ anchorEl !== null ? '1px dashed rgba(0,0,0,0.4)' : '' }`}} onClick={e => setAnchorEl(e.currentTarget)}>\n                <div>                 \n                    {content.button.link.includes(\"play.google.com/store\") ? <img src={playstorebutton} />\n                     : \n                     content.button.link.includes(\"apps.apple.com/\") ? <img src={appstorebutton} />\n                     :\n                     <button className=\"action-button\" style={{backgroundColor:`${content.button.backgroundColor}`}}>\n                         {/* <Editor \n                             style={{width:'100px'}}\n                             data={content.button.title}\n                             onChange={(e, editor) => {\n                                 const data = editor.getData();\n                                 changeButtonText(data);\n                             }} \n                         /> */}\n                         버튼asdas\n                     </button>\n                    }\n                </div>\n            </div>\n            </>\n        )\n    }\n\n    const returnTextAndButton = () => {\n        return(\n            <div className=\"text__container\">\n                <Editor \n                    data={content.titles.title}\n                    onChange={(e, editor) => {\n                        const data = editor.getData();\n                        changeText(data);\n                    }}\n                    />\n                {returnButton()}\n            </div>\n        )\n    }\n\n    const returnSectionTemplate = () => {\n        switch(content.templateNumber){\n            case 1:\n                return(\n                    <div className=\"template\" style={{flexDirection: `${state.isPhone ? 'column' : 'row'}`}}>\n                        {returnTextAndButton()}\n                        {returnImage()}\n                    </div>\n                )\n\n            case 2:\n                return(\n                    <div className=\"template\" style={{flexDirection: `${state.isPhone ? 'column' : 'row'}`}}>\n                        {returnImage()}\n                        {returnTextAndButton()}\n                    </div>\n                )\n            \n            case 3:\n                return(\n                    <div className=\"template\" style={{flexDirection:'column'}}>\n                        {returnTextAndButton()}\n                        {returnImage()}\n                    </div>\n                )\n\n            default:\n                return(\n                    <div className=\"template\">\n                    </div>\n                )\n        }\n    }\n\n    return (\n        <>\n            {returnSectionTemplate()}\n        </>\n    )\n}\n\nexport default DetailSection"]},"metadata":{},"sourceType":"module"}