{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paste-from-office/normalizers/googledocsnormalizer\n */\nimport { UpcastWriter } from 'ckeditor5/src/engine';\nimport removeBoldWrapper from '../filters/removeboldwrapper';\nimport { unwrapParagraphInListItem } from '../filters/list';\nconst googleDocsMatch = /id=(\"|')docs-internal-guid-[-0-9a-f]+(\"|')/i;\n/**\n * Normalizer for the content pasted from Google Docs.\n *\n * @implements module:paste-from-office/normalizer~Normalizer\n */\n\nexport default class GoogleDocsNormalizer {\n  /**\n   * Creates a new `GoogleDocsNormalizer` instance.\n   *\n   * @param {module:engine/view/document~Document} document View document.\n   */\n  constructor(document) {\n    /**\n     * @readonly\n     * @type {module:engine/view/document~Document}\n     */\n    this.document = document;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  isActive(htmlString) {\n    return googleDocsMatch.test(htmlString);\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  execute(data) {\n    const writer = new UpcastWriter(this.document);\n    const {\n      body: documentFragment\n    } = data._parsedData;\n    removeBoldWrapper(documentFragment, writer);\n    unwrapParagraphInListItem(documentFragment, writer);\n    data.content = documentFragment;\n  }\n\n}","map":{"version":3,"sources":["/Users/oyejin/Surfee/kiwi/node_modules/@ckeditor/ckeditor5-paste-from-office/src/normalizers/googledocsnormalizer.js"],"names":["UpcastWriter","removeBoldWrapper","unwrapParagraphInListItem","googleDocsMatch","GoogleDocsNormalizer","constructor","document","isActive","htmlString","test","execute","data","writer","body","documentFragment","_parsedData","content"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,SAASA,YAAT,QAA6B,sBAA7B;AAEA,OAAOC,iBAAP,MAA8B,8BAA9B;AACA,SAASC,yBAAT,QAA0C,iBAA1C;AAEA,MAAMC,eAAe,GAAG,6CAAxB;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,oBAAN,CAA2B;AACzC;AACD;AACA;AACA;AACA;AACCC,EAAAA,WAAW,CAAEC,QAAF,EAAa;AACvB;AACF;AACA;AACA;AACE,SAAKA,QAAL,GAAgBA,QAAhB;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,QAAQ,CAAEC,UAAF,EAAe;AACtB,WAAOL,eAAe,CAACM,IAAhB,CAAsBD,UAAtB,CAAP;AACA;AAED;AACD;AACA;;;AACCE,EAAAA,OAAO,CAAEC,IAAF,EAAS;AACf,UAAMC,MAAM,GAAG,IAAIZ,YAAJ,CAAkB,KAAKM,QAAvB,CAAf;AACA,UAAM;AAAEO,MAAAA,IAAI,EAAEC;AAAR,QAA6BH,IAAI,CAACI,WAAxC;AAEAd,IAAAA,iBAAiB,CAAEa,gBAAF,EAAoBF,MAApB,CAAjB;AACAV,IAAAA,yBAAyB,CAAEY,gBAAF,EAAoBF,MAApB,CAAzB;AAEAD,IAAAA,IAAI,CAACK,OAAL,GAAeF,gBAAf;AACA;;AAhCwC","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paste-from-office/normalizers/googledocsnormalizer\n */\n\nimport { UpcastWriter } from 'ckeditor5/src/engine';\n\nimport removeBoldWrapper from '../filters/removeboldwrapper';\nimport { unwrapParagraphInListItem } from '../filters/list';\n\nconst googleDocsMatch = /id=(\"|')docs-internal-guid-[-0-9a-f]+(\"|')/i;\n\n/**\n * Normalizer for the content pasted from Google Docs.\n *\n * @implements module:paste-from-office/normalizer~Normalizer\n */\nexport default class GoogleDocsNormalizer {\n\t/**\n\t * Creates a new `GoogleDocsNormalizer` instance.\n\t *\n\t * @param {module:engine/view/document~Document} document View document.\n\t */\n\tconstructor( document ) {\n\t\t/**\n\t\t * @readonly\n\t\t * @type {module:engine/view/document~Document}\n\t\t */\n\t\tthis.document = document;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tisActive( htmlString ) {\n\t\treturn googleDocsMatch.test( htmlString );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\texecute( data ) {\n\t\tconst writer = new UpcastWriter( this.document );\n\t\tconst { body: documentFragment } = data._parsedData;\n\n\t\tremoveBoldWrapper( documentFragment, writer );\n\t\tunwrapParagraphInListItem( documentFragment, writer );\n\n\t\tdata.content = documentFragment;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}