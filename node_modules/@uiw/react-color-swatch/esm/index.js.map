{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "hexToHsva",
    "Swatch",
    "forwardRef",
    "props",
    "ref",
    "prefixCls",
    "className",
    "color",
    "colors",
    "style",
    "rectProps",
    "onChange",
    "addonAfter",
    "addonBefore",
    "rectRender",
    "other",
    "rectStyle",
    "background",
    "height",
    "width",
    "marginRight",
    "marginBottom",
    "cursor",
    "position",
    "outline",
    "borderRadius",
    "handleClick",
    "hex",
    "filter",
    "Boolean",
    "join",
    "display",
    "flexWrap",
    "isValidElement",
    "Array",
    "isArray",
    "map",
    "item",
    "idx",
    "title",
    "checked",
    "toLocaleLowerCase",
    "key",
    "onClick",
    "child",
    "children",
    "cloneElement",
    "displayName"
  ],
  "mappings": ";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAoBC,SAApB,QAAqC,oBAArC;;;AAsBA,IAAMC,MAAM,gBAAGF,KAAK,CAACG,UAAN,CAA8C,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC3E,MAAM;AACJC,IAAAA,SAAS,GAAG,gBADR;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,MAAM,GAAG,EAJL;AAKJC,IAAAA,KALI;AAMJC,IAAAA,SAAS,GAAG,EANR;AAOJC,IAAAA,QAPI;AAQJC,IAAAA,UARI;AASJC,IAAAA,WATI;AAUJC,IAAAA;AAVI,MAYFX,KAZJ;AAAA,MAWKY,KAXL,iCAYIZ,KAZJ;;AAaA,MAAMa,SAA8B;AAClCC,IAAAA,UAAU,EAAE,mBADsB;AAElCC,IAAAA,MAAM,EAAE,EAF0B;AAGlCC,IAAAA,KAAK,EAAE,EAH2B;AAIlCC,IAAAA,WAAW,EAAE,CAJqB;AAKlCC,IAAAA,YAAY,EAAE,CALoB;AAMlCC,IAAAA,MAAM,EAAE,SAN0B;AAOlCC,IAAAA,QAAQ,EAAE,UAPwB;AAQlCC,IAAAA,OAAO,EAAE,MARyB;AASlCC,IAAAA,YAAY,EAAE;AAToB,KAU/Bf,SAAS,CAACD,KAVqB,CAApC;;AAYA,MAAMiB,WAAW,GAAIC,GAAD,IAAiB;AACnChB,IAAAA,QAAQ,IAAIA,QAAQ,CAACX,SAAS,CAAC2B,GAAD,CAAV,CAApB;AACD,GAFD;;AAGA,sBACE;AACE,IAAA,GAAG,EAAEvB;AADP,KAEMW,KAFN;AAGE,IAAA,SAAS,EAAE,CAACV,SAAD,EAAYC,SAAS,IAAI,EAAzB,EAA6BsB,MAA7B,CAAoCC,OAApC,EAA6CC,IAA7C,CAAkD,GAAlD,CAHb;AAIE,IAAA,KAAK;AACHC,MAAAA,OAAO,EAAE,MADN;AAEHC,MAAAA,QAAQ,EAAE,MAFP;AAGHT,MAAAA,QAAQ,EAAE;AAHP,OAIAd,KAJA,CAJP;AAAA,eAWGI,WAAW,iBAAId,KAAK,CAACkC,cAAN,CAAqBpB,WAArB,CAAf,IAAoDA,WAXvD,EAYGL,MAAM,IACL0B,KAAK,CAACC,OAAN,CAAc3B,MAAd,CADD,IAECA,MAAM,CAAC4B,GAAP,CAAW,CAACC,IAAD,EAAOC,GAAP,KAAe;AACxB,UAAIC,KAAK,GAAG,EAAZ;AACA,UAAItB,UAAU,GAAG,EAAjB;;AACA,UAAI,OAAOoB,IAAP,KAAgB,QAApB,EAA8B;AAC5BE,QAAAA,KAAK,GAAGF,IAAR;AACApB,QAAAA,UAAU,GAAGoB,IAAb;AACD;;AACD,UAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,CAAC9B,KAArC,EAA4C;AAC1CgC,QAAAA,KAAK,GAAGF,IAAI,CAACE,KAAL,IAAcF,IAAI,CAAC9B,KAA3B;AACAU,QAAAA,UAAU,GAAGoB,IAAI,CAAC9B,KAAlB;AACD;;AACD,UAAMiC,OAAO,GAAGjC,KAAK,IAAIA,KAAK,CAACkC,iBAAN,OAA8BxB,UAAU,CAACwB,iBAAX,EAAvD;;AACA,UAAI3B,UAAJ,EAAgB;AACd,eAAOA,UAAU,CAAC;AAChB4B,UAAAA,GAAG,EAAEJ,GADW;AAEhBC,UAAAA,KAFgB;AAGhBhC,UAAAA,KAAK,EAAEU,UAHS;AAIhBuB,UAAAA,OAAO,EAAE,CAAC,CAACA,OAJK;AAKhB/B,UAAAA,KAAK,eAAOO,SAAP;AAAkBC,YAAAA;AAAlB,YALW;AAMhB0B,UAAAA,OAAO,EAAE,MAAMjB,WAAW,CAACT,UAAD;AANV,SAAD,CAAjB;AAQD;;AACD,UAAM2B,KAAK,GACTlC,SAAS,CAACmC,QAAV,iBAAsB9C,KAAK,CAACkC,cAAN,CAAqBvB,SAAS,CAACmC,QAA/B,CAAtB,gBACI9C,KAAK,CAAC+C,YAAN,CAAmBpC,SAAS,CAACmC,QAA7B,EAAuC;AACrCtC,QAAAA,KAAK,EAAEU,UAD8B;AAErCuB,QAAAA;AAFqC,OAAvC,CADJ,GAKI,IANN;AAOA,0BACE;AACE,QAAA,QAAQ,EAAE,CADZ;AAGE,QAAA,KAAK,EAAED,KAHT;AAIE,QAAA,OAAO,EAAE,MAAMb,WAAW,CAACT,UAAD;AAJ5B,SAKMP,SALN;AAME,QAAA,QAAQ,EAAEkC,KANZ;AAOE,QAAA,KAAK,eAAO5B,SAAP;AAAkBC,UAAAA;AAAlB;AAPP,UAEOqB,GAFP,CADF;AAWD,KAxCD,CAdJ,EAuDG1B,UAAU,iBAAIb,KAAK,CAACkC,cAAN,CAAqBrB,UAArB,CAAd,IAAkDA,UAvDrD;AAAA,KADF;AA2DD,CAxFc,CAAf;AA0FAX,MAAM,CAAC8C,WAAP,GAAqB,QAArB;AAEA,eAAe9C,MAAf",
  "sourcesContent": [
    "import React from 'react';\nimport { HsvaColor, hexToHsva } from '@uiw/color-convert';\n\nexport type SwatchPresetColor = { color: string; title?: string } | string;\nexport type SwatchRectRenderProps = {\n  key: string | number;\n  title: string;\n  color: string;\n  checked: boolean;\n  style: React.CSSProperties;\n  onClick: (evn: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n};\nexport interface SwatchProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange' | 'color'> {\n  prefixCls?: string;\n  color?: string;\n  colors?: SwatchPresetColor[];\n  rectProps?: React.HTMLAttributes<HTMLDivElement>;\n  rectRender?: (props: SwatchRectRenderProps) => JSX.Element;\n  onChange?: (hsva: HsvaColor) => void;\n  addonAfter?: React.ReactNode;\n  addonBefore?: React.ReactNode;\n}\n\nconst Swatch = React.forwardRef<HTMLDivElement, SwatchProps>((props, ref) => {\n  const {\n    prefixCls = 'w-color-swatch',\n    className,\n    color,\n    colors = [],\n    style,\n    rectProps = {},\n    onChange,\n    addonAfter,\n    addonBefore,\n    rectRender,\n    ...other\n  } = props;\n  const rectStyle: React.CSSProperties = {\n    background: 'rgb(144, 19, 254)',\n    height: 15,\n    width: 15,\n    marginRight: 5,\n    marginBottom: 5,\n    cursor: 'pointer',\n    position: 'relative',\n    outline: 'none',\n    borderRadius: 2,\n    ...rectProps.style,\n  };\n  const handleClick = (hex: string) => {\n    onChange && onChange(hexToHsva(hex));\n  };\n  return (\n    <div\n      ref={ref}\n      {...other}\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      style={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        position: 'relative',\n        ...style,\n      }}\n    >\n      {addonBefore && React.isValidElement(addonBefore) && addonBefore}\n      {colors &&\n        Array.isArray(colors) &&\n        colors.map((item, idx) => {\n          let title = '';\n          let background = '';\n          if (typeof item === 'string') {\n            title = item;\n            background = item;\n          }\n          if (typeof item === 'object' && item.color) {\n            title = item.title || item.color;\n            background = item.color;\n          }\n          const checked = color && color.toLocaleLowerCase() === background.toLocaleLowerCase();\n          if (rectRender) {\n            return rectRender({\n              key: idx,\n              title,\n              color: background,\n              checked: !!checked,\n              style: { ...rectStyle, background },\n              onClick: () => handleClick(background),\n            });\n          }\n          const child =\n            rectProps.children && React.isValidElement(rectProps.children)\n              ? React.cloneElement(rectProps.children, {\n                  color: background,\n                  checked,\n                })\n              : null;\n          return (\n            <div\n              tabIndex={0}\n              key={idx}\n              title={title}\n              onClick={() => handleClick(background)}\n              {...rectProps}\n              children={child}\n              style={{ ...rectStyle, background }}\n            />\n          );\n        })}\n      {addonAfter && React.isValidElement(addonAfter) && addonAfter}\n    </div>\n  );\n});\n\nSwatch.displayName = 'Swatch';\n\nexport default Swatch;\n"
  ]
}