import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["prefixCls", "className", "style", "color", "onChange"];
import React from 'react';
import { color as handleColor, validHex, hexToHsva, hsvaToHex } from '@uiw/color-convert';
import EditableInput from '@uiw/react-color-editable-input';
import RGBA from '@uiw/react-color-editable-input-rgba';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
var styleRBG = {
  boxShadow: 'initial',
  borderWidth: '0 0 1px 0',
  borderBottomColor: '#eee',
  borderBottomStyle: 'solid',
  height: 30,
  outline: 0,
  fontSize: 15,
  padding: 0
};
var Material = /*#__PURE__*/React.forwardRef((props, ref) => {
  var {
    prefixCls = 'w-color-material',
    className,
    style,
    color,
    onChange
  } = props,
      other = _objectWithoutPropertiesLoose(props, _excluded);

  var hsva = typeof color === 'string' && validHex(color) ? hexToHsva(color) : color;
  var hex = color ? hsvaToHex(hsva).replace(/^#/, '') : '';

  var handleChange = hsv => {
    onChange && onChange(handleColor(hsv));
  };

  var handleHex = (value, evn) => {
    if (typeof value === 'string' && validHex(value) && /(3|6)/.test(String(value.length))) {
      onChange && onChange(handleColor(hexToHsva(value)));
    }
  };

  return /*#__PURE__*/_jsxs("div", _extends({
    ref: ref,
    className: [prefixCls, className || ''].filter(Boolean).join(' '),
    style: _extends({
      padding: 16,
      width: 98,
      fontFamily: 'Roboto',
      backgroundColor: '#fff'
    }, style)
  }, other, {
    children: [/*#__PURE__*/_jsx(EditableInput, {
      label: "Hex",
      value: hex.toLocaleUpperCase(),
      onChange: (evn, val) => handleHex(val, evn),
      onBlur: evn => {
        var value = evn.target.value;
        evn.target.value = value.slice(0, 6);
        handleHex(value.slice(0, 6), evn);
      },
      inputStyle: {
        outline: 0,
        border: 0,
        height: 30,
        fontSize: 15,
        padding: 0,
        boxShadow: 'initial',
        borderWidth: '0 0 2px 0',
        borderBottomColor: hex ? "#" + hex : '#eee',
        borderBottomStyle: 'solid'
      },
      style: {
        flexDirection: 'column-reverse',
        alignItems: 'flex-start'
      }
    }), /*#__PURE__*/_jsx(RGBA, {
      hsva: hsva,
      placement: "top",
      style: {
        marginTop: 11
      },
      rProps: {
        style: {
          alignItems: 'flex-start'
        },
        inputStyle: _extends({}, styleRBG)
      },
      gProps: {
        style: {
          alignItems: 'flex-start'
        },
        inputStyle: _extends({}, styleRBG)
      },
      bProps: {
        style: {
          alignItems: 'flex-start'
        },
        inputStyle: _extends({}, styleRBG)
      },
      aProps: false,
      onChange: result => handleChange(result.hsva)
    })]
  }));
});
Material.displayName = 'Material';
export default Material;
//# sourceMappingURL=index.js.map