{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "PRESET_COLORS",
    "Bar",
    "props",
    "boxShadow",
    "width",
    "top",
    "bottom",
    "left",
    "borderRadius",
    "position",
    "backgroundColor",
    "Sketch",
    "React",
    "forwardRef",
    "ref",
    "prefixCls",
    "className",
    "onChange",
    "presetColors",
    "color",
    "editableDisable",
    "style",
    "other",
    "h",
    "s",
    "v",
    "a",
    "hsva",
    "setHsva",
    "handleChange",
    "hsv",
    "handleHex",
    "value",
    "evn",
    "test",
    "String",
    "length",
    "background",
    "padding",
    "height",
    "newColor",
    "display",
    "marginTop",
    "flex",
    "marginLeft",
    "marginRight",
    "newHue",
    "newAlpha",
    "margin",
    "replace",
    "toLocaleUpperCase",
    "val",
    "minWidth",
    "result",
    "borderTop",
    "paddingTop",
    "paddingLeft",
    "hsvColor",
    "marginBottom",
    "displayName"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AASA;;;;;AAGA,IAAMA,aAAa,GAAG,CACpB,SADoB,EAEpB,SAFoB,EAGpB,SAHoB,EAIpB,SAJoB,EAKpB,SALoB,EAMpB,SANoB,EAOpB,SAPoB,EAQpB,SARoB,EASpB,SAToB,EAUpB,SAVoB,EAWpB,SAXoB,EAYpB,SAZoB,EAapB,SAboB,EAcpB,SAdoB,EAepB,SAfoB,CAAtB;;AA2BA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD;AAAA,sBACV;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAE,8BADN;AAELC,MAAAA,KAAK,EAAE,CAFF;AAGLC,MAAAA,GAAG,EAAE,CAHA;AAILC,MAAAA,MAAM,EAAE,CAJH;AAKLC,MAAAA,IAAI,EAAEL,KAAK,CAACK,IALP;AAMLC,MAAAA,YAAY,EAAE,CANT;AAOLC,MAAAA,QAAQ,EAAE,UAPL;AAQLC,MAAAA,eAAe,EAAE;AARZ;AADT,IADU;AAAA,CAAZ;;AAeA,IAAMC,MAAM,gBAAGC,kBAAMC,UAAN,CAA8C,UAACX,KAAD,EAAQY,GAAR,EAAgB;AAC3E,yBAUIZ,KAVJ,CACEa,SADF;AAAA,MACEA,SADF,iCACc,gBADd;AAAA,MAEEC,SAFF,GAUId,KAVJ,CAEEc,SAFF;AAAA,MAGEC,QAHF,GAUIf,KAVJ,CAGEe,QAHF;AAAA,qBAUIf,KAVJ,CAIEE,KAJF;AAAA,MAIEA,KAJF,6BAIU,GAJV;AAAA,4BAUIF,KAVJ,CAKEgB,YALF;AAAA,MAKEA,YALF,oCAKiBlB,aALjB;AAAA,MAMEmB,KANF,GAUIjB,KAVJ,CAMEiB,KANF;AAAA,8BAUIjB,KAVJ,CAOEkB,eAPF;AAAA,MAOEA,eAPF,sCAOoB,IAPpB;AAAA,MAQEC,KARF,GAUInB,KAVJ,CAQEmB,KARF;AAAA,MASKC,KATL,6CAUIpB,KAVJ;;AAWA,kBAAwB,qBAAS;AAAEqB,IAAAA,CAAC,EAAE,GAAL;AAAUC,IAAAA,CAAC,EAAE,EAAb;AAAiBC,IAAAA,CAAC,EAAE,EAApB;AAAwBC,IAAAA,CAAC,EAAE;AAA3B,GAAT,CAAxB;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AACA,wBAAU,YAAM;AACd,QAAI,OAAOT,KAAP,KAAiB,QAAjB,IAA6B,4BAASA,KAAT,CAAjC,EAAkD;AAChDS,MAAAA,OAAO,CAAC,6BAAUT,KAAV,CAAD,CAAP;AACD;;AACD,QAAI,yBAAOA,KAAP,MAAiB,QAArB,EAA+B;AAC7BS,MAAAA,OAAO,CAACT,KAAD,CAAP;AACD;AACF,GAPD,EAOG,CAACA,KAAD,CAPH;AASA,MAAMU,YAAY,GAAG,wBACnB,UAACC,GAAD,EAAoB;AAClBF,IAAAA,OAAO,CAACE,GAAD,CAAP;AACAb,IAAAA,QAAQ,IAAIA,QAAQ,CAAC,yBAAYa,GAAZ,CAAD,CAApB;AACD,GAJkB,EAKnB,CAACH,IAAD,CALmB,CAArB;;AAQA,MAAMI,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAyBC,GAAzB,EAAsE;AACtF,QAAI,OAAOD,KAAP,KAAiB,QAAjB,IAA6B,4BAASA,KAAT,CAA7B,IAAgD,QAAQE,IAAR,CAAaC,MAAM,CAACH,KAAK,CAACI,MAAP,CAAnB,CAApD,EAAwF;AACtFP,MAAAA,YAAY,CAAC,6BAAUG,KAAV,CAAD,CAAZ;AACD;AACF,GAJD;;AAKA,sBACE,+FACMV,KADN;AAEE,IAAA,SAAS,YAAKP,SAAL,cAAkBC,SAAS,IAAI,EAA/B,CAFX;AAGE,IAAA,GAAG,EAAEF,GAHP;AAIE,IAAA,KAAK;AACHuB,MAAAA,UAAU,EAAE,oBADT;AAEH7B,MAAAA,YAAY,EAAE,CAFX;AAGHL,MAAAA,SAAS,EAAE,iEAHR;AAIHC,MAAAA,KAAK,EAALA;AAJG,OAKAiB,KALA,CAJP;AAAA,4BAYE;AAAK,MAAA,KAAK,EAAE;AAAEiB,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA,8BACE,qBAAC,gCAAD;AACE,QAAA,IAAI,EAAEX,IADR;AAEE,QAAA,KAAK,EAAE;AAAEvB,UAAAA,KAAK,EAAE,MAAT;AAAiBmC,UAAAA,MAAM,EAAE;AAAzB,SAFT;AAGE,QAAA,QAAQ,EAAE,kBAACC,QAAD;AAAA,iBAAcX,YAAY,kGAAMF,IAAN,GAAea,QAAf;AAAyBd,YAAAA,CAAC,EAAEC,IAAI,CAACD;AAAjC,aAA1B;AAAA;AAHZ,QADF,eAME;AAAK,QAAA,KAAK,EAAE;AAAEe,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,SAAS,EAAE;AAA9B,SAAZ;AAAA,gCACE;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAE;AAAR,WAAZ;AAAA,kCACE,qBAAC,yBAAD;AACE,YAAA,KAAK,EAAC,MADR;AAEE,YAAA,MAAM,EAAE,EAFV;AAGE,YAAA,GAAG,EAAEhB,IAAI,CAACJ,CAHZ;AAIE,YAAA,OAAO,EAAEtB,GAJX;AAKE,YAAA,UAAU,EAAE;AACVoB,cAAAA,KAAK,EAAE;AAAEuB,gBAAAA,UAAU,EAAE,CAAd;AAAiBC,gBAAAA,WAAW,EAAE;AAA9B;AADG,aALd;AAQE,YAAA,QAAQ,EAAE,kBAACC,MAAD;AAAA,qBAAYjB,YAAY,mEAAMF,IAAN,GAAemB,MAAf,EAAxB;AAAA;AARZ,YADF,eAWE,qBAAC,2BAAD;AACE,YAAA,KAAK,EAAC,MADR;AAEE,YAAA,MAAM,EAAE,EAFV;AAGE,YAAA,IAAI,EAAEnB,IAHR;AAIE,YAAA,OAAO,EAAE1B,GAJX;AAKE,YAAA,KAAK,EAAE;AAAEyC,cAAAA,SAAS,EAAE;AAAb,aALT;AAME,YAAA,UAAU,EAAE;AACVrB,cAAAA,KAAK,EAAE;AAAEuB,gBAAAA,UAAU,EAAE,CAAd;AAAiBC,gBAAAA,WAAW,EAAE;AAA9B;AADG,aANd;AASE,YAAA,QAAQ,EAAE,kBAACE,QAAD,EAAc;AACtBlB,cAAAA,YAAY,mEAAMF,IAAN,GAAe;AAAED,gBAAAA,CAAC,EAAEqB,QAAQ,CAACrB;AAAd,eAAf,EAAZ;AACD;AAXH,YAXF;AAAA,UADF,eA0BE,qBAAC,2BAAD;AACE,UAAA,KAAK,EAAE,EADT;AAEE,UAAA,MAAM,EAAE,EAFV;AAGE,UAAA,IAAI,EAAEC,IAHR;AAIE,UAAA,MAAM,EAAE,CAJV;AAKE,UAAA,KAAK,EAAE;AACLiB,YAAAA,UAAU,EAAE;AADP,WALT;AAQE,UAAA,OAAO,EAAE;AAAEvB,YAAAA,KAAK,EAAE;AAAEgB,cAAAA,UAAU,EAAE;AAAd;AAAT,WARX;AASE,UAAA,UAAU,EAAE;AACVhB,YAAAA,KAAK,EAAE;AACLb,cAAAA,YAAY,EAAE,CADT;AAEL6B,cAAAA,UAAU,EAAE,oCAAiBV,IAAjB,CAFP;AAGLxB,cAAAA,SAAS,EAAE;AAHN;AADG,WATd;AAgBE,UAAA,OAAO,EAAE;AAAA,gCAAM,qBAAC,eAAD,KAAN;AAAA;AAhBX,UA1BF;AAAA,QANF;AAAA,MAZF,EAgEGiB,eAAe,iBACd;AAAK,MAAA,KAAK,EAAE;AAAEqB,QAAAA,OAAO,EAAE,MAAX;AAAmBO,QAAAA,MAAM,EAAE;AAA3B,OAAZ;AAAA,8BACE,qBAAC,mCAAD;AACE,QAAA,KAAK,EAAC,KADR;AAEE,QAAA,KAAK,EAAE,6BAAUrB,IAAV,EAAgBsB,OAAhB,CAAwB,IAAxB,EAA8B,EAA9B,EAAkCC,iBAAlC,EAFT;AAGE,QAAA,QAAQ,EAAE,kBAACjB,GAAD,EAAMkB,GAAN;AAAA,iBAAcpB,SAAS,CAACoB,GAAD,EAAMlB,GAAN,CAAvB;AAAA,SAHZ;AAIE,QAAA,KAAK,EAAE;AAAEmB,UAAAA,QAAQ,EAAE;AAAZ;AAJT,QADF,eAOE,qBAAC,uCAAD;AAAM,QAAA,IAAI,EAAEzB,IAAZ;AAAkB,QAAA,KAAK,EAAE;AAAEiB,UAAAA,UAAU,EAAE;AAAd,SAAzB;AAA4C,QAAA,QAAQ,EAAE,kBAACS,MAAD;AAAA,iBAAYxB,YAAY,CAACwB,MAAM,CAAC1B,IAAR,CAAxB;AAAA;AAAtD,QAPF;AAAA,MAjEJ,EA2EGT,YAAY,IAAIA,YAAY,CAACkB,MAAb,GAAsB,CAAtC,iBACC,qBAAC,4BAAD;AACE,MAAA,KAAK,EAAE;AACLkB,QAAAA,SAAS,EAAE,8BADN;AAELC,QAAAA,UAAU,EAAE,EAFP;AAGLC,QAAAA,WAAW,EAAE;AAHR,OADT;AAME,MAAA,MAAM,EAAEtC,YANV;AAOE,MAAA,KAAK,EAAE,6BAAUS,IAAV,CAPT;AAQE,MAAA,QAAQ,EAAE,kBAAC8B,QAAD;AAAA,eAAc5B,YAAY,CAAC4B,QAAD,CAA1B;AAAA,OARZ;AASE,MAAA,SAAS,EAAE;AACTpC,QAAAA,KAAK,EAAE;AACLwB,UAAAA,WAAW,EAAE,EADR;AAELa,UAAAA,YAAY,EAAE,EAFT;AAGLlD,UAAAA,YAAY,EAAE,CAHT;AAILL,UAAAA,SAAS,EAAE,wCAJN,CAKL;AACA;AACA;;AAPK;AADE;AATb,MA5EJ;AAAA,KADF;AAqGD,CAxIc,CAAf;;AA0IAQ,MAAM,CAACgD,WAAP,GAAqB,QAArB;eAEehD,M",
  "sourcesContent": [
    "import React, { useState, useCallback, Fragment } from 'react';\nimport Saturation from '@uiw/react-color-saturation';\nimport Alpha from '@uiw/react-color-alpha';\nimport EditableInput from '@uiw/react-color-editable-input';\nimport RGBA from '@uiw/react-color-editable-input-rgba';\nimport { PointerProps } from '@uiw/react-color-alpha/lib/cjs/Pointer';\nimport Hue from '@uiw/react-color-hue';\nimport {\n  validHex,\n  HsvaColor,\n  hsvaToHex,\n  hsvaToRgbaString,\n  hexToHsva,\n  color as handleColor,\n  ColorResult,\n} from '@uiw/color-convert';\nimport Swatch, { SwatchPresetColor } from '@uiw/react-color-swatch';\nimport { useEffect } from 'react';\n\nconst PRESET_COLORS = [\n  '#D0021B',\n  '#F5A623',\n  '#f8e61b',\n  '#8B572A',\n  '#7ED321',\n  '#417505',\n  '#BD10E0',\n  '#9013FE',\n  '#4A90E2',\n  '#50E3C2',\n  '#B8E986',\n  '#000000',\n  '#4A4A4A',\n  '#9B9B9B',\n  '#FFFFFF',\n];\n\nexport interface SketchProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange' | 'color'> {\n  prefixCls?: string;\n  width?: number;\n  color?: string | HsvaColor;\n  presetColors?: false | SwatchPresetColor[];\n  editableDisable?: boolean;\n  onChange?: (newShade: ColorResult) => void;\n}\n\nconst Bar = (props: PointerProps) => (\n  <div\n    style={{\n      boxShadow: 'rgb(0 0 0 / 60%) 0px 0px 2px',\n      width: 4,\n      top: 1,\n      bottom: 1,\n      left: props.left,\n      borderRadius: 1,\n      position: 'absolute',\n      backgroundColor: '#fff',\n    }}\n  />\n);\n\nconst Sketch = React.forwardRef<HTMLDivElement, SketchProps>((props, ref) => {\n  const {\n    prefixCls = 'w-color-sketch',\n    className,\n    onChange,\n    width = 218,\n    presetColors = PRESET_COLORS,\n    color,\n    editableDisable = true,\n    style,\n    ...other\n  } = props;\n  const [hsva, setHsva] = useState({ h: 209, s: 36, v: 90, a: 1 });\n  useEffect(() => {\n    if (typeof color === 'string' && validHex(color)) {\n      setHsva(hexToHsva(color));\n    }\n    if (typeof color === 'object') {\n      setHsva(color);\n    }\n  }, [color]);\n\n  const handleChange = useCallback(\n    (hsv: HsvaColor) => {\n      setHsva(hsv);\n      onChange && onChange(handleColor(hsv));\n    },\n    [hsva],\n  );\n\n  const handleHex = (value: string | number, evn: React.ChangeEvent<HTMLInputElement>) => {\n    if (typeof value === 'string' && validHex(value) && /(3|6)/.test(String(value.length))) {\n      handleChange(hexToHsva(value));\n    }\n  };\n  return (\n    <div\n      {...other}\n      className={`${prefixCls} ${className || ''}`}\n      ref={ref}\n      style={{\n        background: 'rgb(255, 255, 255)',\n        borderRadius: 4,\n        boxShadow: 'rgb(0 0 0 / 15%) 0px 0px 0px 1px, rgb(0 0 0 / 15%) 0px 8px 16px',\n        width,\n        ...style,\n      }}\n    >\n      <div style={{ padding: '10px 10px 8px' }}>\n        <Saturation\n          hsva={hsva}\n          style={{ width: 'auto', height: 150 }}\n          onChange={(newColor) => handleChange({ ...hsva, ...newColor, a: hsva.a })}\n        />\n        <div style={{ display: 'flex', marginTop: 4 }}>\n          <div style={{ flex: 1 }}>\n            <Hue\n              width=\"auto\"\n              height={10}\n              hue={hsva.h}\n              pointer={Bar}\n              innerProps={{\n                style: { marginLeft: 1, marginRight: 5 },\n              }}\n              onChange={(newHue) => handleChange({ ...hsva, ...newHue })}\n            />\n            <Alpha\n              width=\"auto\"\n              height={10}\n              hsva={hsva}\n              pointer={Bar}\n              style={{ marginTop: 4 }}\n              innerProps={{\n                style: { marginLeft: 1, marginRight: 5 },\n              }}\n              onChange={(newAlpha) => {\n                handleChange({ ...hsva, ...{ a: newAlpha.a } });\n              }}\n            />\n          </div>\n          <Alpha\n            width={24}\n            height={24}\n            hsva={hsva}\n            radius={2}\n            style={{\n              marginLeft: 4,\n            }}\n            bgProps={{ style: { background: 'transparent' } }}\n            innerProps={{\n              style: {\n                borderRadius: 2,\n                background: hsvaToRgbaString(hsva),\n                boxShadow: 'rgb(0 0 0 / 15%) 0px 0px 0px 1px inset, rgb(0 0 0 / 25%) 0px 0px 4px inset',\n              },\n            }}\n            pointer={() => <Fragment />}\n          />\n        </div>\n      </div>\n      {editableDisable && (\n        <div style={{ display: 'flex', margin: '0 10px 3px 10px' }}>\n          <EditableInput\n            label=\"Hex\"\n            value={hsvaToHex(hsva).replace(/^#/, '').toLocaleUpperCase()}\n            onChange={(evn, val) => handleHex(val, evn)}\n            style={{ minWidth: 58 }}\n          />\n          <RGBA hsva={hsva} style={{ marginLeft: 6 }} onChange={(result) => handleChange(result.hsva)} />\n        </div>\n      )}\n      {presetColors && presetColors.length > 0 && (\n        <Swatch\n          style={{\n            borderTop: '1px solid rgb(238, 238, 238)',\n            paddingTop: 10,\n            paddingLeft: 10,\n          }}\n          colors={presetColors}\n          color={hsvaToHex(hsva)}\n          onChange={(hsvColor) => handleChange(hsvColor)}\n          rectProps={{\n            style: {\n              marginRight: 10,\n              marginBottom: 10,\n              borderRadius: 3,\n              boxShadow: 'rgb(0 0 0 / 15%) 0px 0px 0px 1px inset',\n              // display: 'flex',\n              // alignItems: 'center',\n              // justifyContent: 'center',\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n});\n\nSketch.displayName = 'Sketch';\n\nexport default Sketch;\n"
  ]
}