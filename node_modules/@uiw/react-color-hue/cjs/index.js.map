{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "Hue",
    "React",
    "forwardRef",
    "props",
    "ref",
    "prefixCls",
    "className",
    "hue",
    "onChange",
    "direction",
    "other",
    "h",
    "s",
    "v",
    "a",
    "_",
    "interaction",
    "left",
    "top",
    "displayName"
  ],
  "mappings": ";;;;;;;;;;;;;AAAA;;AACA;;;;;;AAOA,IAAMA,GAAG,gBAAGC,kBAAMC,UAAN,CAA2C,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACrE,yBAAwGD,KAAxG,CAAQE,SAAR;AAAA,MAAQA,SAAR,iCAAoB,aAApB;AAAA,MAAmCC,SAAnC,GAAwGH,KAAxG,CAAmCG,SAAnC;AAAA,mBAAwGH,KAAxG,CAA8CI,GAA9C;AAAA,MAA8CA,GAA9C,2BAAoD,CAApD;AAAA,MAAuDC,SAAvD,GAAwGL,KAAxG,CAAuDK,QAAvD;AAAA,yBAAwGL,KAAxG,CAAiEM,SAAjE;AAAA,MAAiEA,SAAjE,iCAA6E,YAA7E;AAAA,MAA8FC,KAA9F,6CAAwGP,KAAxG;AACA,sBACE,qBAAC,2BAAD;AACE,IAAA,GAAG,EAAEC,GADP;AAEE,IAAA,SAAS,YAAKC,SAAL,cAAkBC,SAAS,IAAI,EAA/B;AAFX,KAGMI,KAHN;AAIE,IAAA,SAAS,EAAED,SAJb;AAKE,IAAA,UAAU,+BACRA,SAAS,KAAK,YAAd,GAA6B,OAA7B,GAAuC,QAD/B,wJALZ;AAQE,IAAA,IAAI,EAAE;AAAEE,MAAAA,CAAC,EAAEJ,GAAL;AAAUK,MAAAA,CAAC,EAAE,GAAb;AAAkBC,MAAAA,CAAC,EAAE,GAArB;AAA0BC,MAAAA,CAAC,EAAEP,GAAG,GAAG;AAAnC,KARR;AASE,IAAA,QAAQ,EAAE,kBAACQ,CAAD,EAAIC,WAAJ,EAAoB;AAC5BR,MAAAA,SAAQ,IAAIA,SAAQ,CAAC;AAAEG,QAAAA,CAAC,EAAEF,SAAS,KAAK,YAAd,GAA6B,MAAMO,WAAW,CAACC,IAA/C,GAAsD,MAAMD,WAAW,CAACE;AAA7E,OAAD,CAApB;AACD;AAXH,KADF;AAeD,CAjBW,CAAZ;;AAmBAlB,GAAG,CAACmB,WAAJ,GAAkB,KAAlB;eAEenB,G",
  "sourcesContent": [
    "import React from 'react';\nimport Alpha, { AlphaProps } from '@uiw/react-color-alpha';\n\nexport interface HueProps extends Omit<AlphaProps, 'hsva' | 'onChange'> {\n  onChange?: (newHue: { h: number }) => void;\n  hue: number;\n}\n\nconst Hue = React.forwardRef<HTMLDivElement, HueProps>((props, ref) => {\n  const { prefixCls = 'w-color-hue', className, hue = 0, onChange, direction = 'horizontal', ...other } = props;\n  return (\n    <Alpha\n      ref={ref}\n      className={`${prefixCls} ${className || ''}`}\n      {...other}\n      direction={direction}\n      background={`linear-gradient(to ${\n        direction === 'horizontal' ? 'right' : 'bottom'\n      }, rgb(255, 0, 0) 0%, rgb(255, 255, 0) 17%, rgb(0, 255, 0) 33%, rgb(0, 255, 255) 50%, rgb(0, 0, 255) 67%, rgb(255, 0, 255) 83%, rgb(255, 0, 0) 100%)`}\n      hsva={{ h: hue, s: 100, v: 100, a: hue / 360 }}\n      onChange={(_, interaction) => {\n        onChange && onChange({ h: direction === 'horizontal' ? 360 * interaction.left : 360 * interaction.top });\n      }}\n    />\n  );\n});\n\nHue.displayName = 'Hue';\n\nexport default Hue;\n"
  ]
}