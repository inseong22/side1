{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "Saturation",
    "React",
    "forwardRef",
    "props",
    "ref",
    "prefixCls",
    "radius",
    "pointer",
    "className",
    "style",
    "hsva",
    "onChange",
    "other",
    "containerStyle",
    "width",
    "height",
    "borderRadius",
    "position",
    "handleChange",
    "interaction",
    "event",
    "h",
    "s",
    "left",
    "v",
    "top",
    "a",
    "comProps",
    "color",
    "filter",
    "Boolean",
    "join",
    "inset",
    "cursor",
    "backgroundImage",
    "createElement",
    "Pointer",
    "displayName"
  ],
  "mappings": ";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;AAYA,IAAMA,UAAU,gBAAGC,kBAAMC,UAAN,CAAkD,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACnF,yBAA8GD,KAA9G,CAAQE,SAAR;AAAA,MAAQA,SAAR,iCAAoB,oBAApB;AAAA,sBAA8GF,KAA9G,CAA0CG,MAA1C;AAAA,MAA0CA,MAA1C,8BAAmD,CAAnD;AAAA,MAAsDC,OAAtD,GAA8GJ,KAA9G,CAAsDI,OAAtD;AAAA,MAA+DC,SAA/D,GAA8GL,KAA9G,CAA+DK,SAA/D;AAAA,MAA0EC,KAA1E,GAA8GN,KAA9G,CAA0EM,KAA1E;AAAA,MAAiFC,IAAjF,GAA8GP,KAA9G,CAAiFO,IAAjF;AAAA,MAAuFC,QAAvF,GAA8GR,KAA9G,CAAuFQ,QAAvF;AAAA,MAAoGC,KAApG,6CAA8GT,KAA9G;AACA,MAAMU,cAAmC;AACvCC,IAAAA,KAAK,EAAE,GADgC;AAEvCC,IAAAA,MAAM,EAAE,GAF+B;AAGvCC,IAAAA,YAAY,EAAEV;AAHyB,KAIpCG,KAJoC;AAKvCQ,IAAAA,QAAQ,EAAE;AAL6B,IAAzC;;AAQA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,WAAD,EAA2BC,KAA3B,EAA8D;AACjFT,IAAAA,QAAQ,IACNA,QAAQ,CAAC;AACPU,MAAAA,CAAC,EAAEX,IAAI,CAACW,CADD;AAEPC,MAAAA,CAAC,EAAEH,WAAW,CAACI,IAAZ,GAAmB,GAFf;AAGPC,MAAAA,CAAC,EAAE,CAAC,IAAIL,WAAW,CAACM,GAAjB,IAAwB,GAHpB;AAIPC,MAAAA,CAAC,EAAEhB,IAAI,CAACgB,CAJD,CAKP;;AALO,KAAD,CADV;AAQD,GATD;;AAWA,MAAMC,QAAQ,GAAG;AACfF,IAAAA,GAAG,YAAK,MAAMf,IAAI,CAACc,CAAhB,MADY;AAEfD,IAAAA,IAAI,YAAKb,IAAI,CAACY,CAAV,MAFW;AAGfM,IAAAA,KAAK,EAAE,oCAAiBlB,IAAjB;AAHQ,GAAjB;AAMA,sBACE,qBAAC,qCAAD;AACE,IAAA,SAAS,EAAE,CAACL,SAAD,EAAYG,SAAS,IAAI,EAAzB,EAA6BqB,MAA7B,CAAoCC,OAApC,EAA6CC,IAA7C,CAAkD,GAAlD;AADb,KAEMnB,KAFN;AAGE,IAAA,KAAK;AACHK,MAAAA,QAAQ,EAAE,UADP;AAEHe,MAAAA,KAAK,EAAE,CAFJ;AAGHC,MAAAA,MAAM,EAAE,WAHL;AAIHC,MAAAA,eAAe,uFAAgFxB,IAAI,CAACW,CAArF;AAJZ,OAKAR,cALA,CAHP;AAUE,IAAA,GAAG,EAAET,GAVP;AAWE,IAAA,MAAM,EAAEc,YAXV;AAYE,IAAA,MAAM,EAAEA,YAZV;AAAA,2BAcGjB,kBAAMkC,aAAN,CAAoB5B,OAAO,IAAI6B,gBAA/B;AACC/B,MAAAA,SAAS,EAATA;AADD,OAEIsB,QAFJ;AAdH,KADF;AAqBD,CAhDkB,CAAnB;;AAkDA3B,UAAU,CAACqC,WAAX,GAAyB,YAAzB;eAEerC,U",
  "sourcesContent": [
    "import React from 'react';\nimport { HsvaColor, hsvaToHslaString } from '@uiw/color-convert';\nimport Interactive, { Interaction } from '@uiw/react-drag-event-interactive';\nimport { Pointer, PointerProps } from './Pointer';\n\nexport interface SaturationProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange'> {\n  prefixCls?: string;\n  /** hsva => `{ h: 0, s: 75, v: 82, a: 1 }` */\n  hsva: HsvaColor;\n  radius?: React.CSSProperties['borderRadius'];\n  /** React Component, Custom pointer component */\n  pointer?: ({ prefixCls, left, top, color }: PointerProps) => JSX.Element;\n  onChange?: (newColor: HsvaColor) => void;\n}\n\nconst Saturation = React.forwardRef<HTMLDivElement, SaturationProps>((props, ref) => {\n  const { prefixCls = 'w-color-saturation', radius = 0, pointer, className, style, hsva, onChange, ...other } = props;\n  const containerStyle: React.CSSProperties = {\n    width: 200,\n    height: 200,\n    borderRadius: radius,\n    ...style,\n    position: 'relative',\n  };\n\n  const handleChange = (interaction: Interaction, event: MouseEvent | TouchEvent) => {\n    onChange &&\n      onChange({\n        h: hsva.h,\n        s: interaction.left * 100,\n        v: (1 - interaction.top) * 100,\n        a: hsva.a,\n        // source: 'hsv',\n      });\n  };\n\n  const comProps = {\n    top: `${100 - hsva.v}%`,\n    left: `${hsva.s}%`,\n    color: hsvaToHslaString(hsva),\n  };\n\n  return (\n    <Interactive\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      {...other}\n      style={{\n        position: 'absolute',\n        inset: 0,\n        cursor: 'crosshair',\n        backgroundImage: `linear-gradient(0deg, #000, transparent), linear-gradient(90deg, #fff, hsl(${hsva.h}, 100%, 50%))`,\n        ...containerStyle,\n      }}\n      ref={ref}\n      onMove={handleChange}\n      onDown={handleChange}\n    >\n      {React.createElement(pointer || Pointer, {\n        prefixCls,\n        ...comProps,\n      })}\n    </Interactive>\n  );\n});\n\nSaturation.displayName = 'Saturation';\n\nexport default Saturation;\n"
  ]
}