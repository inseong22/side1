{
  "version": 3,
  "sources": [
    "../src/index.ts"
  ],
  "names": [
    "RGB_MAX",
    "HUE_MAX",
    "SV_MAX",
    "rgbaToHsva",
    "r",
    "g",
    "b",
    "a",
    "max",
    "Math",
    "delta",
    "min",
    "hh",
    "h",
    "s",
    "v",
    "hsvaToHslString",
    "hsva",
    "hsvaToHsla",
    "l",
    "round",
    "hsvaToHsvString",
    "hsvaToHsvaString",
    "hsvaToHslaString",
    "hslStringToHsla",
    "str",
    "match",
    "map",
    "Number",
    "hslaStringToHsva",
    "hslString",
    "matcher",
    "exec",
    "hslaToHsva",
    "parseHue",
    "undefined",
    "hslStringToHsva",
    "hsvaStringToHsva",
    "hsvString",
    "angleUnits",
    "grad",
    "turn",
    "rad",
    "PI",
    "value",
    "unit",
    "hsvStringToHsva",
    "rgbaStringToHsva",
    "rgbaString",
    "rgbStringToHsva",
    "rgbaToHex",
    "bin",
    "Array",
    "length",
    "join",
    "toString",
    "rgbaToHexa",
    "alpha",
    "slice",
    "hexToHsva",
    "hex",
    "hexToRgba",
    "htemp",
    "replace",
    "test",
    "charAt",
    "reg",
    "RegExp",
    "parseInt",
    "hsvaToRgba",
    "_h",
    "_s",
    "_v",
    "hi",
    "floor",
    "f",
    "_p",
    "_q",
    "_t",
    "rgba",
    "hsvaToRgbString",
    "hsvaToRgbaString",
    "rgbaToRgb",
    "hslaToHsl",
    "hsvaToHex",
    "hsvaToHexa",
    "hsvaToHsv",
    "color",
    "rgb",
    "hsl",
    "hsv",
    "hsla",
    "hexa"
  ],
  "mappings": "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",
  "sourcesContent": [
    "import { validHex } from './utils';\n\nexport * from './utils';\nexport * from './getContrastingColor';\n\nconst RGB_MAX = 255;\nconst HUE_MAX = 360;\nconst SV_MAX = 100;\n\nexport type ObjectColor = RgbColor | HslColor | HsvColor | RgbaColor | HslaColor | HsvaColor;\nexport type ColorResult = {\n  rgb: RgbColor;\n  hsl: HslColor;\n  hsv: HsvColor;\n  rgba: RgbaColor;\n  hsla: HslaColor;\n  hsva: HsvaColor;\n  hex: string;\n  hexa: string;\n};\n\nexport interface HsvColor {\n  h: number;\n  s: number;\n  v: number;\n}\n\nexport interface HsvaColor extends HsvColor {\n  a: number;\n}\n\nexport interface RgbColor {\n  r: number;\n  g: number;\n  b: number;\n}\nexport interface RgbaColor extends RgbColor {\n  a: number;\n}\n\n/**\n * ```js\n * rgbaToHsva({ r: 255, g: 255, b: 255, a: 1 }) //=> { h: 0, s: 0, v: 100, a: 1 }\n * ```\n */\nexport const rgbaToHsva = ({ r, g, b, a }: RgbaColor): HsvaColor => {\n  const max = Math.max(r, g, b);\n  const delta = max - Math.min(r, g, b);\n\n  // prettier-ignore\n  const hh = delta\n    ? max === r\n      ? (g - b) / delta\n      : max === g\n        ? 2 + (b - r) / delta\n        : 4 + (r - g) / delta\n    : 0;\n\n  return {\n    h: 60 * (hh < 0 ? hh + 6 : hh),\n    s: max ? (delta / max) * SV_MAX : 0,\n    v: (max / RGB_MAX) * SV_MAX,\n    a,\n  };\n};\n\nexport const hsvaToHslString = (hsva: HsvaColor): string => {\n  const { h, s, l } = hsvaToHsla(hsva);\n  // return `hsl(${h}, ${s}%, ${l}%)`;\n  return `hsl(${h}, ${Math.round(s)}%, ${Math.round(l)}%)`;\n};\n\nexport const hsvaToHsvString = ({ h, s, v }: HsvaColor): string => {\n  return `hsv(${h}, ${s}%, ${v}%)`;\n};\n\nexport const hsvaToHsvaString = ({ h, s, v, a }: HsvaColor): string => {\n  return `hsva(${h}, ${s}%, ${v}%, ${a})`;\n};\n\nexport const hsvaToHslaString = (hsva: HsvaColor): string => {\n  const { h, s, l, a } = hsvaToHsla(hsva);\n  return `hsla(${h}, ${s}%, ${l}%, ${a})`;\n};\n\nexport const hslStringToHsla = (str: string): HslaColor => {\n  const [h, s, l, a] = (str.match(/\\d+/g) || []).map(Number);\n  return { h, s, l, a };\n};\n\nexport const hslaStringToHsva = (hslString: string): HsvaColor => {\n  const matcher =\n    /hsla?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(hslString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return hslaToHsva({\n    h: parseHue(match[1], match[2]),\n    s: Number(match[3]),\n    l: Number(match[4]),\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? 100 : 1),\n  });\n};\n\nexport const hslStringToHsva = hslaStringToHsva;\n\nexport const hslaToHsva = ({ h, s, l, a }: HslaColor): HsvaColor => {\n  s *= (l < 50 ? l : SV_MAX - l) / SV_MAX;\n\n  return {\n    h: h,\n    s: s > 0 ? ((2 * s) / (l + s)) * SV_MAX : 0,\n    v: l + s,\n    a,\n  };\n};\n\nexport interface HslColor {\n  h: number;\n  s: number;\n  l: number;\n}\nexport interface HslaColor extends HslColor {\n  a: number;\n}\nexport const hsvaToHsla = ({ h, s, v, a }: HsvaColor): HslaColor => {\n  const hh = ((200 - s) * v) / SV_MAX;\n\n  return {\n    h,\n    s: hh > 0 && hh < 200 ? ((s * v) / SV_MAX / (hh <= SV_MAX ? hh : 200 - hh)) * SV_MAX : 0,\n    l: hh / 2,\n    a,\n  };\n};\n\nexport const hsvaStringToHsva = (hsvString: string): HsvaColor => {\n  const matcher =\n    /hsva?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(hsvString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return {\n    h: parseHue(match[1], match[2]),\n    s: Number(match[3]),\n    v: Number(match[4]),\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? SV_MAX : 1),\n  };\n};\n\n/**\n * Valid CSS <angle> units.\n * https://developer.mozilla.org/en-US/docs/Web/CSS/angle\n */\nconst angleUnits: Record<string, number> = {\n  grad: HUE_MAX / 400,\n  turn: HUE_MAX,\n  rad: HUE_MAX / (Math.PI * 2),\n};\n\nexport const parseHue = (value: string, unit = 'deg'): number => {\n  return Number(value) * (angleUnits[unit] || 1);\n};\n\nexport const hsvStringToHsva = hsvaStringToHsva;\nexport const rgbaStringToHsva = (rgbaString: string): HsvaColor => {\n  const matcher =\n    /rgba?\\(?\\s*(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(rgbaString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return rgbaToHsva({\n    r: Number(match[1]) / (match[2] ? SV_MAX / RGB_MAX : 1),\n    g: Number(match[3]) / (match[4] ? SV_MAX / RGB_MAX : 1),\n    b: Number(match[5]) / (match[6] ? SV_MAX / RGB_MAX : 1),\n    a: match[7] === undefined ? 1 : Number(match[7]) / (match[8] ? SV_MAX : 1),\n  });\n};\n\nexport const rgbStringToHsva = rgbaStringToHsva;\n\n/** Converts an RGBA color plus alpha transparency to hex */\nexport const rgbaToHex = ({ r, g, b }: RgbaColor): string => {\n  let bin = (r << 16) | (g << 8) | b;\n  return `#${((h) => new Array(7 - h.length).join('0') + h)(bin.toString(16))}`;\n};\n\nexport const rgbaToHexa = ({ r, g, b, a }: RgbaColor): string => {\n  const alpha = typeof a === 'number' && ((a * 255) | (1 << 8)).toString(16).slice(1);\n  return `${rgbaToHex({ r, g, b, a })}${alpha ? alpha : ''}`;\n};\n\nexport const hexToHsva = (hex: string): HsvaColor => rgbaToHsva(hexToRgba(hex));\nexport const hexToRgba = (hex: string): RgbaColor => {\n  const htemp = hex.replace('#', '');\n  if (/^#?/.test(hex) && htemp.length === 3) {\n    hex = `#${htemp.charAt(0)}${htemp.charAt(0)}${htemp.charAt(1)}${htemp.charAt(1)}${htemp.charAt(2)}${htemp.charAt(2)}`;\n  }\n  const reg = new RegExp(`[A-Za-z0-9]{2}`, 'g');\n  const [r, g, b = 0, a] = hex.match(reg)!.map((v) => parseInt(v, 16));\n  return {\n    r,\n    g,\n    b,\n    a: a ? a / RGB_MAX : 1,\n  };\n};\n\n/**\n * Converts HSVA to RGBA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV\n * @param color HSVA color as an array [0-360, 0-1, 0-1, 0-1]\n */\nexport const hsvaToRgba = ({ h, s, v, a }: HsvaColor): RgbaColor => {\n  let _h = h / 60,\n    _s = s / SV_MAX,\n    _v = v / SV_MAX,\n    hi = Math.floor(_h) % 6;\n\n  let f = _h - Math.floor(_h),\n    _p = RGB_MAX * _v * (1 - _s),\n    _q = RGB_MAX * _v * (1 - _s * f),\n    _t = RGB_MAX * _v * (1 - _s * (1 - f));\n  _v *= RGB_MAX;\n  const rgba = {} as RgbaColor;\n  switch (hi) {\n    case 0:\n      rgba.r = _v;\n      rgba.g = _t;\n      rgba.b = _p;\n      break;\n    case 1:\n      rgba.r = _q;\n      rgba.g = _v;\n      rgba.b = _p;\n      break;\n    case 2:\n      rgba.r = _p;\n      rgba.g = _v;\n      rgba.b = _t;\n      break;\n    case 3:\n      rgba.r = _p;\n      rgba.g = _q;\n      rgba.b = _v;\n      break;\n    case 4:\n      rgba.r = _t;\n      rgba.g = _p;\n      rgba.b = _v;\n      break;\n    case 5:\n      rgba.r = _v;\n      rgba.g = _p;\n      rgba.b = _q;\n      break;\n  }\n  rgba.r = Math.round(rgba.r);\n  rgba.g = Math.round(rgba.g);\n  rgba.b = Math.round(rgba.b);\n  return { ...rgba, a };\n};\n\nexport const hsvaToRgbString = (hsva: HsvaColor): string => {\n  const { r, g, b } = hsvaToRgba(hsva);\n  return `rgb(${r}, ${g}, ${b})`;\n};\n\nexport const hsvaToRgbaString = (hsva: HsvaColor): string => {\n  const { r, g, b, a } = hsvaToRgba(hsva);\n  return `rgba(${r}, ${g}, ${b}, ${a})`;\n};\n\nexport const rgbaToRgb = ({ r, g, b }: RgbaColor): RgbColor => ({ r, g, b });\nexport const hslaToHsl = ({ h, s, l }: HslaColor): HslColor => ({ h, s, l });\nexport const hsvaToHex = (hsva: HsvaColor): string => rgbaToHex(hsvaToRgba(hsva));\nexport const hsvaToHexa = (hsva: HsvaColor): string => rgbaToHexa(hsvaToRgba(hsva));\nexport const hsvaToHsv = ({ h, s, v }: HsvaColor): HsvColor => ({ h, s, v });\n\nexport const color = (str: string | HsvaColor): ColorResult => {\n  let rgb!: RgbColor;\n  let hsl!: HslColor;\n  let hsv!: HsvColor;\n  let rgba!: RgbaColor;\n  let hsla!: HslaColor;\n  let hsva!: HsvaColor;\n  let hex!: string;\n  let hexa!: string;\n  if (typeof str === 'string' && validHex(str)) {\n    hsva = hexToHsva(str);\n    hex = str;\n  } else if (typeof str !== 'string') {\n    hsva = str;\n  }\n  if (hsva) {\n    hsv = hsvaToHsv(hsva);\n    hsla = hsvaToHsla(hsva);\n    rgba = hsvaToRgba(hsva);\n    hexa = rgbaToHexa(rgba);\n    hex = hsvaToHex(hsva);\n    hsl = hslaToHsl(hsla);\n    rgb = rgbaToRgb(rgba);\n  }\n  return { rgb, hsl, hsv, rgba, hsla, hsva, hex, hexa };\n};\n"
  ]
}