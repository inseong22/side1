{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "EditableInputHSLA",
    "React",
    "forwardRef",
    "props",
    "ref",
    "prefixCls",
    "hsva",
    "hProps",
    "sProps",
    "lProps",
    "aProps",
    "className",
    "onChange",
    "other",
    "hsla",
    "h",
    "s",
    "l",
    "a",
    "handleChange",
    "value",
    "type",
    "evn",
    "label",
    "Math",
    "round",
    "val",
    "filter",
    "Boolean",
    "join",
    "displayName"
  ],
  "mappings": "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",
  "sourcesContent": [
    "import React from 'react';\nimport EditableInputRGBA, { EditableInputRGBAProps } from '@uiw/react-color-editable-input-rgba';\nimport { HslaColor, color as handleColor, hsvaToHsla, hslaToHsva } from '@uiw/color-convert';\n\nexport interface EditableInputHSLAProps extends Omit<EditableInputRGBAProps, 'rProps' | 'gProps' | 'bProps'> {\n  hProps?: EditableInputRGBAProps['gProps'];\n  sProps?: EditableInputRGBAProps['gProps'];\n  lProps?: EditableInputRGBAProps['gProps'];\n  aProps?: EditableInputRGBAProps['aProps'];\n}\n\nconst EditableInputHSLA = React.forwardRef<HTMLDivElement, EditableInputHSLAProps>((props, ref) => {\n  const {\n    prefixCls = 'w-color-editable-input-hsla',\n    hsva,\n    hProps = {},\n    sProps = {},\n    lProps = {},\n    aProps = {},\n    className,\n    onChange,\n    ...other\n  } = props;\n  const hsla = (hsva ? hsvaToHsla(hsva) : { h: 0, s: 0, l: 0, a: 0 }) as HslaColor;\n  const handleChange = (value: string | number, type: 'h' | 's' | 'l' | 'a', evn: React.ChangeEvent<HTMLInputElement>) => {\n    if (typeof value === 'number') {\n      if (type === 'h') {\n        if (value < 0) value = 0;\n        if (value > 360) value = 360;\n        onChange && onChange(handleColor(hslaToHsva({ ...hsla, h: value })));\n      }\n      if (type === 's') {\n        if (value < 0) value = 0;\n        if (value > 100) value = 100;\n        onChange && onChange(handleColor(hslaToHsva({ ...hsla, s: value })));\n      }\n      if (type === 'l') {\n        if (value < 0) value = 0;\n        if (value > 100) value = 100;\n        onChange && onChange(handleColor(hslaToHsva({ ...hsla, l: value })));\n      }\n      if (type === 'a') {\n        if (value < 0) value = 0;\n        if (value > 1) value = 1;\n        onChange && onChange(handleColor(hslaToHsva({ ...hsla, a: value })));\n      }\n    }\n  };\n  return (\n    <EditableInputRGBA\n      ref={ref}\n      hsva={hsva}\n      rProps={{\n        label: 'H',\n        value: Math.round(hsla.h),\n        ...hProps,\n        onChange: (evn, val) => handleChange(val, 'h', evn),\n      }}\n      gProps={{\n        label: 'S',\n        value: `${Math.round(hsla.s)}%`,\n        ...sProps,\n        onChange: (evn, val) => handleChange(val, 's', evn),\n      }}\n      bProps={{\n        label: 'L',\n        value: `${Math.round(hsla.l)}%`,\n        ...lProps,\n        onChange: (evn, val) => handleChange(val, 'l', evn),\n      }}\n      aProps={{\n        label: 'A',\n        value: Math.round(hsla.a * 100) / 100,\n        ...aProps,\n        onChange: (evn, val) => handleChange(val, 'a', evn),\n      }}\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      {...other}\n    />\n  );\n});\n\nEditableInputHSLA.displayName = 'EditableInputHSLA';\n\nexport default EditableInputHSLA;\n"
  ]
}