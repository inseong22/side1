{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "validHex",
    "hsvaToHex",
    "hexToHsva",
    "color",
    "handleColor",
    "Swatch",
    "Point",
    "Circle",
    "forwardRef",
    "props",
    "ref",
    "prefixCls",
    "className",
    "colors",
    "rectProps",
    "onChange",
    "other",
    "hsva",
    "hex",
    "filter",
    "Boolean",
    "join",
    "hsvColor",
    "displayName"
  ],
  "mappings": ";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAAyCC,SAAzC,EAAiEC,KAAK,IAAIC,WAA1E,QAA6F,oBAA7F;AACA,OAAOC,MAAP,MAAoC,yBAApC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAOA,IAAMC,MAAM,gBAAGR,KAAK,CAACS,UAAN,CAA8C,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC3E,MAAM;AAAEC,IAAAA,SAAS,GAAG,gBAAd;AAAgCC,IAAAA,SAAhC;AAA2CT,IAAAA,KAA3C;AAAkDU,IAAAA,MAAM,GAAG,EAA3D;AAA+DC,IAAAA,SAAS,GAAG,EAA3E;AAA+EC,IAAAA,QAAQ,EAARA;AAA/E,MAAsGN,KAA5G;AAAA,MAAkGO,KAAlG,iCAA4GP,KAA5G;;AACA,MAAMQ,IAAI,GAAI,OAAOd,KAAP,KAAiB,QAAjB,IAA6BH,QAAQ,CAACG,KAAD,CAArC,GAA+CD,SAAS,CAACC,KAAD,CAAxD,GAAkEA,KAAK,IAAI,EAAzF;AACA,MAAMe,GAAG,GAAGf,KAAK,GAAGF,SAAS,CAACgB,IAAD,CAAZ,GAAqB,EAAtC;AACA,sBACE,KAAC,MAAD;AACE,IAAA,GAAG,EAAEP,GADP;AAEE,IAAA,MAAM,EAAEG,MAFV;AAGE,IAAA,KAAK,EAAEK;AAHT,KAIMF,KAJN;AAKE,IAAA,SAAS,EAAE,CAACL,SAAD,EAAYC,SAAZ,EAAuBO,MAAvB,CAA8BC,OAA9B,EAAuCC,IAAvC,CAA4C,GAA5C,CALb;AAME,IAAA,UAAU,EAAE;AAAA,UAAMZ,KAAN;;AAAA,0BAAkB,KAAC,KAAD,eAAWA,KAAX;AAAkB,QAAA,SAAS,EAAEK;AAA7B,SAAlB;AAAA,KANd;AAOE,IAAA,QAAQ,EAAGQ,QAAD,IAAc;AACtBP,MAAAA,SAAQ,IAAIA,SAAQ,CAACX,WAAW,CAACkB,QAAD,CAAZ,CAApB;AACD;AATH,KADF;AAaD,CAjBc,CAAf;AAmBAf,MAAM,CAACgB,WAAP,GAAqB,QAArB;AAEA,eAAehB,MAAf",
  "sourcesContent": [
    "import React from 'react';\nimport { validHex, hsvaToHex, HsvaColor, hexToHsva, ColorResult, color as handleColor } from '@uiw/color-convert';\nimport Swatch, { SwatchProps } from '@uiw/react-color-swatch';\nimport Point from './Point';\n\nexport interface CircleProps extends Omit<SwatchProps, 'color' | 'onChange'> {\n  color?: string | HsvaColor;\n  onChange?: (color: ColorResult) => void;\n}\n\nconst Circle = React.forwardRef<HTMLDivElement, CircleProps>((props, ref) => {\n  const { prefixCls = 'w-color-circle', className, color, colors = [], rectProps = {}, onChange, ...other } = props;\n  const hsva = (typeof color === 'string' && validHex(color) ? hexToHsva(color) : color || {}) as HsvaColor;\n  const hex = color ? hsvaToHex(hsva) : '';\n  return (\n    <Swatch\n      ref={ref}\n      colors={colors}\n      color={hex}\n      {...other}\n      className={[prefixCls, className].filter(Boolean).join(' ')}\n      rectRender={({ ...props }) => <Point {...props} rectProps={rectProps} />}\n      onChange={(hsvColor) => {\n        onChange && onChange(handleColor(hsvColor));\n      }}\n    />\n  );\n});\n\nCircle.displayName = 'Circle';\n\nexport default Circle;\n"
  ]
}