{
  "version": 3,
  "sources": [
    "../src/Point.tsx"
  ],
  "names": [
    "Point",
    "style",
    "title",
    "checked",
    "color",
    "onClick",
    "rectProps",
    "btn",
    "handleMouseEnter",
    "current",
    "handleMouseLeave",
    "marginRight",
    "marginBottom",
    "borderRadius",
    "boxSizing",
    "height",
    "width",
    "zIndex",
    "outline",
    "boxShadow"
  ],
  "mappings": ";;;;;;;;;;;;;AAAA;;;;AAQe,SAASA,KAAT,OAAiF;AAAA,MAAhEC,KAAgE,QAAhEA,KAAgE;AAAA,MAAzDC,KAAyD,QAAzDA,KAAyD;AAAA,MAAlDC,OAAkD,QAAlDA,OAAkD;AAAA,MAAzCC,KAAyC,QAAzCA,KAAyC;AAAA,MAAlCC,OAAkC,QAAlCA,OAAkC;AAAA,MAAzBC,SAAyB,QAAzBA,SAAyB;AAC9F,MAAMC,GAAG,GAAG,mBAAuB,IAAvB,CAAZ;AACA,MAAMC,gBAAgB,GAAG,wBAAY,YAAM;AACzCD,IAAAA,GAAG,CAACE,OAAJ,CAAaR,KAAb,CAAmB,QAAnB,IAA+B,GAA/B;AACAM,IAAAA,GAAG,CAACE,OAAJ,CAAaR,KAAb,CAAmB,SAAnB,IAAgC,gBAAhC;AACAM,IAAAA,GAAG,CAACE,OAAJ,CAAaR,KAAb,CAAmB,WAAnB,IAAkC,8BAAlC;AACD,GAJwB,EAItB,EAJsB,CAAzB;AAMA,MAAMS,gBAAgB,GAAG,wBAAY,YAAM;AACzC,QAAI,CAACP,OAAL,EAAc;AACZI,MAAAA,GAAG,CAACE,OAAJ,CAAaR,KAAb,CAAmB,QAAnB,IAA+B,GAA/B;AACAM,MAAAA,GAAG,CAACE,OAAJ,CAAaR,KAAb,CAAmB,SAAnB,IAAgC,SAAhC;AACAM,MAAAA,GAAG,CAACE,OAAJ,CAAaR,KAAb,CAAmB,WAAnB,IAAkC,SAAlC;AACD;AACF,GANwB,EAMtB,CAACE,OAAD,CANsB,CAAzB;AAQA,sBACE;AACE,IAAA,GAAG,EAAEI,GADP;AAEE,IAAA,KAAK,EAAEL;AAFT,KAGMI,SAHN;AAIE,IAAA,OAAO,EAAED,OAJX;AAKE,IAAA,YAAY,EAAEG,gBALhB;AAME,IAAA,YAAY,EAAEE,gBANhB;AAOE,IAAA,KAAK,mGACAT,KADA;AAEHU,MAAAA,WAAW,EAAE,CAFV;AAGHC,MAAAA,YAAY,EAAE,CAHX;AAIHC,MAAAA,YAAY,EAAE,CAJX;AAKHC,MAAAA,SAAS,EAAE,YALR;AAMHC,MAAAA,MAAM,EAAE,EANL;AAOHC,MAAAA,KAAK,EAAE;AAPJ,OAQCb,OAAO,GACP;AACEc,MAAAA,MAAM,EAAE,CADV;AAEEC,MAAAA,OAAO,EAAE,gBAFX;AAGEC,MAAAA,SAAS,EAAE;AAHb,KADO,GAMP;AACEF,MAAAA,MAAM,EAAE;AADV,KAdD,GAiBAX,SAAS,CAAEL,KAjBX;AAPP,KADF;AA6BD",
  "sourcesContent": [
    "import React, { useCallback } from 'react';\nimport { SwatchRectRenderProps, SwatchProps } from '@uiw/react-color-swatch';\nimport { useRef } from 'react';\n\ninterface PointProps extends SwatchRectRenderProps {\n  rectProps?: SwatchProps['rectProps'];\n}\n\nexport default function Point({ style, title, checked, color, onClick, rectProps }: PointProps) {\n  const btn = useRef<HTMLDivElement>(null);\n  const handleMouseEnter = useCallback(() => {\n    btn.current!.style['zIndex'] = '2';\n    btn.current!.style['outline'] = '#fff solid 2px';\n    btn.current!.style['boxShadow'] = 'rgb(0 0 0 / 25%) 0 0 5px 2px';\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    if (!checked) {\n      btn.current!.style['zIndex'] = '0';\n      btn.current!.style['outline'] = 'initial';\n      btn.current!.style['boxShadow'] = 'initial';\n    }\n  }, [checked]);\n\n  return (\n    <div\n      ref={btn}\n      title={title}\n      {...rectProps}\n      onClick={onClick}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      style={{\n        ...style,\n        marginRight: 0,\n        marginBottom: 0,\n        borderRadius: 0,\n        boxSizing: 'border-box',\n        height: 25,\n        width: 25,\n        ...(checked\n          ? {\n              zIndex: 1,\n              outline: '#fff solid 2px',\n              boxShadow: 'rgb(0 0 0 / 25%) 0 0 5px 2px',\n            }\n          : {\n              zIndex: 0,\n            }),\n        ...rectProps!.style,\n      }}\n    ></div>\n  );\n}\n"
  ]
}