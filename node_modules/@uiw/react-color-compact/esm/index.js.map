{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "useCallback",
    "color",
    "handleColor",
    "hexToHsva",
    "validHex",
    "hsvaToHex",
    "getContrastingColor",
    "EditableInput",
    "RGBA",
    "Swatch",
    "COLORS",
    "Point",
    "props",
    "checked",
    "height",
    "width",
    "borderRadius",
    "backgroundColor",
    "Compact",
    "forwardRef",
    "ref",
    "prefixCls",
    "className",
    "style",
    "onChange",
    "colors",
    "other",
    "hsva",
    "hex",
    "replace",
    "handleChangeCallback",
    "hsv",
    "handleHex",
    "value",
    "evn",
    "test",
    "String",
    "length",
    "rgbProps",
    "alignItems",
    "inputStyle",
    "boxShadow",
    "outline",
    "background",
    "display",
    "flexWrap",
    "paddingTop",
    "paddingLeft",
    "filter",
    "Boolean",
    "join",
    "undefined",
    "children",
    "justifyContent",
    "hsvColor",
    "margin",
    "val",
    "paddingRight",
    "marginTop",
    "toLocaleUpperCase",
    "flexDirection",
    "flex",
    "minWidth",
    "result",
    "displayName"
  ],
  "mappings": "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",
  "sourcesContent": [
    "import React, { useCallback } from 'react';\nimport {\n  ColorResult,\n  color as handleColor,\n  hexToHsva,\n  validHex,\n  HsvaColor,\n  hsvaToHex,\n  getContrastingColor,\n} from '@uiw/color-convert';\nimport EditableInput from '@uiw/react-color-editable-input';\nimport RGBA from '@uiw/react-color-editable-input-rgba';\nimport Swatch from '@uiw/react-color-swatch';\n\nexport interface CompactProps<T> extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange' | 'color'> {\n  prefixCls?: string;\n  color?: string | HsvaColor;\n  colors?: string[];\n  onChange?: (color: ColorResult, evn?: T) => void;\n}\n\nconst COLORS = [\n  '#4D4D4D',\n  '#999999',\n  '#FFFFFF',\n  '#F44E3B',\n  '#FE9200',\n  '#FCDC00',\n  '#DBDF00',\n  '#A4DD00',\n  '#68CCCA',\n  '#73D8FF',\n  '#AEA1FF',\n  '#FDA1FF',\n  '#333333',\n  '#808080',\n  '#cccccc',\n  '#D33115',\n  '#E27300',\n  '#FCC400',\n  '#B0BC00',\n  '#68BC00',\n  '#16A5A5',\n  '#009CE0',\n  '#7B64FF',\n  '#FA28FF',\n  '#000000',\n  '#666666',\n  '#B3B3B3',\n  '#9F0500',\n  '#C45100',\n  '#FB9E00',\n  '#808900',\n  '#194D33',\n  '#0C797D',\n  '#0062B1',\n  '#653294',\n  '#AB149E',\n];\n\nfunction Point(props: { color?: string; checked?: boolean }) {\n  if (!props.checked) return null;\n  return (\n    <div\n      style={{\n        height: 5,\n        width: 5,\n        borderRadius: '50%',\n        backgroundColor: getContrastingColor(props.color!),\n      }}\n    />\n  );\n}\n\nconst Compact = React.forwardRef<HTMLDivElement, CompactProps<React.MouseEvent<HTMLDivElement, MouseEvent>>>((props, ref) => {\n  const { prefixCls = 'w-color-compact', className, style, onChange, color, colors = COLORS, ...other } = props;\n  const hsva = (typeof color === 'string' && validHex(color) ? hexToHsva(color) : color) as HsvaColor;\n  const hex = color ? hsvaToHex(hsva).replace(/^#/, '') : '';\n  const handleChangeCallback = useCallback((hsv: HsvaColor) => onChange && onChange(handleColor(hsv)), []);\n  const handleHex = (value: string | number, evn: React.ChangeEvent<HTMLInputElement>) => {\n    if (typeof value === 'string' && validHex(value) && /(3|6)/.test(String(value.length))) {\n      handleChangeCallback(hexToHsva(value));\n    }\n  };\n  const rgbProps = {\n    style: {\n      alignItems: 'baseline',\n    },\n    inputStyle: { boxShadow: 'none', backgroundColor: 'transparent', outline: 0 },\n  };\n  return (\n    <div\n      ref={ref}\n      style={{\n        background: '#f6f6f6',\n        borderRadius: 3,\n        display: 'flex',\n        width: 240,\n        flexWrap: 'wrap',\n        paddingTop: 5,\n        paddingLeft: 5,\n        ...style,\n      }}\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      {...other}\n    >\n      <Swatch\n        colors={colors}\n        color={color ? hsvaToHex(hsva) : undefined}\n        rectProps={{\n          children: <Point />,\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          },\n        }}\n        onChange={(hsvColor) => handleChangeCallback(hsvColor)}\n      />\n      <div style={{ display: 'flex', margin: '0 4px 3px 0' }}>\n        <EditableInput\n          onChange={(evn, val) => handleHex(val, evn)}\n          labelStyle={{ paddingRight: 5, marginTop: -1 }}\n          value={hex.toLocaleUpperCase()}\n          label={<div style={{ width: 8, height: 8, backgroundColor: `#${hex}` }} />}\n          inputStyle={{\n            outline: 'none',\n            boxShadow: 'initial',\n            background: 'transparent',\n          }}\n          style={{\n            flexDirection: 'row-reverse',\n            flex: '1 1 0%',\n            minWidth: 80,\n          }}\n        />\n        <RGBA\n          hsva={hsva}\n          placement=\"left\"\n          onChange={(result) => handleChangeCallback(result.hsva)}\n          aProps={false}\n          rProps={rgbProps}\n          gProps={rgbProps}\n          bProps={rgbProps}\n        />\n      </div>\n    </div>\n  );\n});\n\nCompact.displayName = 'Compact';\n\nexport default Compact;\n"
  ]
}